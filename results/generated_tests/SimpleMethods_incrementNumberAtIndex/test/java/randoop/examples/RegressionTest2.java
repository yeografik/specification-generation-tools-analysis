package examples;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods47.incrementNumberAtIndex(intArray75, 0);
        simpleMethods40.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, 0);
        java.lang.Class<?> wildcardClass93 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        int[] intArray57 = new int[] { (-10), 4, 8 };
        simpleMethods0.incrementNumberAtIndex(intArray57, 2);
        java.lang.Class<?> wildcardClass60 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-10, 4, 9]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods36.incrementNumberAtIndex(intArray71, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (short) 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods66.incrementNumberAtIndex(intArray79, (int) (short) 0);
        simpleMethods51.incrementNumberAtIndex(intArray79, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray79, 0);
        java.lang.Class<?> wildcardClass92 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        java.lang.Class<?> wildcardClass83 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods36.incrementNumberAtIndex(intArray64, 0);
        simpleMethods0.incrementNumberAtIndex(intArray64, 0);
        java.lang.Class<?> wildcardClass75 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray38, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 97]");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        int[] intArray42 = new int[] { 7, (-10) };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray42, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[7, -10]");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 0);
        simpleMethods63.incrementNumberAtIndex(intArray76, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[39, 2, 97]");
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        int[] intArray76 = new int[] { 10, (-8) };
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[11, -8]");
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 0);
        simpleMethods74.incrementNumberAtIndex(intArray87, 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass98 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods48.incrementNumberAtIndex(intArray79, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[39, 2, 97]");
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods67.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        java.lang.Class<?> wildcardClass93 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods35.incrementNumberAtIndex(intArray73, 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        int[] intArray83 = new int[] { '#' };
        simpleMethods16.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        int[] intArray90 = new int[] { (-7), (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray90, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-6, -10]");
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods34.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods47.incrementNumberAtIndex(intArray74, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[39, 4, 97]");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray74, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, 2);
        java.lang.Class<?> wildcardClass48 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 99]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods26.incrementNumberAtIndex(intArray54, 0);
        simpleMethods19.incrementNumberAtIndex(intArray54, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[39, 3, 97]");
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        int[] intArray93 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods80.incrementNumberAtIndex(intArray93, 5);
        simpleMethods64.incrementNumberAtIndex(intArray93, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray72, 0);
        simpleMethods34.incrementNumberAtIndex(intArray72, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray39, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods36.incrementNumberAtIndex(intArray64, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods29.incrementNumberAtIndex(intArray47, 0);
        simpleMethods22.incrementNumberAtIndex(intArray47, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray47, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods56.incrementNumberAtIndex(intArray85, (int) (short) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (short) 0);
        simpleMethods39.incrementNumberAtIndex(intArray85, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray79, 4);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray86 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[35, 8, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[]");
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods64.incrementNumberAtIndex(intArray77, 5);
        simpleMethods49.incrementNumberAtIndex(intArray77, 0);
        simpleMethods0.incrementNumberAtIndex(intArray77, 1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods49.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods71.incrementNumberAtIndex(intArray84, 0);
        simpleMethods49.incrementNumberAtIndex(intArray84, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[39, 3, 97]");
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 1);
        int[] intArray78 = new int[] { (byte) 1, 0, (short) 10, 8 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 0, 10, 8]");
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods1.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray79, 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray94 = new int[] { (-100), 'a', (byte) 0, '#', 0, 10 };
        simpleMethods0.incrementNumberAtIndex(intArray94, (int) (byte) 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[-99, 97, 0, 35, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray36, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods34.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods15.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 5);
        int[] intArray89 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -8, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[]");
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        simpleMethods39.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (short) 0);
        java.lang.Class<?> wildcardClass86 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        simpleMethods19.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 1);
        simpleMethods51.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods44.incrementNumberAtIndex(intArray78, 1);
        simpleMethods19.incrementNumberAtIndex(intArray78, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[39, 4, 97]");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        simpleMethods38.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods16.incrementNumberAtIndex(intArray74, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[38, 3, 97]");
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 3);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        java.lang.Class<?> wildcardClass60 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 1);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        simpleMethods17.incrementNumberAtIndex(intArray74, 0);
        int[] intArray84 = new int[] { '#' };
        simpleMethods17.incrementNumberAtIndex(intArray84, 0);
        simpleMethods1.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[37]");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods25.incrementNumberAtIndex(intArray57, (int) (byte) 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods25.incrementNumberAtIndex(intArray68, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[37, 2, 97]");
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 1);
        simpleMethods19.incrementNumberAtIndex(intArray64, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods73.incrementNumberAtIndex(intArray86, 0);
        simpleMethods19.incrementNumberAtIndex(intArray86, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[39, 3, 97]");
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        int[] intArray57 = new int[] { (-10), 4, 8 };
        simpleMethods0.incrementNumberAtIndex(intArray57, 2);
        java.lang.Class<?> wildcardClass60 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-10, 4, 9]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray72, 0);
        simpleMethods34.incrementNumberAtIndex(intArray72, 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 0);
        java.lang.Class<?> wildcardClass81 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods42.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        simpleMethods54.incrementNumberAtIndex(intArray88, 4);
        simpleMethods0.incrementNumberAtIndex(intArray88, 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[36, 7, -1, 1, -6]");
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods51.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray92 = new int[] { 7, (short) 0, 2, (-100), 10 };
        simpleMethods0.incrementNumberAtIndex(intArray92, 4);
        java.lang.Class<?> wildcardClass95 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[7, 0, 2, -100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray81 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods69.incrementNumberAtIndex(intArray81, (int) (byte) 1);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods32.incrementNumberAtIndex(intArray60, 0);
        simpleMethods25.incrementNumberAtIndex(intArray60, 2);
        simpleMethods0.incrementNumberAtIndex(intArray60, 0);
        java.lang.Class<?> wildcardClass69 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray39, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods55.incrementNumberAtIndex(intArray69, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray69, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[37, 3, 97]");
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods33.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 1);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods42.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        java.lang.Class<?> wildcardClass77 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods38.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods68.incrementNumberAtIndex(intArray86, 0);
        simpleMethods61.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[40, 2, 97]");
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods67.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        simpleMethods15.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods15.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods49.incrementNumberAtIndex(intArray77, 0);
        simpleMethods15.incrementNumberAtIndex(intArray77, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 3, 97]");
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods66.incrementNumberAtIndex(intArray79, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[39, 2, 97]");
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 1);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods17.incrementNumberAtIndex(intArray48, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray90 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods78.incrementNumberAtIndex(intArray90, (int) (byte) 1);
        simpleMethods59.incrementNumberAtIndex(intArray90, 0);
        simpleMethods1.incrementNumberAtIndex(intArray90, 0);
        simpleMethods0.incrementNumberAtIndex(intArray90, 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 1);
        simpleMethods19.incrementNumberAtIndex(intArray64, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 4, 97]");
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        java.lang.Class<?> wildcardClass60 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray87 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods75.incrementNumberAtIndex(intArray87, (int) (byte) 1);
        simpleMethods56.incrementNumberAtIndex(intArray87, 0);
        simpleMethods55.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 1);
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray65, 2);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 1);
        java.lang.Class<?> wildcardClass78 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 3, 98]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods45.incrementNumberAtIndex(intArray73, 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, 3);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, -9, 0, 1, 100, 11]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 2, 97]");
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods64.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[38, 2, 97]");
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods34.incrementNumberAtIndex(intArray48, (int) (byte) 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods53.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods53.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray86, 1);
        simpleMethods19.incrementNumberAtIndex(intArray86, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[34, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        java.lang.Class<?> wildcardClass87 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray86, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 3, 97]");
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray74, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray20 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods7.incrementNumberAtIndex(intArray20, 5);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods58.incrementNumberAtIndex(intArray87, (int) (short) 1);
        simpleMethods7.incrementNumberAtIndex(intArray87, 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (short) 1);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray7, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 2);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        simpleMethods57.incrementNumberAtIndex(intArray70, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[39, 2, 97]");
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods1.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray79, 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray94 = new int[] { (-100), 'a', (byte) 0, '#', 0, 10 };
        simpleMethods0.incrementNumberAtIndex(intArray94, (int) (byte) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[-99, 97, 0, 35, 0, 10]");
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods35.incrementNumberAtIndex(intArray73, 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        int[] intArray83 = new int[] { '#' };
        simpleMethods16.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37]");
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods54.incrementNumberAtIndex(intArray87, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[38, 2, 97]");
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods39.incrementNumberAtIndex(intArray67, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        simpleMethods39.incrementNumberAtIndex(intArray70, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 3, 97]");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods32.incrementNumberAtIndex(intArray60, 0);
        simpleMethods25.incrementNumberAtIndex(intArray60, 2);
        simpleMethods0.incrementNumberAtIndex(intArray60, 0);
        java.lang.Class<?> wildcardClass69 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray20 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods7.incrementNumberAtIndex(intArray20, 5);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods58.incrementNumberAtIndex(intArray87, (int) (short) 1);
        simpleMethods7.incrementNumberAtIndex(intArray87, 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (short) 1);
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods39.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods39.incrementNumberAtIndex(intArray89, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        simpleMethods39.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (short) 0);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[37, 2, 97]");
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        simpleMethods19.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods51.incrementNumberAtIndex(intArray79, 0);
        simpleMethods44.incrementNumberAtIndex(intArray79, 2);
        simpleMethods19.incrementNumberAtIndex(intArray79, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods37.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods37.incrementNumberAtIndex(intArray77, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 98]");
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods48.incrementNumberAtIndex(intArray79, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[39, 2, 97]");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray23, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods36.incrementNumberAtIndex(intArray71, 2);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        examples.SimpleMethods simpleMethods85 = new examples.SimpleMethods();
        int[] intArray89 = new int[] { '#', 2, 'a' };
        simpleMethods85.incrementNumberAtIndex(intArray89, 0);
        simpleMethods78.incrementNumberAtIndex(intArray89, 0);
        simpleMethods36.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        java.lang.Class<?> wildcardClass98 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 3);
        java.lang.Class<?> wildcardClass53 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods50.incrementNumberAtIndex(intArray68, 0);
        simpleMethods43.incrementNumberAtIndex(intArray68, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[39, 2, 97]");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods1.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray79, 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray94 = new int[] { (-100), 'a', (byte) 0, '#', 0, 10 };
        simpleMethods0.incrementNumberAtIndex(intArray94, (int) (byte) 0);
        java.lang.Class<?> wildcardClass97 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[-99, 97, 0, 35, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 1);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        simpleMethods25.incrementNumberAtIndex(intArray37, 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 0);
        simpleMethods44.incrementNumberAtIndex(intArray57, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray57, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[40, 2, 97]");
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods66.incrementNumberAtIndex(intArray79, (int) (short) 0);
        simpleMethods51.incrementNumberAtIndex(intArray79, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray79, 0);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        java.lang.Class<?> wildcardClass55 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 3);
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        simpleMethods39.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (short) 0);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[37, 2, 97]");
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 0);
        simpleMethods46.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods68.incrementNumberAtIndex(intArray81, 0);
        simpleMethods46.incrementNumberAtIndex(intArray81, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[39, 3, 97]");
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods38.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 3, 97]");
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods42.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods46.incrementNumberAtIndex(intArray64, 0);
        simpleMethods39.incrementNumberAtIndex(intArray64, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods36.incrementNumberAtIndex(intArray64, 0);
        simpleMethods0.incrementNumberAtIndex(intArray64, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods71.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (short) 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 2, 97]");
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 2);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        simpleMethods57.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray91 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods79.incrementNumberAtIndex(intArray91, (int) (byte) 1);
        simpleMethods57.incrementNumberAtIndex(intArray91, 4);
        simpleMethods0.incrementNumberAtIndex(intArray91, (int) (short) 1);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[35, 8, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        java.lang.Class<?> wildcardClass63 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        simpleMethods22.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods22.incrementNumberAtIndex(intArray89, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        int[] intArray39 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods27.incrementNumberAtIndex(intArray39, (int) (byte) 1);
        simpleMethods8.incrementNumberAtIndex(intArray39, 0);
        simpleMethods1.incrementNumberAtIndex(intArray39, 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 0);
        simpleMethods46.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods68.incrementNumberAtIndex(intArray81, 0);
        simpleMethods46.incrementNumberAtIndex(intArray81, (int) (short) 1);
        simpleMethods1.incrementNumberAtIndex(intArray81, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[40, 3, 97]");
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray62, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods40.incrementNumberAtIndex(intArray80, 2);
        simpleMethods39.incrementNumberAtIndex(intArray80, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 99]");
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray39, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 0);
        simpleMethods56.incrementNumberAtIndex(intArray87, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass98 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods36.incrementNumberAtIndex(intArray71, 2);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        examples.SimpleMethods simpleMethods85 = new examples.SimpleMethods();
        int[] intArray89 = new int[] { '#', 2, 'a' };
        simpleMethods85.incrementNumberAtIndex(intArray89, 0);
        simpleMethods78.incrementNumberAtIndex(intArray89, 0);
        simpleMethods36.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods51.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods73.incrementNumberAtIndex(intArray86, 0);
        simpleMethods51.incrementNumberAtIndex(intArray86, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[39, 3, 97]");
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 0);
        simpleMethods43.incrementNumberAtIndex(intArray74, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[38, 3, 97]");
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        simpleMethods0.incrementNumberAtIndex(intArray58, 5);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray75 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods63.incrementNumberAtIndex(intArray75, (int) (byte) 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods63.incrementNumberAtIndex(intArray91, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods45.incrementNumberAtIndex(intArray73, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        simpleMethods0.incrementNumberAtIndex(intArray58, 5);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray75 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods63.incrementNumberAtIndex(intArray75, (int) (byte) 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods63.incrementNumberAtIndex(intArray91, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        java.lang.Class<?> wildcardClass98 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods51.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 2);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        simpleMethods57.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray91 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods79.incrementNumberAtIndex(intArray91, (int) (byte) 1);
        simpleMethods57.incrementNumberAtIndex(intArray91, 4);
        simpleMethods0.incrementNumberAtIndex(intArray91, (int) (short) 1);
        java.lang.Class<?> wildcardClass98 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[35, 8, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        java.lang.Class<?> wildcardClass40 = intArray35.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        java.lang.Class<?> wildcardClass55 = intArray50.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        int[] intArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray45, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 5);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray77 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods65.incrementNumberAtIndex(intArray77, (int) (byte) 1);
        simpleMethods46.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods46.incrementNumberAtIndex(intArray86, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 2, 98]");
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        java.lang.Class<?> wildcardClass63 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        simpleMethods39.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 4, 97]");
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        int[] intArray95 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods82.incrementNumberAtIndex(intArray95, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray76, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 1);
        simpleMethods16.incrementNumberAtIndex(intArray63, 5);
        simpleMethods0.incrementNumberAtIndex(intArray63, 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods34.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods15.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -7, 0, 0, 100, 11]");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods50.incrementNumberAtIndex(intArray64, (int) (byte) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods69.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods50.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        java.lang.Class<?> wildcardClass43 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 3, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 3, 97]");
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        simpleMethods50.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods72.incrementNumberAtIndex(intArray85, 0);
        simpleMethods50.incrementNumberAtIndex(intArray85, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 3, 97]");
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray74, 4);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray91 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods79.incrementNumberAtIndex(intArray91, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray91, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 99]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (short) 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 2, 97]");
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods50.incrementNumberAtIndex(intArray79, (int) (short) 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, (int) (short) 0);
        simpleMethods33.incrementNumberAtIndex(intArray79, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 1);
        simpleMethods35.incrementNumberAtIndex(intArray82, 5);
        simpleMethods19.incrementNumberAtIndex(intArray82, 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (short) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[32, -7, 0, 0, 100, 12]");
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray65, 2);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 1);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 3, 98]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[37, 3, 97]");
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods54.incrementNumberAtIndex(intArray87, 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[39, 2, 97]");
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods68.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods35.incrementNumberAtIndex(intArray81, 2);
        simpleMethods16.incrementNumberAtIndex(intArray81, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[39, 3, 98]");
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods37.incrementNumberAtIndex(intArray68, 0);
        simpleMethods36.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods48.incrementNumberAtIndex(intArray79, 0);
        simpleMethods33.incrementNumberAtIndex(intArray79, 3);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 1);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods17.incrementNumberAtIndex(intArray48, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray90 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods78.incrementNumberAtIndex(intArray90, (int) (byte) 1);
        simpleMethods59.incrementNumberAtIndex(intArray90, 0);
        simpleMethods1.incrementNumberAtIndex(intArray90, 0);
        simpleMethods0.incrementNumberAtIndex(intArray90, 1);
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 0);
        simpleMethods19.incrementNumberAtIndex(intArray66, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods67.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 3, 97]");
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray87 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods75.incrementNumberAtIndex(intArray87, (int) (byte) 1);
        simpleMethods56.incrementNumberAtIndex(intArray87, 0);
        simpleMethods49.incrementNumberAtIndex(intArray87, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods33.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods52.incrementNumberAtIndex(intArray66, (int) (byte) 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods71.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        simpleMethods52.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        simpleMethods33.incrementNumberAtIndex(intArray85, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray48, 0);
        java.lang.Class<?> wildcardClass61 = intArray48.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        int[] intArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray37, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        simpleMethods39.incrementNumberAtIndex(intArray71, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 4);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[37, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods32.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        simpleMethods32.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray63, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[40, 2, 97]");
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods43.incrementNumberAtIndex(intArray61, 0);
        simpleMethods36.incrementNumberAtIndex(intArray61, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray61, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[39, 2, 97]");
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        java.lang.Class<?> wildcardClass83 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 99]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, 0);
        simpleMethods40.incrementNumberAtIndex(intArray87, 5);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[34, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods32.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray61, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 1);
        simpleMethods36.incrementNumberAtIndex(intArray63, (int) (short) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods36.incrementNumberAtIndex(intArray84, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[39, 2, 97]");
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods70.incrementNumberAtIndex(intArray83, 0);
        simpleMethods54.incrementNumberAtIndex(intArray83, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[40, 2, 97]");
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods33.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 3, 97]");
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods65.incrementNumberAtIndex(intArray78, 0);
        simpleMethods43.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods36.incrementNumberAtIndex(intArray78, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[39, 3, 98]");
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods47.incrementNumberAtIndex(intArray74, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray74, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[38, 4, 97]");
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods32.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray61, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        java.lang.Class<?> wildcardClass70 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods32.incrementNumberAtIndex(intArray60, 0);
        simpleMethods25.incrementNumberAtIndex(intArray60, 2);
        simpleMethods0.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (short) 1);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 5);
        java.lang.Class<?> wildcardClass89 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        int[] intArray37 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods25.incrementNumberAtIndex(intArray37, (int) (byte) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods25.incrementNumberAtIndex(intArray53, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods25.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        simpleMethods39.incrementNumberAtIndex(intArray71, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 4);
        java.lang.Class<?> wildcardClass80 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[37, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray36 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods23.incrementNumberAtIndex(intArray36, 5);
        simpleMethods8.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods8.incrementNumberAtIndex(intArray86, 0);
        simpleMethods1.incrementNumberAtIndex(intArray86, 1);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 9, -1, 1, -7]");
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        java.lang.Class<?> wildcardClass78 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods42.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        java.lang.Class<?> wildcardClass86 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray39, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 1);
        simpleMethods48.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods41.incrementNumberAtIndex(intArray75, 1);
        simpleMethods16.incrementNumberAtIndex(intArray75, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[39, 4, 97]");
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        int[] intArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray33, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        int[] intArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray15, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, 2);
        java.lang.Class<?> wildcardClass48 = intArray41.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 99]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, 0);
        simpleMethods26.incrementNumberAtIndex(intArray64, 1);
        simpleMethods7.incrementNumberAtIndex(intArray64, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        java.lang.Class<?> wildcardClass58 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray49 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods37.incrementNumberAtIndex(intArray49, (int) (byte) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, 0);
        simpleMethods37.incrementNumberAtIndex(intArray83, 3);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray58 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods46.incrementNumberAtIndex(intArray58, (int) (byte) 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray74 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods61.incrementNumberAtIndex(intArray74, 5);
        simpleMethods46.incrementNumberAtIndex(intArray74, 0);
        simpleMethods39.incrementNumberAtIndex(intArray74, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray74, (int) (short) 1);
        int[] intArray83 = new int[] { 10, (-8) };
        simpleMethods7.incrementNumberAtIndex(intArray83, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[11, -8]");
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods49.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods33.incrementNumberAtIndex(intArray78, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods46.incrementNumberAtIndex(intArray64, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[38, 2, 97]");
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 0);
        simpleMethods43.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[40, 2, 97]");
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 1);
        simpleMethods51.incrementNumberAtIndex(intArray78, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[38, 3, 97]");
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods43.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 2, 97]");
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray56, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods36.incrementNumberAtIndex(intArray50, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods72.incrementNumberAtIndex(intArray85, (int) (short) 0);
        simpleMethods57.incrementNumberAtIndex(intArray85, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 3, 97]");
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        int[] intArray37 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods25.incrementNumberAtIndex(intArray37, (int) (byte) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods25.incrementNumberAtIndex(intArray53, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods25.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        java.lang.Class<?> wildcardClass77 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        java.lang.Class<?> wildcardClass43 = intArray34.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 0);
        simpleMethods45.incrementNumberAtIndex(intArray73, 0);
        simpleMethods0.incrementNumberAtIndex(intArray73, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[40, 2, 97]");
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray59 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods46.incrementNumberAtIndex(intArray59, 5);
        simpleMethods1.incrementNumberAtIndex(intArray59, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray59, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[32, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods43.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        java.lang.Class<?> wildcardClass85 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray64, 0);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods32.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray61, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[38, 2, 97]");
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray65, 2);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 3, 98]");
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray48, 0);
        java.lang.Class<?> wildcardClass61 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        simpleMethods39.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (short) 0);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[37, 2, 97]");
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray20, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods37.incrementNumberAtIndex(intArray68, (int) (short) 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods73.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        simpleMethods37.incrementNumberAtIndex(intArray87, (int) (short) 0);
        simpleMethods22.incrementNumberAtIndex(intArray87, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods74.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, 5);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray29 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods17.incrementNumberAtIndex(intArray29, (int) (byte) 1);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods17.incrementNumberAtIndex(intArray45, 0);
        simpleMethods1.incrementNumberAtIndex(intArray45, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, 0);
        simpleMethods1.incrementNumberAtIndex(intArray83, 3);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (short) 1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 8, -1, 2, -7]");
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods33.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 1);
        java.lang.Class<?> wildcardClass95 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 0);
        simpleMethods22.incrementNumberAtIndex(intArray57, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 1);
        simpleMethods53.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods46.incrementNumberAtIndex(intArray80, 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[38, 5, 97]");
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods40.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 1);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods41.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 0);
        simpleMethods63.incrementNumberAtIndex(intArray76, 0);
        simpleMethods41.incrementNumberAtIndex(intArray76, (int) (short) 1);
        simpleMethods34.incrementNumberAtIndex(intArray76, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[39, 3, 98]");
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods56.incrementNumberAtIndex(intArray84, 0);
        simpleMethods19.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods33.incrementNumberAtIndex(intArray80, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, (int) (short) 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods51.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        simpleMethods15.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        java.lang.Class<?> wildcardClass74 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 0);
        simpleMethods45.incrementNumberAtIndex(intArray73, 0);
        simpleMethods0.incrementNumberAtIndex(intArray73, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[40, 2, 97]");
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        int[] intArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray33, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        simpleMethods19.incrementNumberAtIndex(intArray37, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray37, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[38, 2, 97]");
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods40.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        java.lang.Class<?> wildcardClass82 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods34.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray65, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 2, 98]");
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 2, 97]");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods41.incrementNumberAtIndex(intArray72, (int) (byte) 0);
        simpleMethods25.incrementNumberAtIndex(intArray72, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[40, 2, 97]");
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray57, 0);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[37, 2, 97]");
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods58.incrementNumberAtIndex(intArray86, 0);
        simpleMethods51.incrementNumberAtIndex(intArray86, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods49.incrementNumberAtIndex(intArray62, (int) (short) 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods49.incrementNumberAtIndex(intArray84, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods38.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, 1);
        java.lang.Class<?> wildcardClass90 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        int[] intArray92 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods80.incrementNumberAtIndex(intArray92, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray92, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        simpleMethods26.incrementNumberAtIndex(intArray53, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods26.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        java.lang.Class<?> wildcardClass84 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods72.incrementNumberAtIndex(intArray85, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 2, 97]");
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        int[] intArray59 = new int[] { (-10), (short) 100, (short) 1, 5, (short) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray59, 0);
        java.lang.Class<?> wildcardClass62 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-9, 100, 1, 5, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods56.incrementNumberAtIndex(intArray84, 0);
        simpleMethods19.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods32.incrementNumberAtIndex(intArray60, 0);
        simpleMethods25.incrementNumberAtIndex(intArray60, 2);
        simpleMethods0.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, 0);
        simpleMethods40.incrementNumberAtIndex(intArray87, 5);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[34, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        int[] intArray57 = new int[] { (-10), 4, 8 };
        simpleMethods0.incrementNumberAtIndex(intArray57, 2);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 1);
        simpleMethods60.incrementNumberAtIndex(intArray87, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        java.lang.Class<?> wildcardClass98 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-10, 4, 9]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray20 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods7.incrementNumberAtIndex(intArray20, 5);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray36 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods23.incrementNumberAtIndex(intArray36, 5);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods39.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods23.incrementNumberAtIndex(intArray68, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray68, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        int[] intArray57 = new int[] { (-10), 4, 8 };
        simpleMethods0.incrementNumberAtIndex(intArray57, 2);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 1);
        simpleMethods60.incrementNumberAtIndex(intArray87, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-10, 4, 9]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 2, 97]");
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray80, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray29 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods17.incrementNumberAtIndex(intArray29, (int) (byte) 1);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods17.incrementNumberAtIndex(intArray45, 0);
        simpleMethods1.incrementNumberAtIndex(intArray45, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, 0);
        simpleMethods1.incrementNumberAtIndex(intArray83, 3);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        java.lang.Class<?> wildcardClass46 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray29 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods17.incrementNumberAtIndex(intArray29, (int) (byte) 1);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods17.incrementNumberAtIndex(intArray45, 0);
        simpleMethods1.incrementNumberAtIndex(intArray45, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, 0);
        simpleMethods1.incrementNumberAtIndex(intArray83, 3);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        java.lang.Class<?> wildcardClass92 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, 1);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods35.incrementNumberAtIndex(intArray73, 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        int[] intArray83 = new int[] { '#' };
        simpleMethods16.incrementNumberAtIndex(intArray83, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36]");
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods1.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray79, 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray94 = new int[] { (-100), 'a', (byte) 0, '#', 0, 10 };
        simpleMethods0.incrementNumberAtIndex(intArray94, (int) (byte) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[-99, 97, 0, 35, 0, 10]");
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods67.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 4);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[33, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods39.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray73, 4);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray90 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods78.incrementNumberAtIndex(intArray90, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray90, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray90, 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray64, 0);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods47.incrementNumberAtIndex(intArray75, 0);
        simpleMethods40.incrementNumberAtIndex(intArray75, 2);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods15.incrementNumberAtIndex(intArray46, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray46, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 97]");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods34.incrementNumberAtIndex(intArray66, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[40, 2, 97]");
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods34.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[37, 2, 97]");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        java.lang.Class<?> wildcardClass46 = intArray39.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, 1);
        simpleMethods40.incrementNumberAtIndex(intArray87, 5);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods32.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray61, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray68, 4);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods75.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 1);
        simpleMethods36.incrementNumberAtIndex(intArray63, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 3, 97]");
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods43.incrementNumberAtIndex(intArray81, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[39, 2, 98]");
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        simpleMethods25.incrementNumberAtIndex(intArray37, 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray82, 0);
        simpleMethods44.incrementNumberAtIndex(intArray82, 1);
        simpleMethods25.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        java.lang.Class<?> wildcardClass40 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        java.lang.Class<?> wildcardClass40 = intArray29.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods50.incrementNumberAtIndex(intArray64, (int) (byte) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods69.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods50.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray83, 1);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        java.lang.Class<?> wildcardClass94 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[35, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods16.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 1);
        java.lang.Class<?> wildcardClass78 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        int[] intArray37 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods25.incrementNumberAtIndex(intArray37, (int) (byte) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods25.incrementNumberAtIndex(intArray53, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods25.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods26.incrementNumberAtIndex(intArray54, 0);
        simpleMethods19.incrementNumberAtIndex(intArray54, (int) (short) 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 0);
        simpleMethods19.incrementNumberAtIndex(intArray89, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 0);
        simpleMethods22.incrementNumberAtIndex(intArray57, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 0);
        simpleMethods22.incrementNumberAtIndex(intArray76, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[38, 3, 97]");
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray95 = new int[] { 1, 1, 0 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[38, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[1, 1, 0]");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, 1);
        simpleMethods40.incrementNumberAtIndex(intArray87, 5);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 0);
        simpleMethods45.incrementNumberAtIndex(intArray73, 0);
        simpleMethods0.incrementNumberAtIndex(intArray73, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[40, 2, 97]");
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods52.incrementNumberAtIndex(intArray66, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods16.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 1);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        java.lang.Class<?> wildcardClass40 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, (int) (short) 1);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 3, 97]");
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods39.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 0);
        simpleMethods61.incrementNumberAtIndex(intArray74, 0);
        simpleMethods39.incrementNumberAtIndex(intArray74, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[39, 3, 97]");
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray48, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods50.incrementNumberAtIndex(intArray64, (int) (byte) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods69.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods50.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray83, 1);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[35, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 0);
        simpleMethods56.incrementNumberAtIndex(intArray87, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray80 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods68.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods46.incrementNumberAtIndex(intArray77, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 2, 97]");
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray42, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray57, 0);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods36.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods36.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods39.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray73, 4);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray90 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods78.incrementNumberAtIndex(intArray90, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray90, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray90, 1);
        java.lang.Class<?> wildcardClass97 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods40.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        java.lang.Class<?> wildcardClass39 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, (int) (short) 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods51.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        simpleMethods15.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray58 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray58, (int) (short) 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods68.incrementNumberAtIndex(intArray86, 0);
        simpleMethods61.incrementNumberAtIndex(intArray86, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 0, -7]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[39, 2, 97]");
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray72, 0);
        simpleMethods34.incrementNumberAtIndex(intArray72, 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 0);
        int[] intArray82 = new int[] { (short) -1 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1]");
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray58 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray58, (int) (short) 1);
        java.lang.Class<?> wildcardClass61 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 0, -7]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods47.incrementNumberAtIndex(intArray75, 0);
        simpleMethods40.incrementNumberAtIndex(intArray75, 2);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods51.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods76.incrementNumberAtIndex(intArray90, (int) (byte) 0);
        simpleMethods51.incrementNumberAtIndex(intArray90, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        int[] intArray44 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, -1, 8, -10]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods67.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 2, 97]");
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray78 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods66.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods85 = new examples.SimpleMethods();
        int[] intArray89 = new int[] { '#', 2, 'a' };
        simpleMethods85.incrementNumberAtIndex(intArray89, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 2, 97]");
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods47.incrementNumberAtIndex(intArray74, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[39, 4, 97]");
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        int[] intArray59 = new int[] { (-10), (short) 100, (short) 1, 5, (short) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray59, 0);
        int[] intArray65 = new int[] { (short) 0, (-7), (-8) };
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-9, 100, 1, 5, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, -6, -8]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods48.incrementNumberAtIndex(intArray79, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[39, 2, 97]");
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        int[] intArray44 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        java.lang.Class<?> wildcardClass47 = intArray44.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, -1, 8, -10]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods38.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray83, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        simpleMethods26.incrementNumberAtIndex(intArray53, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods26.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods32.incrementNumberAtIndex(intArray60, 0);
        simpleMethods25.incrementNumberAtIndex(intArray60, 2);
        simpleMethods0.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (short) 1);
        java.lang.Class<?> wildcardClass87 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods74.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, 5);
        java.lang.Class<?> wildcardClass95 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods35.incrementNumberAtIndex(intArray73, 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        int[] intArray83 = new int[] { '#' };
        simpleMethods16.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        int[] intArray90 = new int[] { (-7), (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray90, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-6, -10]");
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray25, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray91 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods79.incrementNumberAtIndex(intArray91, (int) (byte) 1);
        simpleMethods60.incrementNumberAtIndex(intArray91, 0);
        simpleMethods45.incrementNumberAtIndex(intArray91, 3);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods1.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray79, 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods39.incrementNumberAtIndex(intArray53, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        java.lang.Class<?> wildcardClass60 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods16.incrementNumberAtIndex(intArray51, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray35, 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 0);
        simpleMethods46.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods68.incrementNumberAtIndex(intArray81, 0);
        simpleMethods46.incrementNumberAtIndex(intArray81, (int) (short) 1);
        simpleMethods1.incrementNumberAtIndex(intArray81, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[40, 3, 97]");
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods39.incrementNumberAtIndex(intArray53, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        java.lang.Class<?> wildcardClass60 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 0);
        simpleMethods46.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods68.incrementNumberAtIndex(intArray81, 0);
        simpleMethods46.incrementNumberAtIndex(intArray81, (int) (short) 1);
        simpleMethods39.incrementNumberAtIndex(intArray81, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[39, 3, 98]");
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray56 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods44.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods44.incrementNumberAtIndex(intArray72, 0);
        simpleMethods37.incrementNumberAtIndex(intArray72, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        int[] intArray82 = new int[] { (-6) };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-6]");
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods79.incrementNumberAtIndex(intArray92, 5);
        simpleMethods64.incrementNumberAtIndex(intArray92, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        java.lang.Class<?> wildcardClass61 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods36.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods36.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 0);
        simpleMethods45.incrementNumberAtIndex(intArray76, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[39, 3, 97]");
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods16.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        simpleMethods28.incrementNumberAtIndex(intArray39, 0);
        simpleMethods27.incrementNumberAtIndex(intArray39, 0);
        simpleMethods26.incrementNumberAtIndex(intArray39, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray39, (int) (short) 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[41, 2, 97]");
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        java.lang.Class<?> wildcardClass43 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods35.incrementNumberAtIndex(intArray73, 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        int[] intArray83 = new int[] { '#' };
        simpleMethods16.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        int[] intArray90 = new int[] { (-7), (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray90, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-6, -10]");
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        int[] intArray24 = new int[] { (-7), 10, (byte) -1, 6, 1 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray24, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-7, 10, -1, 6, 1]");
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods67.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 2, 97]");
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray65, 2);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 3, 98]");
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 0);
        simpleMethods42.incrementNumberAtIndex(intArray73, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[38, 3, 97]");
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37, 2, 97]");
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 0);
        simpleMethods36.incrementNumberAtIndex(intArray83, 5);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        int[] intArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        java.lang.Class<?> wildcardClass58 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 0);
        simpleMethods45.incrementNumberAtIndex(intArray73, 0);
        simpleMethods0.incrementNumberAtIndex(intArray73, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[40, 2, 97]");
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 0);
        simpleMethods45.incrementNumberAtIndex(intArray76, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[39, 3, 97]");
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        simpleMethods43.incrementNumberAtIndex(intArray89, 3);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        int[] intArray76 = new int[] { 10, (-8) };
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        examples.SimpleMethods simpleMethods87 = new examples.SimpleMethods();
        int[] intArray91 = new int[] { '#', 2, 'a' };
        simpleMethods87.incrementNumberAtIndex(intArray91, 0);
        simpleMethods80.incrementNumberAtIndex(intArray91, 0);
        simpleMethods79.incrementNumberAtIndex(intArray91, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[11, -8]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[37, 3, 97]");
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        simpleMethods26.incrementNumberAtIndex(intArray53, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods26.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[36, 2, 97]");
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        simpleMethods23.incrementNumberAtIndex(intArray54, 0);
        simpleMethods16.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 1);
        simpleMethods16.incrementNumberAtIndex(intArray89, 3);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[32, -9, 0, 1, 100, 11]");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods56.incrementNumberAtIndex(intArray84, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods38.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 1);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray61, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray20, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 3, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 3, 97]");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        simpleMethods22.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods22.incrementNumberAtIndex(intArray71, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods16.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 1);
        simpleMethods56.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        java.lang.Class<?> wildcardClass96 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods0.incrementNumberAtIndex(intArray90, 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 5);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray58 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray58, (int) (short) 1);
        java.lang.Class<?> wildcardClass61 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 0, -7]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods34.incrementNumberAtIndex(intArray48, (int) (byte) 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods53.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods53.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray86, 1);
        simpleMethods19.incrementNumberAtIndex(intArray86, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[34, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods36.incrementNumberAtIndex(intArray86, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray59 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods46.incrementNumberAtIndex(intArray59, 5);
        simpleMethods45.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods64.incrementNumberAtIndex(intArray78, (int) (byte) 0);
        simpleMethods45.incrementNumberAtIndex(intArray78, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 1);
        simpleMethods19.incrementNumberAtIndex(intArray66, 5);
        int[] intArray78 = new int[] { (-10), (short) 100, (short) 1, 5, (short) 0 };
        simpleMethods19.incrementNumberAtIndex(intArray78, 0);
        int[] intArray84 = new int[] { (short) 0, (-7), (-8) };
        simpleMethods19.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-9, 100, 1, 5, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, -6, -8]");
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        simpleMethods15.incrementNumberAtIndex(intArray49, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray49, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[37, 4, 97]");
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray79, 3);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[35, 8, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods64.incrementNumberAtIndex(intArray77, 5);
        simpleMethods49.incrementNumberAtIndex(intArray77, 0);
        simpleMethods42.incrementNumberAtIndex(intArray77, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray77, 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray67 = new int[] { '#' };
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36]");
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 1);
        simpleMethods36.incrementNumberAtIndex(intArray63, (int) (short) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods36.incrementNumberAtIndex(intArray85, (int) (short) 0);
        int[] intArray93 = new int[] { (-10), 4, 8 };
        simpleMethods36.incrementNumberAtIndex(intArray93, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-10, 4, 9]");
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods74.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, 5);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        int[] intArray59 = new int[] { (-10), (short) 100, (short) 1, 5, (short) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray59, 0);
        java.lang.Class<?> wildcardClass62 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-9, 100, 1, 5, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods42.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        java.lang.Class<?> wildcardClass94 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        java.lang.Class<?> wildcardClass83 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 0);
        java.lang.Class<?> wildcardClass78 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 0);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods53.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods53.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods37.incrementNumberAtIndex(intArray86, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 1);
        simpleMethods16.incrementNumberAtIndex(intArray63, 5);
        simpleMethods0.incrementNumberAtIndex(intArray63, 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, (int) (short) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods69.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods33.incrementNumberAtIndex(intArray83, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods1.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, 0);
        simpleMethods26.incrementNumberAtIndex(intArray61, 2);
        simpleMethods1.incrementNumberAtIndex(intArray61, 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, 0);
        java.lang.Class<?> wildcardClass72 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        simpleMethods39.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 4, 97]");
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods53.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods37.incrementNumberAtIndex(intArray82, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[38, 2, 97]");
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 1);
        simpleMethods56.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray83, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[39, 3, 97]");
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods45.incrementNumberAtIndex(intArray73, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods29.incrementNumberAtIndex(intArray40, 0);
        simpleMethods22.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods47.incrementNumberAtIndex(intArray82, 2);
        simpleMethods22.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 5);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[34, -10, 1, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        java.lang.Class<?> wildcardClass61 = intArray52.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods29.incrementNumberAtIndex(intArray40, 0);
        simpleMethods22.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods47.incrementNumberAtIndex(intArray82, 2);
        simpleMethods22.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 5);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[34, -10, 1, 0, 100, 12]");
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods36.incrementNumberAtIndex(intArray86, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 2, 97]");
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray74, 4);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        examples.SimpleMethods simpleMethods88 = new examples.SimpleMethods();
        int[] intArray92 = new int[] { '#', 2, 'a' };
        simpleMethods88.incrementNumberAtIndex(intArray92, 0);
        simpleMethods81.incrementNumberAtIndex(intArray92, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[37, 2, 97]");
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods32.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray61, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, 0);
        java.lang.Class<?> wildcardClass91 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods32.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray61, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[38, 2, 97]");
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass75 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        int[] intArray37 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods25.incrementNumberAtIndex(intArray37, (int) (byte) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        simpleMethods25.incrementNumberAtIndex(intArray70, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 4, 97]");
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        int[] intArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods33.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods52.incrementNumberAtIndex(intArray66, (int) (byte) 0);
        simpleMethods33.incrementNumberAtIndex(intArray66, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray80 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods68.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        simpleMethods49.incrementNumberAtIndex(intArray80, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods36.incrementNumberAtIndex(intArray71, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (short) 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods51.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray92 = new int[] { 7, (short) 0, 2, (-100), 10 };
        simpleMethods0.incrementNumberAtIndex(intArray92, 4);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[7, 0, 2, -100, 11]");
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 0);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods36.incrementNumberAtIndex(intArray64, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods34.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 0);
        simpleMethods74.incrementNumberAtIndex(intArray87, 0);
        simpleMethods34.incrementNumberAtIndex(intArray87, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[39, 3, 97]");
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        simpleMethods19.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray56 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods44.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods44.incrementNumberAtIndex(intArray72, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods44.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray89, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray65, 2);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 3, 98]");
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods74.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, 5);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        simpleMethods54.incrementNumberAtIndex(intArray88, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods15.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        java.lang.Class<?> wildcardClass60 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        examples.SimpleMethods simpleMethods86 = new examples.SimpleMethods();
        int[] intArray90 = new int[] { '#', 2, 'a' };
        simpleMethods86.incrementNumberAtIndex(intArray90, 0);
        simpleMethods79.incrementNumberAtIndex(intArray90, 0);
        simpleMethods78.incrementNumberAtIndex(intArray90, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[37, 3, 97]");
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods22.incrementNumberAtIndex(intArray69, 5);
        simpleMethods0.incrementNumberAtIndex(intArray69, 4);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 101, 12]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray29 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods17.incrementNumberAtIndex(intArray29, (int) (byte) 1);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods17.incrementNumberAtIndex(intArray45, 0);
        simpleMethods1.incrementNumberAtIndex(intArray45, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, 0);
        simpleMethods1.incrementNumberAtIndex(intArray83, 3);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37, 7, -1, 2, -7]");
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods16.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 1);
        simpleMethods56.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods36.incrementNumberAtIndex(intArray50, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods72.incrementNumberAtIndex(intArray85, (int) (short) 0);
        simpleMethods57.incrementNumberAtIndex(intArray85, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 3, 97]");
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods25.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, (int) (short) 0);
        java.lang.Class<?> wildcardClass82 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        java.lang.Class<?> wildcardClass43 = intArray34.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray25, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods68.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods49.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods34.incrementNumberAtIndex(intArray81, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[41, 2, 97]");
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 2, 97]");
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods62.incrementNumberAtIndex(intArray80, 0);
        simpleMethods55.incrementNumberAtIndex(intArray80, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[39, 2, 97]");
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 4, 97]");
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 2, 97]");
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray68, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray42, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 2, 97]");
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray77 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods65.incrementNumberAtIndex(intArray77, (int) (byte) 1);
        simpleMethods46.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods46.incrementNumberAtIndex(intArray86, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 2, 98]");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        simpleMethods39.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 4, 97]");
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 0);
        simpleMethods69.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods50.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods34.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[41, 2, 97]");
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 3);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 99]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 2, 97]");
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods16.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 1);
        java.lang.Class<?> wildcardClass87 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 0);
        simpleMethods60.incrementNumberAtIndex(intArray73, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[39, 2, 97]");
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 2);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 98]");
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 1);
        simpleMethods33.incrementNumberAtIndex(intArray60, (int) (short) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods33.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 0);
        simpleMethods45.incrementNumberAtIndex(intArray73, 0);
        simpleMethods0.incrementNumberAtIndex(intArray73, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[40, 2, 97]");
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 99]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, 1);
        simpleMethods40.incrementNumberAtIndex(intArray87, 5);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass75 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 2);
        java.lang.Class<?> wildcardClass76 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 4, 97]");
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods16.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 1);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 2, 97]");
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        int[] intArray59 = new int[] { (-10), (short) 100, (short) 1, 5, (short) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray59, 0);
        int[] intArray65 = new int[] { (short) 0, (-7), (-8) };
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-9, 100, 1, 5, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, -6, -8]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }
}

