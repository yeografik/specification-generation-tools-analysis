package examples;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods59.incrementNumberAtIndex(intArray77, 0);
        simpleMethods43.incrementNumberAtIndex(intArray77, 0);
        int[] intArray91 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods43.incrementNumberAtIndex(intArray91, 2);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        java.lang.Class<?> wildcardClass96 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1, 1, 11, 0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods19.incrementNumberAtIndex(intArray69, (int) (short) 0);
        int[] intArray77 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray77, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray77, 2);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        int[] intArray94 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods82.incrementNumberAtIndex(intArray94, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[10, 0, -6]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods64.incrementNumberAtIndex(intArray77, (int) (short) 0);
        simpleMethods49.incrementNumberAtIndex(intArray77, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray77, 1);
        java.lang.Class<?> wildcardClass90 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods39.incrementNumberAtIndex(intArray67, (int) (short) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods72.incrementNumberAtIndex(intArray85, 0);
        simpleMethods39.incrementNumberAtIndex(intArray85, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 3, 97]");
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        simpleMethods22.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods22.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, 1);
        int[] intArray82 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods43.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 0);
        java.lang.Class<?> wildcardClass87 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[34, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray38, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 3, 97]");
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods45.incrementNumberAtIndex(intArray73, 0);
        simpleMethods38.incrementNumberAtIndex(intArray73, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        simpleMethods0.incrementNumberAtIndex(intArray73, 0);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 1);
        simpleMethods36.incrementNumberAtIndex(intArray83, 5);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[33, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 1);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods48.incrementNumberAtIndex(intArray79, 0);
        simpleMethods33.incrementNumberAtIndex(intArray79, 3);
        simpleMethods0.incrementNumberAtIndex(intArray79, 0);
        java.lang.Class<?> wildcardClass88 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[37, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods68.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[40, 2, 97]");
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, 1);
        int[] intArray82 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods43.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 4);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -1, 6, 10, -8, -2]");
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 0);
        simpleMethods22.incrementNumberAtIndex(intArray66, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 2);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 2, 98]");
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods48.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods67.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods48.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 4);
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[34, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods8.incrementNumberAtIndex(intArray74, 1);
        simpleMethods1.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        java.lang.Class<?> wildcardClass83 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray7, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        simpleMethods35.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray66, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 7, 0, 1, -7]");
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods49.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray75 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods63.incrementNumberAtIndex(intArray75, (int) (byte) 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods63.incrementNumberAtIndex(intArray91, 0);
        simpleMethods0.incrementNumberAtIndex(intArray91, (int) (byte) 1);
        java.lang.Class<?> wildcardClass98 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods19.incrementNumberAtIndex(intArray69, (int) (short) 0);
        int[] intArray77 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray77, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray77, 2);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[10, 0, -6]");
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, (int) (short) 1);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 3, 97]");
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods8.incrementNumberAtIndex(intArray74, 1);
        simpleMethods1.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods45.incrementNumberAtIndex(intArray73, 0);
        simpleMethods38.incrementNumberAtIndex(intArray73, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        simpleMethods0.incrementNumberAtIndex(intArray73, 0);
        java.lang.Class<?> wildcardClass84 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods26.incrementNumberAtIndex(intArray44, 0);
        simpleMethods19.incrementNumberAtIndex(intArray44, (int) (short) 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods53.incrementNumberAtIndex(intArray81, 1);
        int[] intArray92 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods53.incrementNumberAtIndex(intArray92, 0);
        simpleMethods19.incrementNumberAtIndex(intArray92, 0);
        simpleMethods0.incrementNumberAtIndex(intArray92, 2);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[34, -1, 7, 10, -9, -2]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (short) 1);
        java.lang.Class<?> wildcardClass82 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray47, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        java.lang.Class<?> wildcardClass60 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, 0);
        simpleMethods33.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[38, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 3, 97]");
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 3, 97]");
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods36.incrementNumberAtIndex(intArray71, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods8.incrementNumberAtIndex(intArray74, 1);
        simpleMethods1.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, 1);
        int[] intArray82 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods43.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 0);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[34, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods30.incrementNumberAtIndex(intArray41, 0);
        simpleMethods29.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray60, 0);
        simpleMethods22.incrementNumberAtIndex(intArray60, 1);
        simpleMethods0.incrementNumberAtIndex(intArray60, 2);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 8, 0, 1, -7]");
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods40.incrementNumberAtIndex(intArray90, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray90, 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods29.incrementNumberAtIndex(intArray40, 0);
        simpleMethods22.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods47.incrementNumberAtIndex(intArray82, 2);
        simpleMethods22.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[35, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 1);
        int[] intArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray56, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 3);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods56.incrementNumberAtIndex(intArray85, (int) (short) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (short) 0);
        simpleMethods39.incrementNumberAtIndex(intArray85, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, 1);
        int[] intArray82 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods43.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 4);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -1, 6, 10, -8, -2]");
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray59 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods46.incrementNumberAtIndex(intArray59, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray59, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        java.lang.Class<?> wildcardClass16 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods30.incrementNumberAtIndex(intArray41, 0);
        simpleMethods29.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray60, 0);
        simpleMethods22.incrementNumberAtIndex(intArray60, 1);
        simpleMethods0.incrementNumberAtIndex(intArray60, 2);
        java.lang.Class<?> wildcardClass69 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 8, 0, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods34.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods34.incrementNumberAtIndex(intArray72, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[40, 2, 97]");
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray39 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        simpleMethods42.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray76, 4);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        int[] intArray93 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods81.incrementNumberAtIndex(intArray93, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray93, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods40.incrementNumberAtIndex(intArray69, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 3, 97]");
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods33.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 3, 97]");
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods30.incrementNumberAtIndex(intArray41, 0);
        simpleMethods29.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray60, 0);
        simpleMethods22.incrementNumberAtIndex(intArray60, 1);
        simpleMethods0.incrementNumberAtIndex(intArray60, 2);
        java.lang.Class<?> wildcardClass69 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 8, 0, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 0);
        simpleMethods56.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray87, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[40, 2, 97]");
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        int[] intArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray45, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass81 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods36.incrementNumberAtIndex(intArray65, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods36.incrementNumberAtIndex(intArray50, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods57.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[40, 2, 97]");
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        simpleMethods17.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods17.incrementNumberAtIndex(intArray57, 2);
        simpleMethods16.incrementNumberAtIndex(intArray57, 2);
        simpleMethods0.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 3, 99]");
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods67.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 3, 97]");
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods26.incrementNumberAtIndex(intArray44, 0);
        simpleMethods19.incrementNumberAtIndex(intArray44, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[39, 3, 97]");
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods9.incrementNumberAtIndex(intArray22, 5);
        simpleMethods8.incrementNumberAtIndex(intArray22, (int) (byte) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        int[] intArray41 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods28.incrementNumberAtIndex(intArray41, 5);
        simpleMethods27.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods8.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, (int) (short) 1);
        java.lang.Class<?> wildcardClass52 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 1);
        simpleMethods33.incrementNumberAtIndex(intArray60, (int) (short) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods33.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray36 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods23.incrementNumberAtIndex(intArray36, 5);
        simpleMethods8.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods8.incrementNumberAtIndex(intArray86, 0);
        simpleMethods1.incrementNumberAtIndex(intArray86, 1);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 9, -1, 1, -7]");
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray36 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods23.incrementNumberAtIndex(intArray36, 5);
        simpleMethods22.incrementNumberAtIndex(intArray36, (int) (byte) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray55 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods42.incrementNumberAtIndex(intArray55, 5);
        simpleMethods41.incrementNumberAtIndex(intArray55, (int) (byte) 0);
        simpleMethods22.incrementNumberAtIndex(intArray55, (int) (byte) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods22.incrementNumberAtIndex(intArray66, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        simpleMethods22.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods22.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods9.incrementNumberAtIndex(intArray22, 5);
        simpleMethods8.incrementNumberAtIndex(intArray22, (int) (byte) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        int[] intArray41 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods28.incrementNumberAtIndex(intArray41, 5);
        simpleMethods27.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods8.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods68.incrementNumberAtIndex(intArray81, 0);
        simpleMethods52.incrementNumberAtIndex(intArray81, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[40, 2, 97]");
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        int[] intArray39 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods27.incrementNumberAtIndex(intArray39, (int) (byte) 1);
        simpleMethods8.incrementNumberAtIndex(intArray39, 0);
        simpleMethods7.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods7.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 0);
        simpleMethods7.incrementNumberAtIndex(intArray83, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods51.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray85, 4);
        simpleMethods15.incrementNumberAtIndex(intArray85, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 7, -1, 1, -6]");
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods49.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods33.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        int[] intArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        java.lang.Class<?> wildcardClass82 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods76.incrementNumberAtIndex(intArray90, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray90, 3);
        java.lang.Class<?> wildcardClass97 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 3, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[33, -10, 0, 1, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        java.lang.Class<?> wildcardClass16 = intArray13.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods34.incrementNumberAtIndex(intArray62, 0);
        simpleMethods0.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods73.incrementNumberAtIndex(intArray86, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[39, 2, 97]");
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods26.incrementNumberAtIndex(intArray44, 0);
        simpleMethods19.incrementNumberAtIndex(intArray44, (int) (short) 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods53.incrementNumberAtIndex(intArray81, 1);
        int[] intArray92 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods53.incrementNumberAtIndex(intArray92, 0);
        simpleMethods19.incrementNumberAtIndex(intArray92, 0);
        simpleMethods0.incrementNumberAtIndex(intArray92, 2);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[34, -1, 7, 10, -9, -2]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        int[] intArray37 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods25.incrementNumberAtIndex(intArray37, (int) (byte) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods25.incrementNumberAtIndex(intArray53, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods25.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 0);
        simpleMethods43.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[40, 2, 97]");
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        simpleMethods54.incrementNumberAtIndex(intArray88, 4);
        simpleMethods0.incrementNumberAtIndex(intArray88, 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[36, 7, -1, 1, -6]");
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods19.incrementNumberAtIndex(intArray69, (int) (short) 0);
        int[] intArray77 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray77, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray77, 2);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[10, 0, -6]");
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods77.incrementNumberAtIndex(intArray88, 0);
        simpleMethods76.incrementNumberAtIndex(intArray88, 1);
        simpleMethods61.incrementNumberAtIndex(intArray88, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[38, 3, 97]");
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 1);
        simpleMethods54.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[39, 3, 97]");
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods36.incrementNumberAtIndex(intArray50, (int) (byte) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 0);
        simpleMethods36.incrementNumberAtIndex(intArray83, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 1);
        simpleMethods0.incrementNumberAtIndex(intArray89, (int) (short) 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[37, 2, 97]");
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray48, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray48, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[41, 2, 97]");
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods39.incrementNumberAtIndex(intArray53, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods77.incrementNumberAtIndex(intArray88, 0);
        simpleMethods76.incrementNumberAtIndex(intArray88, 0);
        simpleMethods60.incrementNumberAtIndex(intArray88, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[39, 2, 97]");
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods17.incrementNumberAtIndex(intArray46, (int) (short) 1);
        simpleMethods1.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods55.incrementNumberAtIndex(intArray86, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods33.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods52.incrementNumberAtIndex(intArray85, 0);
        simpleMethods33.incrementNumberAtIndex(intArray85, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 2, 97]");
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods64.incrementNumberAtIndex(intArray77, 5);
        simpleMethods49.incrementNumberAtIndex(intArray77, 0);
        simpleMethods0.incrementNumberAtIndex(intArray77, 1);
        int[] intArray86 = new int[] { (-1), 3 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 3]");
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods32.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        simpleMethods32.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 0);
        simpleMethods74.incrementNumberAtIndex(intArray87, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray87, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[39, 3, 97]");
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods1.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 1);
        simpleMethods1.incrementNumberAtIndex(intArray46, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, 0);
        simpleMethods1.incrementNumberAtIndex(intArray68, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[39, 3, 97]");
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 0);
        simpleMethods22.incrementNumberAtIndex(intArray57, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods75.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        simpleMethods38.incrementNumberAtIndex(intArray51, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[39, 3, 97]");
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 3);
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods49.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods33.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        java.lang.Class<?> wildcardClass93 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        int[] intArray14 = new int[] { '#', 2, 'a' };
        simpleMethods10.incrementNumberAtIndex(intArray14, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        simpleMethods10.incrementNumberAtIndex(intArray21, 0);
        simpleMethods9.incrementNumberAtIndex(intArray21, 0);
        simpleMethods8.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods31.incrementNumberAtIndex(intArray43, 0);
        simpleMethods30.incrementNumberAtIndex(intArray43, 0);
        simpleMethods8.incrementNumberAtIndex(intArray43, (int) (short) 1);
        simpleMethods1.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 0);
        simpleMethods56.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray87, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[39, 4, 97]");
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods35.incrementNumberAtIndex(intArray73, 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        int[] intArray83 = new int[] { '#' };
        simpleMethods16.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37]");
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray72, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray47, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        java.lang.Class<?> wildcardClass60 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray79, 4);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[35, 8, -1, 1, -6]");
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray55 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods42.incrementNumberAtIndex(intArray55, 5);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods58.incrementNumberAtIndex(intArray86, 0);
        simpleMethods42.incrementNumberAtIndex(intArray86, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods58.incrementNumberAtIndex(intArray76, 0);
        simpleMethods42.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods60.incrementNumberAtIndex(intArray78, 0);
        simpleMethods53.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods34.incrementNumberAtIndex(intArray78, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[39, 3, 97]");
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray39 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        simpleMethods42.incrementNumberAtIndex(intArray55, (int) (short) 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods42.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, (int) (short) 1);
        java.lang.Class<?> wildcardClass84 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods51.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (short) 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods19.incrementNumberAtIndex(intArray69, (int) (short) 0);
        int[] intArray77 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray77, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray77, 2);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        int[] intArray94 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods82.incrementNumberAtIndex(intArray94, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[10, 0, -6]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 2);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 2, 98]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, 0);
        simpleMethods40.incrementNumberAtIndex(intArray87, 5);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[34, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods66.incrementNumberAtIndex(intArray84, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[38, 2, 97]");
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods36.incrementNumberAtIndex(intArray50, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods57.incrementNumberAtIndex(intArray71, (int) (byte) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods76.incrementNumberAtIndex(intArray90, (int) (byte) 0);
        simpleMethods57.incrementNumberAtIndex(intArray90, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods48.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods67.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods48.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 4);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[34, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 1);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods1.incrementNumberAtIndex(intArray32, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[38, 3, 97]");
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods40.incrementNumberAtIndex(intArray69, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 1);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods36.incrementNumberAtIndex(intArray64, 0);
        simpleMethods0.incrementNumberAtIndex(intArray64, 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[40, 2, 97]");
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods37.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods37.incrementNumberAtIndex(intArray77, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 98]");
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (byte) 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods49.incrementNumberAtIndex(intArray77, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 2, 97]");
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods45.incrementNumberAtIndex(intArray73, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods57.incrementNumberAtIndex(intArray69, 0);
        simpleMethods56.incrementNumberAtIndex(intArray69, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray69, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[40, 2, 97]");
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods60.incrementNumberAtIndex(intArray89, (int) (short) 1);
        simpleMethods44.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods43.incrementNumberAtIndex(intArray89, 1);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[34, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        java.lang.Class<?> wildcardClass83 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 1);
        int[] intArray73 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods34.incrementNumberAtIndex(intArray73, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[33, -1, 6, 10, -9, -2]");
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray39 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        simpleMethods42.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[40, 2, 97]");
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (short) 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 2, 97]");
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods15.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        simpleMethods15.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray75 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods63.incrementNumberAtIndex(intArray75, (int) (byte) 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods63.incrementNumberAtIndex(intArray91, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (short) 0);
        java.lang.Class<?> wildcardClass93 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        simpleMethods22.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods22.incrementNumberAtIndex(intArray71, (int) (short) 0);
        int[] intArray79 = new int[] { (-10), 4, 8 };
        simpleMethods22.incrementNumberAtIndex(intArray79, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-10, 4, 9]");
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods49.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods33.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[41, 2, 97]");
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[40, 3, 97]");
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, (int) (short) 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods51.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        simpleMethods15.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods74.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        simpleMethods18.incrementNumberAtIndex(intArray30, 0);
        simpleMethods17.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray30, 0);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[41, 2, 97]");
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods16.incrementNumberAtIndex(intArray62, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray62, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods1.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, 0);
        simpleMethods26.incrementNumberAtIndex(intArray61, 2);
        simpleMethods1.incrementNumberAtIndex(intArray61, 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods49.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods33.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[41, 2, 97]");
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 1);
        simpleMethods16.incrementNumberAtIndex(intArray63, 5);
        simpleMethods0.incrementNumberAtIndex(intArray63, 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods16.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 2);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        examples.SimpleMethods simpleMethods86 = new examples.SimpleMethods();
        int[] intArray90 = new int[] { '#', 2, 'a' };
        simpleMethods86.incrementNumberAtIndex(intArray90, 0);
        simpleMethods79.incrementNumberAtIndex(intArray90, 0);
        simpleMethods78.incrementNumberAtIndex(intArray90, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 2, 98]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[38, 2, 97]");
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        simpleMethods23.incrementNumberAtIndex(intArray54, 0);
        simpleMethods22.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        int[] intArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray53, (int) (short) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        simpleMethods22.incrementNumberAtIndex(intArray70, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 3, 97]");
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 1);
        simpleMethods33.incrementNumberAtIndex(intArray60, (int) (short) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods33.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        simpleMethods18.incrementNumberAtIndex(intArray30, 0);
        simpleMethods17.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray30, 0);
        java.lang.Class<?> wildcardClass43 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods33.incrementNumberAtIndex(intArray51, 0);
        simpleMethods26.incrementNumberAtIndex(intArray51, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, 0);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        int[] intArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray33, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        int[] intArray34 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray34, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray56 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods44.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods44.incrementNumberAtIndex(intArray72, 0);
        simpleMethods37.incrementNumberAtIndex(intArray72, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods58.incrementNumberAtIndex(intArray76, 0);
        simpleMethods42.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        java.lang.Class<?> wildcardClass87 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods76.incrementNumberAtIndex(intArray90, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray90, 3);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 3, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[33, -10, 0, 1, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods64.incrementNumberAtIndex(intArray77, 5);
        simpleMethods49.incrementNumberAtIndex(intArray77, 0);
        simpleMethods42.incrementNumberAtIndex(intArray77, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray77, 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods77.incrementNumberAtIndex(intArray88, 0);
        simpleMethods76.incrementNumberAtIndex(intArray88, 1);
        simpleMethods54.incrementNumberAtIndex(intArray88, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[37, 4, 97]");
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods42.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 4, 97]");
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods38.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods34.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        int[] intArray79 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods40.incrementNumberAtIndex(intArray79, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[33, -1, 6, 10, -9, -2]");
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        java.lang.Class<?> wildcardClass57 = intArray52.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        simpleMethods18.incrementNumberAtIndex(intArray30, 0);
        simpleMethods17.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods43.incrementNumberAtIndex(intArray72, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[40, 2, 97]");
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods0.incrementNumberAtIndex(intArray48, (int) (short) 0);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[39, 2, 97]");
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        int[] intArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray48, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 1);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods1.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray32, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2687");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        simpleMethods51.incrementNumberAtIndex(intArray89, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2688");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods37.incrementNumberAtIndex(intArray50, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        java.lang.Class<?> wildcardClass55 = intArray50.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2689");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods9.incrementNumberAtIndex(intArray22, 5);
        simpleMethods8.incrementNumberAtIndex(intArray22, (int) (byte) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        int[] intArray41 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods28.incrementNumberAtIndex(intArray41, 5);
        simpleMethods27.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods8.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, (int) (short) 1);
        java.lang.Class<?> wildcardClass52 = intArray41.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2690");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods49.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods42.incrementNumberAtIndex(intArray80, 2);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2691");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 1);
        simpleMethods33.incrementNumberAtIndex(intArray60, (int) (short) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods33.incrementNumberAtIndex(intArray81, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[39, 2, 97]");
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2692");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods59.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods40.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[37, 3, 97]");
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2693");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 0);
        simpleMethods19.incrementNumberAtIndex(intArray83, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2694");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods33.incrementNumberAtIndex(intArray51, 0);
        simpleMethods26.incrementNumberAtIndex(intArray51, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, 0);
        java.lang.Class<?> wildcardClass64 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2695");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray58 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray58, (int) (short) 1);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray61, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 0, -7]");
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2696");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray36 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods23.incrementNumberAtIndex(intArray36, 5);
        simpleMethods22.incrementNumberAtIndex(intArray36, (int) (byte) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray55 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods42.incrementNumberAtIndex(intArray55, 5);
        simpleMethods41.incrementNumberAtIndex(intArray55, (int) (byte) 0);
        simpleMethods22.incrementNumberAtIndex(intArray55, (int) (byte) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods22.incrementNumberAtIndex(intArray66, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 0);
        java.lang.Class<?> wildcardClass73 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2697");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray87 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods75.incrementNumberAtIndex(intArray87, (int) (byte) 1);
        simpleMethods56.incrementNumberAtIndex(intArray87, 0);
        simpleMethods55.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2698");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        int[] intArray57 = new int[] { (-10), 4, 8 };
        simpleMethods0.incrementNumberAtIndex(intArray57, 2);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-10, 4, 9]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2699");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        int[] intArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray45, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2700");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods59.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods40.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        java.lang.Class<?> wildcardClass91 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2701");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 1);
        simpleMethods54.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[39, 3, 97]");
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2702");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods49.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods71.incrementNumberAtIndex(intArray84, 0);
        simpleMethods49.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray84, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[40, 3, 97]");
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2703");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods32.incrementNumberAtIndex(intArray60, 0);
        simpleMethods25.incrementNumberAtIndex(intArray60, 2);
        simpleMethods0.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (short) 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[37, 3, 97]");
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2704");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 0);
        simpleMethods15.incrementNumberAtIndex(intArray50, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2705");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2706");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray81 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods69.incrementNumberAtIndex(intArray81, (int) (byte) 1);
        simpleMethods50.incrementNumberAtIndex(intArray81, 0);
        simpleMethods43.incrementNumberAtIndex(intArray81, 1);
        simpleMethods7.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[38, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2707");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods34.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods15.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 5);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2708");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods54.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2709");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, 0);
        simpleMethods16.incrementNumberAtIndex(intArray65, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[40, 2, 97]");
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2710");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[38, 3, 97]");
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2711");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods39.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray73, 4);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray90 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods78.incrementNumberAtIndex(intArray90, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray90, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray90, 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2712");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 1);
        simpleMethods54.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[39, 3, 97]");
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2713");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods41.incrementNumberAtIndex(intArray54, (int) (short) 0);
        simpleMethods22.incrementNumberAtIndex(intArray54, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray54, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[41, 2, 97]");
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2714");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray21 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods8.incrementNumberAtIndex(intArray21, 5);
        simpleMethods7.incrementNumberAtIndex(intArray21, (int) (byte) 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        int[] intArray40 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods27.incrementNumberAtIndex(intArray40, 5);
        simpleMethods26.incrementNumberAtIndex(intArray40, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray40, (int) (byte) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        simpleMethods47.incrementNumberAtIndex(intArray60, (int) (short) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods47.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods7.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2715");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2716");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods37.incrementNumberAtIndex(intArray50, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods55.incrementNumberAtIndex(intArray69, (int) (byte) 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods74.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        simpleMethods55.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2717");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods59.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods40.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2718");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods51.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods76.incrementNumberAtIndex(intArray90, (int) (byte) 0);
        simpleMethods51.incrementNumberAtIndex(intArray90, 1);
        simpleMethods0.incrementNumberAtIndex(intArray90, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2719");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray73, 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2720");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2721");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[40, 2, 97]");
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2722");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[38, 2, 97]");
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2723");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 0);
        simpleMethods22.incrementNumberAtIndex(intArray66, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2724");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods38.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2725");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods34.incrementNumberAtIndex(intArray48, (int) (byte) 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods53.incrementNumberAtIndex(intArray86, 0);
        simpleMethods34.incrementNumberAtIndex(intArray86, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[39, 2, 97]");
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2726");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods33.incrementNumberAtIndex(intArray67, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 4, 97]");
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2727");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 0);
        simpleMethods69.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods54.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[39, 4, 97]");
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2728");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods30.incrementNumberAtIndex(intArray41, 0);
        simpleMethods29.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray60, 0);
        simpleMethods22.incrementNumberAtIndex(intArray60, 1);
        simpleMethods0.incrementNumberAtIndex(intArray60, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 0);
        simpleMethods69.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 8, 0, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[39, 2, 97]");
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2729");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods74.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, 5);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2730");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2731");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods20.incrementNumberAtIndex(intArray48, 1);
        simpleMethods1.incrementNumberAtIndex(intArray48, 5);
        int[] intArray60 = new int[] { (-10), (short) 100, (short) 1, 5, (short) 0 };
        simpleMethods1.incrementNumberAtIndex(intArray60, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-9, 100, 1, 5, 0]");
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2732");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        simpleMethods22.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods22.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2733");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[39, 2, 97]");
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2734");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods58.incrementNumberAtIndex(intArray86, 0);
        simpleMethods39.incrementNumberAtIndex(intArray86, 5);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[34, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2735");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray66, (int) (short) 0);
        int[] intArray81 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods37.incrementNumberAtIndex(intArray81, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (short) 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 8, -10]");
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2736");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        int[] intArray48 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods51.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods51.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1, 11, 0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2737");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 0);
        simpleMethods36.incrementNumberAtIndex(intArray83, 5);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2738");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods51.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods76.incrementNumberAtIndex(intArray90, (int) (byte) 0);
        simpleMethods51.incrementNumberAtIndex(intArray90, 1);
        simpleMethods0.incrementNumberAtIndex(intArray90, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2739");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods58.incrementNumberAtIndex(intArray86, 0);
        simpleMethods39.incrementNumberAtIndex(intArray86, 5);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[34, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2740");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods36.incrementNumberAtIndex(intArray64, 0);
        simpleMethods0.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 1);
        simpleMethods0.incrementNumberAtIndex(intArray87, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 4, 97]");
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2741");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 2, 97]");
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2742");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods49.incrementNumberAtIndex(intArray62, (int) (short) 0);
        simpleMethods34.incrementNumberAtIndex(intArray62, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray62, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 3, 97]");
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2743");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, 1);
        simpleMethods40.incrementNumberAtIndex(intArray87, 5);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2744");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods26.incrementNumberAtIndex(intArray54, 0);
        simpleMethods19.incrementNumberAtIndex(intArray54, (int) (short) 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray89, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2745");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, 0);
        simpleMethods43.incrementNumberAtIndex(intArray72, 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2746");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods53.incrementNumberAtIndex(intArray81, 1);
        simpleMethods34.incrementNumberAtIndex(intArray81, 5);
        int[] intArray93 = new int[] { (-10), (short) 100, (short) 1, 5, (short) 0 };
        simpleMethods34.incrementNumberAtIndex(intArray93, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-9, 100, 1, 5, 0]");
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2747");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods14.incrementNumberAtIndex(intArray32, 0);
        simpleMethods7.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 1);
        int[] intArray80 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods41.incrementNumberAtIndex(intArray80, 0);
        simpleMethods7.incrementNumberAtIndex(intArray80, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -1, 6, 10, -9, -2]");
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2748");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        simpleMethods39.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        int[] intArray77 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2749");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods20.incrementNumberAtIndex(intArray51, 0);
        simpleMethods19.incrementNumberAtIndex(intArray51, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray51, 0);
        java.lang.Class<?> wildcardClass60 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2750");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods8.incrementNumberAtIndex(intArray74, 1);
        simpleMethods1.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2751");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods1.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, 0);
        simpleMethods26.incrementNumberAtIndex(intArray61, 2);
        simpleMethods1.incrementNumberAtIndex(intArray61, 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2752");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray29 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods17.incrementNumberAtIndex(intArray29, (int) (byte) 1);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods17.incrementNumberAtIndex(intArray45, 0);
        simpleMethods1.incrementNumberAtIndex(intArray45, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, 0);
        simpleMethods1.incrementNumberAtIndex(intArray83, 3);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37, 7, -1, 2, -7]");
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2753");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods34.incrementNumberAtIndex(intArray62, 0);
        simpleMethods0.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (short) 1);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[37, 4, 97]");
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2754");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2755");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        java.lang.Class<?> wildcardClass57 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2756");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray56 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods44.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods44.incrementNumberAtIndex(intArray72, 0);
        simpleMethods37.incrementNumberAtIndex(intArray72, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2757");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, 0);
        simpleMethods33.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods33.incrementNumberAtIndex(intArray76, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[37, 2, 97]");
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2758");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods45.incrementNumberAtIndex(intArray73, 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, 3);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, -9, 0, 1, 100, 11]");
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2759");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 4, 97]");
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2760");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 3);
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2761");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods54.incrementNumberAtIndex(intArray85, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 3, 97]");
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2762");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        simpleMethods57.incrementNumberAtIndex(intArray70, (int) (short) 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods79.incrementNumberAtIndex(intArray92, 5);
        simpleMethods57.incrementNumberAtIndex(intArray92, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2763");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 0);
        simpleMethods33.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods33.incrementNumberAtIndex(intArray83, (int) (short) 0);
        int[] intArray91 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray91, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[10, 0, -7]");
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2764");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (short) 1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2765");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods49.incrementNumberAtIndex(intArray62, 0);
        simpleMethods16.incrementNumberAtIndex(intArray62, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray62, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 3, 97]");
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2766");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods77.incrementNumberAtIndex(intArray88, 0);
        simpleMethods76.incrementNumberAtIndex(intArray88, 0);
        simpleMethods75.incrementNumberAtIndex(intArray88, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[39, 2, 97]");
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2767");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2768");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods30.incrementNumberAtIndex(intArray41, 0);
        simpleMethods29.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray60, 0);
        simpleMethods22.incrementNumberAtIndex(intArray60, 1);
        simpleMethods0.incrementNumberAtIndex(intArray60, 2);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 8, 0, 1, -7]");
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2769");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 1);
        simpleMethods16.incrementNumberAtIndex(intArray50, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[37, 4, 97]");
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2770");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods49.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 0);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2771");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods20.incrementNumberAtIndex(intArray51, 0);
        simpleMethods19.incrementNumberAtIndex(intArray51, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 7, -1, 1, -7]");
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2772");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray68, 4);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 7, -1, 1, -6]");
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2773");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2774");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        simpleMethods39.incrementNumberAtIndex(intArray70, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, (int) (short) 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[39, 3, 97]");
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2775");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods39.incrementNumberAtIndex(intArray53, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2776");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, 0);
        examples.SimpleMethods simpleMethods88 = new examples.SimpleMethods();
        int[] intArray92 = new int[] { '#', 2, 'a' };
        simpleMethods88.incrementNumberAtIndex(intArray92, 0);
        simpleMethods52.incrementNumberAtIndex(intArray92, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[36, 2, 98]");
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2777");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods33.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 3, 97]");
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2778");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, 0);
        simpleMethods43.incrementNumberAtIndex(intArray72, 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        java.lang.Class<?> wildcardClass85 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2779");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray39 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        simpleMethods42.incrementNumberAtIndex(intArray55, (int) (short) 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods42.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, (int) (short) 1);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2780");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods39.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods39.incrementNumberAtIndex(intArray85, 4);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[33, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2781");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods36.incrementNumberAtIndex(intArray76, 2);
        simpleMethods35.incrementNumberAtIndex(intArray76, 2);
        simpleMethods19.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[37, 3, 99]");
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2782");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods56.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods40.incrementNumberAtIndex(intArray84, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2783");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 2);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 2, 98]");
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2784");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        int[] intArray44 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 0);
        simpleMethods47.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, -1, 8, -10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2785");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods26.incrementNumberAtIndex(intArray54, 0);
        simpleMethods19.incrementNumberAtIndex(intArray54, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2786");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        int[] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2787");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2788");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        simpleMethods38.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods16.incrementNumberAtIndex(intArray74, 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[39, 3, 97]");
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2789");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods48.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods67.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods48.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 4);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[34, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2790");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods47.incrementNumberAtIndex(intArray78, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray78, 2);
        simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[40, 2, 98]");
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2791");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods67.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 1);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 3, 97]");
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2792");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, (int) (short) 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods30.incrementNumberAtIndex(intArray41, 0);
        simpleMethods29.incrementNumberAtIndex(intArray41, 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, 0);
        simpleMethods29.incrementNumberAtIndex(intArray76, 5);
        simpleMethods7.incrementNumberAtIndex(intArray76, 4);
        simpleMethods0.incrementNumberAtIndex(intArray76, 4);
        examples.SimpleMethods simpleMethods87 = new examples.SimpleMethods();
        int[] intArray91 = new int[] { '#', 2, 'a' };
        simpleMethods87.incrementNumberAtIndex(intArray91, 0);
        simpleMethods0.incrementNumberAtIndex(intArray91, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[33, -10, 0, 0, 102, 12]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[36, 3, 97]");
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2793");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods34.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods34.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2794");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, 0);
        simpleMethods41.incrementNumberAtIndex(intArray76, 2);
        simpleMethods16.incrementNumberAtIndex(intArray76, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2795");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods37.incrementNumberAtIndex(intArray50, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        java.lang.Class<?> wildcardClass55 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2796");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods35.incrementNumberAtIndex(intArray53, 0);
        simpleMethods19.incrementNumberAtIndex(intArray53, 0);
        int[] intArray67 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods19.incrementNumberAtIndex(intArray67, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1, 11, 0, 0]");
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2797");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2798");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 4, 97]");
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2799");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 2, 97]");
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2800");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        simpleMethods24.incrementNumberAtIndex(intArray36, 0);
        simpleMethods23.incrementNumberAtIndex(intArray36, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray36, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods47.incrementNumberAtIndex(intArray61, (int) (byte) 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods66.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods47.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2801");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray47, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2802");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods20.incrementNumberAtIndex(intArray51, 0);
        simpleMethods19.incrementNumberAtIndex(intArray51, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray51, 0);
        java.lang.Class<?> wildcardClass60 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2803");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods39.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods39.incrementNumberAtIndex(intArray85, 4);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[33, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2804");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods49.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods70.incrementNumberAtIndex(intArray83, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[39, 2, 97]");
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2805");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods39.incrementNumberAtIndex(intArray67, 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray84 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods72.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) 1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2806");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods20.incrementNumberAtIndex(intArray51, 0);
        simpleMethods19.incrementNumberAtIndex(intArray51, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 7, -1, 1, -7]");
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2807");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods49.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods42.incrementNumberAtIndex(intArray80, 2);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        java.lang.Class<?> wildcardClass93 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2808");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray41, 4);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods65.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods46.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[41, 3, 97]");
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2809");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2810");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, (int) (short) 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods30.incrementNumberAtIndex(intArray41, 0);
        simpleMethods29.incrementNumberAtIndex(intArray41, 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, 0);
        simpleMethods29.incrementNumberAtIndex(intArray76, 5);
        simpleMethods7.incrementNumberAtIndex(intArray76, 4);
        simpleMethods0.incrementNumberAtIndex(intArray76, 4);
        examples.SimpleMethods simpleMethods87 = new examples.SimpleMethods();
        int[] intArray91 = new int[] { '#', 2, 'a' };
        simpleMethods87.incrementNumberAtIndex(intArray91, 0);
        simpleMethods0.incrementNumberAtIndex(intArray91, 1);
        java.lang.Class<?> wildcardClass96 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[33, -10, 0, 0, 102, 12]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[36, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2811");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 0);
        simpleMethods62.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 0);
        int[] intArray90 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods46.incrementNumberAtIndex(intArray90, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, -1, 8, -10]");
    }

    @Test
    public void test2812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2812");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods36.incrementNumberAtIndex(intArray64, 0);
        simpleMethods0.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 1);
        simpleMethods0.incrementNumberAtIndex(intArray87, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 4, 97]");
    }

    @Test
    public void test2813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2813");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods38.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[34, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2814");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods36.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods36.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2815");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods47.incrementNumberAtIndex(intArray75, 0);
        simpleMethods40.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[37, 2, 97]");
    }

    @Test
    public void test2816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2816");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods57.incrementNumberAtIndex(intArray69, 0);
        simpleMethods56.incrementNumberAtIndex(intArray69, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray69, (int) (short) 0);
        simpleMethods22.incrementNumberAtIndex(intArray69, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[41, 2, 97]");
    }

    @Test
    public void test2817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2817");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods37.incrementNumberAtIndex(intArray50, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test2818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2818");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        java.lang.Class<?> wildcardClass64 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2819");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        simpleMethods51.incrementNumberAtIndex(intArray89, 1);
        simpleMethods15.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[38, 8, -1, 1, -7]");
    }

    @Test
    public void test2820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2820");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 5);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test2821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2821");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods34.incrementNumberAtIndex(intArray74, 2);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods79.incrementNumberAtIndex(intArray92, 5);
        simpleMethods34.incrementNumberAtIndex(intArray92, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[32, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test2822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2822");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        simpleMethods43.incrementNumberAtIndex(intArray70, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 3, 97]");
    }

    @Test
    public void test2823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2823");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods50.incrementNumberAtIndex(intArray79, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray79, 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, 4);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[33, -9, 0, 0, 101, 11]");
    }

    @Test
    public void test2824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2824");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray59 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods46.incrementNumberAtIndex(intArray59, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray59, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test2825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2825");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray74, 4);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 7, -1, 1, -6]");
    }

    @Test
    public void test2826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2826");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods25.incrementNumberAtIndex(intArray57, (int) (byte) 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods64.incrementNumberAtIndex(intArray77, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray77, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 2, 98]");
    }

    @Test
    public void test2827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2827");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[38, 7, -1, 1, -7]");
    }

    @Test
    public void test2828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2828");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods1.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, 0);
        simpleMethods26.incrementNumberAtIndex(intArray61, 2);
        simpleMethods1.incrementNumberAtIndex(intArray61, 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test2829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2829");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray70, 4);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 7, -1, 1, -6]");
    }

    @Test
    public void test2830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2830");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods53.incrementNumberAtIndex(intArray81, 0);
        simpleMethods37.incrementNumberAtIndex(intArray81, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray81, 3);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[33, -9, 0, 1, 100, 11]");
    }

    @Test
    public void test2831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2831");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods22.incrementNumberAtIndex(intArray69, 5);
        simpleMethods0.incrementNumberAtIndex(intArray69, 4);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 101, 12]");
    }

    @Test
    public void test2832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2832");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods20.incrementNumberAtIndex(intArray48, 1);
        simpleMethods1.incrementNumberAtIndex(intArray48, 5);
        int[] intArray60 = new int[] { (-10), (short) 100, (short) 1, 5, (short) 0 };
        simpleMethods1.incrementNumberAtIndex(intArray60, 0);
        int[] intArray66 = new int[] { (short) 0, (-7), (-8) };
        simpleMethods1.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-9, 100, 1, 5, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, -6, -8]");
    }

    @Test
    public void test2833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2833");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray27 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods15.incrementNumberAtIndex(intArray27, (int) (byte) 1);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        int[] intArray43 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods30.incrementNumberAtIndex(intArray43, 5);
        simpleMethods15.incrementNumberAtIndex(intArray43, 1);
        int[] intArray54 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods15.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods57.incrementNumberAtIndex(intArray85, 0);
        simpleMethods15.incrementNumberAtIndex(intArray85, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[40, 2, 97]");
    }

    @Test
    public void test2834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2834");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods43.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2835");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray79, 4);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[35, 8, -1, 1, -6]");
    }

    @Test
    public void test2836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2836");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        int[] intArray42 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods30.incrementNumberAtIndex(intArray42, (int) (byte) 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        simpleMethods30.incrementNumberAtIndex(intArray57, (int) (short) 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods30.incrementNumberAtIndex(intArray79, (int) (short) 0);
        simpleMethods23.incrementNumberAtIndex(intArray79, 0);
        simpleMethods22.incrementNumberAtIndex(intArray79, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2837");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        simpleMethods37.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods37.incrementNumberAtIndex(intArray71, 4);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        simpleMethods37.incrementNumberAtIndex(intArray88, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test2838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2838");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods48.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods67.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods48.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 4);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[34, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test2839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2839");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods66.incrementNumberAtIndex(intArray84, 0);
        simpleMethods59.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2840");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods15.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods60.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 4);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2841");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods34.incrementNumberAtIndex(intArray48, (int) (byte) 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods53.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2842");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods56.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods40.incrementNumberAtIndex(intArray84, 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, 0);
        java.lang.Class<?> wildcardClass93 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2843");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        simpleMethods25.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray56 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods44.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        simpleMethods25.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods25.incrementNumberAtIndex(intArray65, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 98]");
    }

    @Test
    public void test2844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2844");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, (int) (short) 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods30.incrementNumberAtIndex(intArray41, 0);
        simpleMethods29.incrementNumberAtIndex(intArray41, 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, 0);
        simpleMethods29.incrementNumberAtIndex(intArray76, 5);
        simpleMethods7.incrementNumberAtIndex(intArray76, 4);
        simpleMethods0.incrementNumberAtIndex(intArray76, 4);
        examples.SimpleMethods simpleMethods87 = new examples.SimpleMethods();
        int[] intArray91 = new int[] { '#', 2, 'a' };
        simpleMethods87.incrementNumberAtIndex(intArray91, 0);
        simpleMethods0.incrementNumberAtIndex(intArray91, 1);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[33, -10, 0, 0, 102, 12]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[36, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2845");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        simpleMethods15.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 0);
        simpleMethods31.incrementNumberAtIndex(intArray66, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods31.incrementNumberAtIndex(intArray84, 0);
        simpleMethods15.incrementNumberAtIndex(intArray84, 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, 0);
        java.lang.Class<?> wildcardClass95 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2846");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[40, 2, 97]");
    }

    @Test
    public void test2847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2847");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        simpleMethods38.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods16.incrementNumberAtIndex(intArray74, 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[39, 3, 97]");
    }

    @Test
    public void test2848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2848");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods57.incrementNumberAtIndex(intArray69, 0);
        simpleMethods56.incrementNumberAtIndex(intArray69, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray69, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, (int) (short) 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[41, 2, 97]");
    }

    @Test
    public void test2849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2849");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 2, 97]");
    }

    @Test
    public void test2850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2850");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods36.incrementNumberAtIndex(intArray64, 1);
        simpleMethods0.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        examples.SimpleMethods simpleMethods85 = new examples.SimpleMethods();
        int[] intArray89 = new int[] { '#', 2, 'a' };
        simpleMethods85.incrementNumberAtIndex(intArray89, 0);
        simpleMethods78.incrementNumberAtIndex(intArray89, 0);
        simpleMethods71.incrementNumberAtIndex(intArray89, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[38, 2, 97]");
    }

    @Test
    public void test2851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2851");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods36.incrementNumberAtIndex(intArray64, 0);
        simpleMethods0.incrementNumberAtIndex(intArray64, 2);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test2852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2852");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods43.incrementNumberAtIndex(intArray83, 2);
        simpleMethods42.incrementNumberAtIndex(intArray83, 2);
        simpleMethods0.incrementNumberAtIndex(intArray83, 1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 3, 99]");
    }

    @Test
    public void test2853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2853");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2854");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray85, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test2855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2855");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        int[] intArray46 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray46, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
    }

    @Test
    public void test2856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2856");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods54.incrementNumberAtIndex(intArray87, 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[39, 2, 97]");
    }

    @Test
    public void test2857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2857");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods56.incrementNumberAtIndex(intArray84, 0);
        simpleMethods19.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[40, 3, 97]");
    }

    @Test
    public void test2858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2858");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods36.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods36.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2859");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[40, 3, 97]");
    }

    @Test
    public void test2860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2860");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods26.incrementNumberAtIndex(intArray44, 0);
        simpleMethods19.incrementNumberAtIndex(intArray44, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods55.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2861");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray36 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods23.incrementNumberAtIndex(intArray36, 5);
        simpleMethods22.incrementNumberAtIndex(intArray36, (int) (byte) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray55 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods42.incrementNumberAtIndex(intArray55, 5);
        simpleMethods41.incrementNumberAtIndex(intArray55, (int) (byte) 0);
        simpleMethods22.incrementNumberAtIndex(intArray55, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2862");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray21 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods9.incrementNumberAtIndex(intArray21, (int) (byte) 1);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        simpleMethods24.incrementNumberAtIndex(intArray36, 1);
        simpleMethods9.incrementNumberAtIndex(intArray36, (int) (short) 0);
        simpleMethods2.incrementNumberAtIndex(intArray36, 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods2.incrementNumberAtIndex(intArray59, 0);
        simpleMethods1.incrementNumberAtIndex(intArray59, 0);
        simpleMethods0.incrementNumberAtIndex(intArray59, 0);
        java.lang.Class<?> wildcardClass72 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2863");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods53.incrementNumberAtIndex(intArray81, 0);
        simpleMethods37.incrementNumberAtIndex(intArray81, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray81, 3);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[33, -9, 0, 1, 100, 11]");
    }

    @Test
    public void test2864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2864");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray82, 0);
        simpleMethods36.incrementNumberAtIndex(intArray82, 3);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[37, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2865");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        int[] intArray94 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods81.incrementNumberAtIndex(intArray94, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2866");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2867");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray57, 0);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2868");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods42.incrementNumberAtIndex(intArray70, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, 5);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
    }

    @Test
    public void test2869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2869");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2870");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray58 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray58, (int) (short) 1);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray61, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 0, -7]");
    }

    @Test
    public void test2871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2871");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray58 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray58, (int) (short) 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, 2);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        examples.SimpleMethods simpleMethods89 = new examples.SimpleMethods();
        int[] intArray93 = new int[] { '#', 2, 'a' };
        simpleMethods89.incrementNumberAtIndex(intArray93, 0);
        simpleMethods82.incrementNumberAtIndex(intArray93, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 0, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 3, 98]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[37, 2, 97]");
    }

    @Test
    public void test2872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2872");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 0);
        simpleMethods46.incrementNumberAtIndex(intArray59, (int) (short) 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods46.incrementNumberAtIndex(intArray81, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2873");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2874");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods56.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods40.incrementNumberAtIndex(intArray84, 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2875");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
    }

    @Test
    public void test2876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2876");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
    }

    @Test
    public void test2877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2877");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        int[] intArray46 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray46, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2878");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods31.incrementNumberAtIndex(intArray45, (int) (byte) 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods50.incrementNumberAtIndex(intArray64, (int) (byte) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods69.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods50.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods31.incrementNumberAtIndex(intArray83, 1);
        simpleMethods16.incrementNumberAtIndex(intArray83, 1);
        simpleMethods0.incrementNumberAtIndex(intArray83, 5);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -8, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2879");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods39.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods39.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 2);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test2880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2880");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 2, 97]");
    }

    @Test
    public void test2881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2881");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        int[] intArray37 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods25.incrementNumberAtIndex(intArray37, (int) (byte) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods25.incrementNumberAtIndex(intArray53, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods25.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test2882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2882");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        int[] intArray48 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray48, 2);
        int[] intArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1, 11, 0, 0]");
    }

    @Test
    public void test2883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2883");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2884");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods9.incrementNumberAtIndex(intArray22, 5);
        simpleMethods8.incrementNumberAtIndex(intArray22, (int) (byte) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        int[] intArray41 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods28.incrementNumberAtIndex(intArray41, 5);
        simpleMethods27.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods8.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, (int) (short) 1);
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[34, -9, 1, 0, 100, 11]");
    }

    @Test
    public void test2885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2885");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods48.incrementNumberAtIndex(intArray79, 0);
        simpleMethods33.incrementNumberAtIndex(intArray79, 3);
        simpleMethods0.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[37, 7, -1, 2, -7]");
    }

    @Test
    public void test2886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2886");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods33.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods52.incrementNumberAtIndex(intArray85, 0);
        simpleMethods33.incrementNumberAtIndex(intArray85, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 2, 97]");
    }

    @Test
    public void test2887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2887");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray72, 0);
        simpleMethods34.incrementNumberAtIndex(intArray72, 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test2888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2888");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2889");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods31.incrementNumberAtIndex(intArray45, (int) (byte) 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods50.incrementNumberAtIndex(intArray64, (int) (byte) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods69.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods50.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods31.incrementNumberAtIndex(intArray83, 1);
        simpleMethods16.incrementNumberAtIndex(intArray83, 1);
        simpleMethods0.incrementNumberAtIndex(intArray83, 5);
        java.lang.Class<?> wildcardClass96 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -8, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2890");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray49 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods37.incrementNumberAtIndex(intArray49, (int) (byte) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 1);
        simpleMethods37.incrementNumberAtIndex(intArray64, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[38, 3, 97]");
    }

    @Test
    public void test2891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2891");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 1);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods1.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 1);
        simpleMethods41.incrementNumberAtIndex(intArray68, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray68, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[39, 3, 97]");
    }

    @Test
    public void test2892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2892");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 0);
        simpleMethods22.incrementNumberAtIndex(intArray66, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[38, 2, 97]");
    }

    @Test
    public void test2893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2893");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods54.incrementNumberAtIndex(intArray83, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray83, 2);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[32, -9, 1, 0, 100, 11]");
    }

    @Test
    public void test2894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2894");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods26.incrementNumberAtIndex(intArray44, 0);
        simpleMethods19.incrementNumberAtIndex(intArray44, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods55.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        java.lang.Class<?> wildcardClass91 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2895");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods66.incrementNumberAtIndex(intArray84, 0);
        simpleMethods59.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, 1);
        java.lang.Class<?> wildcardClass97 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2896");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
    }

    @Test
    public void test2897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2897");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test2898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2898");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[41, 2, 97]");
    }

    @Test
    public void test2899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2899");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods40.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods65.incrementNumberAtIndex(intArray79, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray79, 1);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 0);
        java.lang.Class<?> wildcardClass88 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2900");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray76, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2901");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray76, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test2902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2902");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
    }

    @Test
    public void test2903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2903");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods66.incrementNumberAtIndex(intArray84, 0);
        simpleMethods59.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[39, 4, 97]");
    }

    @Test
    public void test2904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2904");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        int[] intArray76 = new int[] { 10, (-8) };
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[11, -8]");
    }

    @Test
    public void test2905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2905");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods67.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 1);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 3, 97]");
    }

    @Test
    public void test2906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2906");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods15.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods60.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 4);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test2907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2907");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray58 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray58, (int) (short) 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, 2);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 0, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 3, 98]");
    }

    @Test
    public void test2908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2908");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        int[] intArray44 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 0);
        simpleMethods47.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, -1, 8, -10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[40, 2, 97]");
    }

    @Test
    public void test2909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2909");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods52.incrementNumberAtIndex(intArray66, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2910");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods47.incrementNumberAtIndex(intArray74, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray74, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[39, 3, 97]");
    }

    @Test
    public void test2911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2911");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods26.incrementNumberAtIndex(intArray44, 0);
        simpleMethods19.incrementNumberAtIndex(intArray44, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray44, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[39, 2, 97]");
    }

    @Test
    public void test2912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2912");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        simpleMethods50.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray84 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods72.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        simpleMethods50.incrementNumberAtIndex(intArray84, 4);
        simpleMethods16.incrementNumberAtIndex(intArray84, 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, 4);
        java.lang.Class<?> wildcardClass93 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 7, -1, 1, -5]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2913");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods37.incrementNumberAtIndex(intArray50, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test2914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2914");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods38.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods68.incrementNumberAtIndex(intArray86, 0);
        simpleMethods61.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[40, 2, 97]");
    }

    @Test
    public void test2915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2915");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods48.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods67.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods48.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 99]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2916");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 4);
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2917");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        simpleMethods50.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray84 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods72.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        simpleMethods50.incrementNumberAtIndex(intArray84, 4);
        simpleMethods16.incrementNumberAtIndex(intArray84, 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, 4);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 7, -1, 1, -5]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2918");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
    }

    @Test
    public void test2919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2919");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        int[] intArray44 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        int[] intArray50 = new int[] { (byte) 100, 'a', (-2) };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, -1, 8, -10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 97, -2]");
    }

    @Test
    public void test2920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2920");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 1);
        simpleMethods36.incrementNumberAtIndex(intArray83, 5);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[33, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test2921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2921");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods73.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods54.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[39, 3, 97]");
    }

    @Test
    public void test2922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2922");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test2923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2923");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods48.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods67.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods48.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 4);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[34, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test2924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2924");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test2925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2925");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 1);
        simpleMethods54.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[39, 3, 97]");
    }

    @Test
    public void test2926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2926");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 2);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods73.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods57.incrementNumberAtIndex(intArray86, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[40, 2, 97]");
    }

    @Test
    public void test2927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2927");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        simpleMethods38.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods16.incrementNumberAtIndex(intArray74, 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[39, 3, 97]");
    }

    @Test
    public void test2928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2928");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods1.incrementNumberAtIndex(intArray30, (int) (short) 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        simpleMethods35.incrementNumberAtIndex(intArray69, 4);
        simpleMethods1.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 0);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2929");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods57.incrementNumberAtIndex(intArray85, 0);
        simpleMethods50.incrementNumberAtIndex(intArray85, 2);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        java.lang.Class<?> wildcardClass94 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[34, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2930");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods57.incrementNumberAtIndex(intArray85, 0);
        simpleMethods50.incrementNumberAtIndex(intArray85, 2);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[34, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2931");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
    }

    @Test
    public void test2932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2932");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods1.incrementNumberAtIndex(intArray30, (int) (short) 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        simpleMethods35.incrementNumberAtIndex(intArray69, 4);
        simpleMethods1.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 0);
        java.lang.Class<?> wildcardClass78 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2933");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods38.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 1);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray61, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2934");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        int[] intArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2935");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods7.incrementNumberAtIndex(intArray53, 4);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        simpleMethods7.incrementNumberAtIndex(intArray89, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 7, -1, 1, -6]");
    }

    @Test
    public void test2936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2936");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2937");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods33.incrementNumberAtIndex(intArray51, 0);
        simpleMethods26.incrementNumberAtIndex(intArray51, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, 0);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[40, 3, 97]");
    }

    @Test
    public void test2938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2938");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods52.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods45.incrementNumberAtIndex(intArray83, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[39, 2, 98]");
    }

    @Test
    public void test2939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2939");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray33, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2940");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods36.incrementNumberAtIndex(intArray66, 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, (int) (short) 0);
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[42, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2941");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2942");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray75 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods63.incrementNumberAtIndex(intArray75, (int) (byte) 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods63.incrementNumberAtIndex(intArray91, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2943");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray36, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test2944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2944");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test2945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2945");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods3 = new examples.SimpleMethods();
        int[] intArray7 = new int[] { '#', 2, 'a' };
        simpleMethods3.incrementNumberAtIndex(intArray7, 0);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        int[] intArray14 = new int[] { '#', 2, 'a' };
        simpleMethods10.incrementNumberAtIndex(intArray14, 0);
        simpleMethods3.incrementNumberAtIndex(intArray14, 0);
        simpleMethods2.incrementNumberAtIndex(intArray14, 0);
        simpleMethods1.incrementNumberAtIndex(intArray14, (int) (short) 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        simpleMethods23.incrementNumberAtIndex(intArray54, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 0);
        simpleMethods63.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        java.lang.Class<?> wildcardClass87 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2946");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[39, 3, 97]");
    }

    @Test
    public void test2947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2947");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods47.incrementNumberAtIndex(intArray75, 0);
        simpleMethods40.incrementNumberAtIndex(intArray75, 2);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test2948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2948");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
    }

    @Test
    public void test2949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2949");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test2950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2950");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods36.incrementNumberAtIndex(intArray66, 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, (int) (short) 0);
        java.lang.Class<?> wildcardClass81 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[42, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2951");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 3, 97]");
    }

    @Test
    public void test2952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2952");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 0);
        simpleMethods22.incrementNumberAtIndex(intArray57, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods75.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        java.lang.Class<?> wildcardClass96 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2953");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        int[] intArray57 = new int[] { (-10), 4, 8 };
        simpleMethods0.incrementNumberAtIndex(intArray57, 2);
        int[] intArray62 = new int[] { '4', 10 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray62, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-10, 4, 9]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52, 10]");
    }

    @Test
    public void test2954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2954");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        simpleMethods25.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray56 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods44.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        simpleMethods25.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods25.incrementNumberAtIndex(intArray65, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods25.incrementNumberAtIndex(intArray83, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[32, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test2955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2955");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods39.incrementNumberAtIndex(intArray67, 0);
        simpleMethods32.incrementNumberAtIndex(intArray67, 2);
        simpleMethods7.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods7.incrementNumberAtIndex(intArray87, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[34, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 3, 97]");
    }

    @Test
    public void test2956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2956");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2957");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods66.incrementNumberAtIndex(intArray79, (int) (short) 0);
        simpleMethods50.incrementNumberAtIndex(intArray79, (int) (short) 0);
        simpleMethods49.incrementNumberAtIndex(intArray79, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[41, 2, 97]");
    }

    @Test
    public void test2958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2958");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray76, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        java.lang.Class<?> wildcardClass83 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2959");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray29 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods17.incrementNumberAtIndex(intArray29, (int) (byte) 1);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods17.incrementNumberAtIndex(intArray45, 0);
        simpleMethods1.incrementNumberAtIndex(intArray45, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, 0);
        simpleMethods1.incrementNumberAtIndex(intArray83, 3);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37, 7, -1, 2, -7]");
    }

    @Test
    public void test2960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2960");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test2961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2961");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods32.incrementNumberAtIndex(intArray44, 0);
        simpleMethods31.incrementNumberAtIndex(intArray44, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods55.incrementNumberAtIndex(intArray69, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray69, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2962");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods56.incrementNumberAtIndex(intArray70, (int) (byte) 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods75.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        simpleMethods56.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray89, 1);
        simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[35, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test2963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2963");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 0);
        simpleMethods45.incrementNumberAtIndex(intArray76, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[39, 3, 97]");
    }

    @Test
    public void test2964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2964");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        simpleMethods0.incrementNumberAtIndex(intArray48, (int) (short) 0);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 3, 97]");
    }

    @Test
    public void test2965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2965");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (short) 1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test2966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2966");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods36.incrementNumberAtIndex(intArray66, 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, (int) (short) 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[42, 2, 97]");
    }

    @Test
    public void test2967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2967");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[40, 3, 97]");
    }

    @Test
    public void test2968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2968");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods0.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods55.incrementNumberAtIndex(intArray86, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test2969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2969");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (short) 1);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        int[] intArray94 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods82.incrementNumberAtIndex(intArray94, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray94, (int) (short) 0);
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2970");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        int[] intArray39 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods27.incrementNumberAtIndex(intArray39, (int) (byte) 1);
        simpleMethods8.incrementNumberAtIndex(intArray39, 0);
        simpleMethods1.incrementNumberAtIndex(intArray39, 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 0);
        simpleMethods46.incrementNumberAtIndex(intArray74, 0);
        simpleMethods1.incrementNumberAtIndex(intArray74, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[40, 2, 97]");
    }

    @Test
    public void test2971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2971");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray21 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods9.incrementNumberAtIndex(intArray21, (int) (byte) 1);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        simpleMethods24.incrementNumberAtIndex(intArray36, 1);
        simpleMethods9.incrementNumberAtIndex(intArray36, (int) (short) 0);
        simpleMethods2.incrementNumberAtIndex(intArray36, 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods2.incrementNumberAtIndex(intArray59, 0);
        simpleMethods1.incrementNumberAtIndex(intArray59, 0);
        simpleMethods0.incrementNumberAtIndex(intArray59, 0);
        java.lang.Class<?> wildcardClass72 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2972");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods77.incrementNumberAtIndex(intArray88, 0);
        simpleMethods76.incrementNumberAtIndex(intArray88, 1);
        simpleMethods40.incrementNumberAtIndex(intArray88, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[38, 3, 97]");
    }

    @Test
    public void test2973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2973");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods74.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, 5);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test2974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2974");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray74 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods61.incrementNumberAtIndex(intArray74, 5);
        simpleMethods60.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 5);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test2975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2975");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods32.incrementNumberAtIndex(intArray60, 0);
        simpleMethods16.incrementNumberAtIndex(intArray60, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray60, 3);
        java.lang.Class<?> wildcardClass69 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[33, -9, 0, 1, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2976");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 1);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods1.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods41.incrementNumberAtIndex(intArray54, 0);
        simpleMethods1.incrementNumberAtIndex(intArray54, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[39, 3, 97]");
    }

    @Test
    public void test2977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2977");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 1);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test2978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2978");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods51.incrementNumberAtIndex(intArray64, (int) (short) 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods51.incrementNumberAtIndex(intArray85, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[37, 4, 97]");
    }

    @Test
    public void test2979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2979");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods49.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 0);
        java.lang.Class<?> wildcardClass70 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2980");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, (int) (short) 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods30.incrementNumberAtIndex(intArray41, 0);
        simpleMethods29.incrementNumberAtIndex(intArray41, 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, 0);
        simpleMethods29.incrementNumberAtIndex(intArray76, 5);
        simpleMethods7.incrementNumberAtIndex(intArray76, 4);
        simpleMethods0.incrementNumberAtIndex(intArray76, 4);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[33, -10, 0, 0, 102, 12]");
    }

    @Test
    public void test2981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2981");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods43.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        java.lang.Class<?> wildcardClass85 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2982");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        simpleMethods39.incrementNumberAtIndex(intArray70, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[39, 2, 97]");
    }

    @Test
    public void test2983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2983");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods43.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2984");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        int[] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
    }

    @Test
    public void test2985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2985");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        java.lang.Class<?> wildcardClass81 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2986");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        java.lang.Class<?> wildcardClass43 = intArray34.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2987");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods1.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, 0);
        simpleMethods26.incrementNumberAtIndex(intArray61, 2);
        simpleMethods1.incrementNumberAtIndex(intArray61, 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test2988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2988");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods48.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods67.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods48.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 99]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2989");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods48.incrementNumberAtIndex(intArray66, 0);
        simpleMethods41.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods22.incrementNumberAtIndex(intArray66, (int) (short) 1);
        simpleMethods15.incrementNumberAtIndex(intArray66, 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 2);
        java.lang.Class<?> wildcardClass81 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[40, 3, 98]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2990");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        int[] intArray48 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods58.incrementNumberAtIndex(intArray76, 0);
        simpleMethods51.incrementNumberAtIndex(intArray76, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1, 11, 0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[40, 2, 97]");
    }

    @Test
    public void test2991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2991");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods57.incrementNumberAtIndex(intArray69, 0);
        simpleMethods56.incrementNumberAtIndex(intArray69, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, (int) (byte) 0);
        java.lang.Class<?> wildcardClass80 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2992");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods22.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods38.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods22.incrementNumberAtIndex(intArray82, 3);
        simpleMethods0.incrementNumberAtIndex(intArray82, 1);
        java.lang.Class<?> wildcardClass93 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -8, 0, 1, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2993");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray21 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods8.incrementNumberAtIndex(intArray21, 5);
        simpleMethods7.incrementNumberAtIndex(intArray21, (int) (byte) 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        int[] intArray40 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods27.incrementNumberAtIndex(intArray40, 5);
        simpleMethods26.incrementNumberAtIndex(intArray40, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray40, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray80 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods68.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        simpleMethods49.incrementNumberAtIndex(intArray80, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[34, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test2994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2994");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods38.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, 2);
        java.lang.Class<?> wildcardClass93 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -8, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2995");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods55.incrementNumberAtIndex(intArray86, 0);
        simpleMethods54.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 3);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2996");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2997");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        int[] intArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray22, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
    }

    @Test
    public void test2998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2998");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        simpleMethods24.incrementNumberAtIndex(intArray36, 0);
        simpleMethods23.incrementNumberAtIndex(intArray36, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray36, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods47.incrementNumberAtIndex(intArray61, (int) (byte) 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods66.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods47.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test2999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2999");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (short) 1);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        int[] intArray94 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods82.incrementNumberAtIndex(intArray94, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray94, (int) (short) 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test3000");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray39, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
    }
}

