package examples;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Class<?> wildcardClass1 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { 100, (-1), (-5), 'a' };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray5, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -5, 97]");
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { 4, 'a', 9, (-9), (-3) };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray6, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[4, 97, 9, -9, -3]");
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray1 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        java.lang.Class<?> wildcardClass7 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        java.lang.Class<?> wildcardClass7 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { 8, (short) 0, 4 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray4, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[8, 0, 4]");
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray10 = new int[] { 1, ' ', 4 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray10, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 32, 4]");
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray1, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray11 = new int[] { 4, (short) -1, 7, (-9) };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray11, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[4, -1, 7, -9]");
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray5, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray11, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray11, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray5, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = intArray12.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray11, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray18, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[37, 2, 97]");
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray7 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray7, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        int[] intArray16 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray16, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        java.lang.Class<?> wildcardClass16 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray27, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 2, 97]");
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        int[] intArray19 = new int[] { (byte) 10, (-8), 8 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, -8, 8]");
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        int[] intArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray16, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        java.lang.Class<?> wildcardClass19 = intArray12.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        int[] intArray15 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray15, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        java.lang.Class<?> wildcardClass19 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray29, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray27, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray35, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray30, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        int[] intArray19 = new int[] { 6, (-4), 9 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[6, -4, 9]");
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray35, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        java.lang.Class<?> wildcardClass33 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { (-5), (byte) 0, (byte) 100 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-5, 0, 100]");
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray29, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        java.lang.Class<?> wildcardClass16 = intArray13.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray35, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        simpleMethods15.incrementNumberAtIndex(intArray26, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray26, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[37, 2, 97]");
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        java.lang.Class<?> wildcardClass16 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray45, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray13, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        java.lang.Class<?> wildcardClass19 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray12, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray47, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray32, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -7");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        java.lang.Class<?> wildcardClass33 = intArray28.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        java.lang.Class<?> wildcardClass19 = intArray12.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray44, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        java.lang.Class<?> wildcardClass36 = intArray31.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray46, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 1);
        simpleMethods33.incrementNumberAtIndex(intArray60, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 3, 97]");
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray27 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods15.incrementNumberAtIndex(intArray27, (int) (byte) 1);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 1);
        simpleMethods15.incrementNumberAtIndex(intArray42, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray42, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[38, 3, 97]");
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods26.incrementNumberAtIndex(intArray54, 1);
        simpleMethods7.incrementNumberAtIndex(intArray54, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray27 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods15.incrementNumberAtIndex(intArray27, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray27, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        java.lang.Class<?> wildcardClass54 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray35, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        java.lang.Class<?> wildcardClass36 = intArray27.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        java.lang.Class<?> wildcardClass46 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray27 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods15.incrementNumberAtIndex(intArray27, (int) (byte) 1);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 1);
        simpleMethods15.incrementNumberAtIndex(intArray42, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray42, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -7");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[38, 3, 97]");
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        java.lang.Class<?> wildcardClass33 = intArray28.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods41.incrementNumberAtIndex(intArray54, 0);
        simpleMethods19.incrementNumberAtIndex(intArray54, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[39, 3, 97]");
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 1);
        simpleMethods33.incrementNumberAtIndex(intArray80, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        java.lang.Class<?> wildcardClass22 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray47, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        java.lang.Class<?> wildcardClass54 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray31, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray48, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        java.lang.Class<?> wildcardClass36 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray35, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 2, 97]");
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray46, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray34, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        java.lang.Class<?> wildcardClass45 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray37, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        java.lang.Class<?> wildcardClass33 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray46, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 97]");
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[38, 2, 97]");
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray38, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        java.lang.Class<?> wildcardClass22 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods66.incrementNumberAtIndex(intArray79, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[39, 2, 97]");
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray59 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods46.incrementNumberAtIndex(intArray59, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray59, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray67 = new int[] { '#' };
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        java.lang.Class<?> wildcardClass37 = intArray28.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        java.lang.Class<?> wildcardClass34 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray32, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray76, 0);
        simpleMethods38.incrementNumberAtIndex(intArray76, 1);
        simpleMethods19.incrementNumberAtIndex(intArray76, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray74 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods61.incrementNumberAtIndex(intArray74, 5);
        simpleMethods45.incrementNumberAtIndex(intArray74, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        java.lang.Class<?> wildcardClass66 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 1);
        simpleMethods16.incrementNumberAtIndex(intArray63, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        java.lang.Class<?> wildcardClass36 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        simpleMethods1.incrementNumberAtIndex(intArray28, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 3, 97]");
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray67 = new int[] { '#' };
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        java.lang.Class<?> wildcardClass70 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray34, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray48, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray59 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods46.incrementNumberAtIndex(intArray59, 5);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods62.incrementNumberAtIndex(intArray90, 0);
        simpleMethods46.incrementNumberAtIndex(intArray90, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray90, 0);
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        java.lang.Class<?> wildcardClass45 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        int[] intArray34 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray34, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray34, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray43 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods31.incrementNumberAtIndex(intArray43, (int) (byte) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray59 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods46.incrementNumberAtIndex(intArray59, 5);
        simpleMethods31.incrementNumberAtIndex(intArray59, 0);
        simpleMethods15.incrementNumberAtIndex(intArray59, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray67 = new int[] { '#' };
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods70.incrementNumberAtIndex(intArray83, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[39, 2, 97]");
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        java.lang.Class<?> wildcardClass51 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray32, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        java.lang.Class<?> wildcardClass22 = intArray13.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        simpleMethods37.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, 0);
        simpleMethods37.incrementNumberAtIndex(intArray72, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[39, 3, 97]");
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 1);
        simpleMethods36.incrementNumberAtIndex(intArray63, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 3, 97]");
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray20, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray59 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods46.incrementNumberAtIndex(intArray59, 5);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods62.incrementNumberAtIndex(intArray90, 0);
        simpleMethods46.incrementNumberAtIndex(intArray90, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray90, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 1);
        simpleMethods33.incrementNumberAtIndex(intArray80, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        int[] intArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray22, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 1);
        simpleMethods7.incrementNumberAtIndex(intArray65, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[38, 3, 97]");
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        java.lang.Class<?> wildcardClass67 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray29 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods17.incrementNumberAtIndex(intArray29, (int) (byte) 1);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods17.incrementNumberAtIndex(intArray45, 0);
        simpleMethods1.incrementNumberAtIndex(intArray45, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray76, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        java.lang.Class<?> wildcardClass45 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray32, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods19.incrementNumberAtIndex(intArray59, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray59, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 98]");
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        java.lang.Class<?> wildcardClass54 = intArray45.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 1);
        simpleMethods19.incrementNumberAtIndex(intArray46, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray46, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -7");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 3, 97]");
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[38, 2, 97]");
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        java.lang.Class<?> wildcardClass37 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods34.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 7");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[37, 2, 97]");
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 2, 97]");
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        simpleMethods42.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods64.incrementNumberAtIndex(intArray77, 0);
        simpleMethods42.incrementNumberAtIndex(intArray77, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 3, 97]");
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -7");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 3, 97]");
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 2, 97]");
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        java.lang.Class<?> wildcardClass42 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        java.lang.Class<?> wildcardClass58 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        java.lang.Class<?> wildcardClass51 = intArray44.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray56, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        simpleMethods26.incrementNumberAtIndex(intArray53, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray53, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 4, 97]");
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        java.lang.Class<?> wildcardClass42 = intArray35.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods34.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, 0);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        java.lang.Class<?> wildcardClass54 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        java.lang.Class<?> wildcardClass40 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        java.lang.Class<?> wildcardClass45 = intArray40.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 0);
        simpleMethods45.incrementNumberAtIndex(intArray89, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray89, 2);
        java.lang.Class<?> wildcardClass98 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods34.incrementNumberAtIndex(intArray69, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        java.lang.Class<?> wildcardClass45 = intArray38.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray22, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        java.lang.Class<?> wildcardClass43 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        java.lang.Class<?> wildcardClass34 = intArray29.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray20 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods7.incrementNumberAtIndex(intArray20, 5);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        simpleMethods7.incrementNumberAtIndex(intArray89, 3);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        java.lang.Class<?> wildcardClass45 = intArray34.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods22.incrementNumberAtIndex(intArray51, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods36.incrementNumberAtIndex(intArray80, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        int[] intArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        int[] intArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        java.lang.Class<?> wildcardClass58 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        int[] intArray39 = new int[] { 9, (byte) 1, (short) 10, 'a', (-8) };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray39, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[9, 1, 10, 97, -8]");
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods35.incrementNumberAtIndex(intArray73, 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        java.lang.Class<?> wildcardClass40 = intArray31.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods34.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { 100 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100]");
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray38, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 97]");
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        java.lang.Class<?> wildcardClass77 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        java.lang.Class<?> wildcardClass66 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods33.incrementNumberAtIndex(intArray67, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 4, 97]");
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods57.incrementNumberAtIndex(intArray69, 0);
        simpleMethods56.incrementNumberAtIndex(intArray69, 0);
        simpleMethods34.incrementNumberAtIndex(intArray69, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[39, 3, 97]");
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods51.incrementNumberAtIndex(intArray79, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods64.incrementNumberAtIndex(intArray77, 5);
        simpleMethods49.incrementNumberAtIndex(intArray77, 0);
        simpleMethods42.incrementNumberAtIndex(intArray77, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray77, 1);
        java.lang.Class<?> wildcardClass86 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray29, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        int[] intArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray33, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 1);
        simpleMethods19.incrementNumberAtIndex(intArray66, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        int[] intArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        java.lang.Class<?> wildcardClass54 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray78 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods66.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        java.lang.Class<?> wildcardClass85 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        simpleMethods19.incrementNumberAtIndex(intArray50, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[39, 2, 97]");
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 2, 97]");
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray78 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods66.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        simpleMethods50.incrementNumberAtIndex(intArray63, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 97");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[39, 2, 97]");
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        simpleMethods0.incrementNumberAtIndex(intArray58, 5);
        java.lang.Class<?> wildcardClass63 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods41.incrementNumberAtIndex(intArray54, (int) (short) 0);
        simpleMethods22.incrementNumberAtIndex(intArray54, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods65.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods22.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[39, 3, 97]");
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods34.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods70.incrementNumberAtIndex(intArray83, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[39, 2, 97]");
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods34.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, 0);
        java.lang.Class<?> wildcardClass70 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        java.lang.Class<?> wildcardClass22 = intArray13.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        simpleMethods0.incrementNumberAtIndex(intArray58, 5);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods64.incrementNumberAtIndex(intArray77, 5);
        simpleMethods63.incrementNumberAtIndex(intArray77, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 1);
        simpleMethods16.incrementNumberAtIndex(intArray63, 5);
        simpleMethods0.incrementNumberAtIndex(intArray63, 1);
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, -8, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods34.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods15.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 5);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -8, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray78 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods66.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        simpleMethods47.incrementNumberAtIndex(intArray78, 0);
        simpleMethods40.incrementNumberAtIndex(intArray78, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 1);
        simpleMethods16.incrementNumberAtIndex(intArray63, 5);
        simpleMethods0.incrementNumberAtIndex(intArray63, 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        int[] intArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray45, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods42.incrementNumberAtIndex(intArray71, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 2, 97]");
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray85, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        simpleMethods0.incrementNumberAtIndex(intArray58, 5);
        java.lang.Class<?> wildcardClass63 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray34, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods1.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 1);
        simpleMethods1.incrementNumberAtIndex(intArray46, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray46, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[37, 4, 97]");
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[37, 3, 97]");
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 0);
        simpleMethods46.incrementNumberAtIndex(intArray59, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray59, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 2, 97]");
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 1);
        simpleMethods50.incrementNumberAtIndex(intArray77, (int) (short) 0);
        simpleMethods43.incrementNumberAtIndex(intArray77, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[38, 4, 97]");
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 7");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        java.lang.Class<?> wildcardClass72 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods34.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods15.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 5);
        java.lang.Class<?> wildcardClass89 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -8, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        int[] intArray95 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods82.incrementNumberAtIndex(intArray95, 5);
        simpleMethods0.incrementNumberAtIndex(intArray95, 2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[32, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        java.lang.Class<?> wildcardClass63 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        simpleMethods0.incrementNumberAtIndex(intArray58, 5);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods64.incrementNumberAtIndex(intArray77, 5);
        simpleMethods63.incrementNumberAtIndex(intArray77, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods54.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 2, 97]");
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        java.lang.Class<?> wildcardClass19 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        java.lang.Class<?> wildcardClass54 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods64.incrementNumberAtIndex(intArray77, 5);
        simpleMethods49.incrementNumberAtIndex(intArray77, 0);
        simpleMethods42.incrementNumberAtIndex(intArray77, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray77, 1);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 0);
        simpleMethods44.incrementNumberAtIndex(intArray57, 0);
        simpleMethods22.incrementNumberAtIndex(intArray57, (int) (short) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 1);
        simpleMethods22.incrementNumberAtIndex(intArray80, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[38, 3, 97]");
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods0.incrementNumberAtIndex(intArray90, 0);
        java.lang.Class<?> wildcardClass95 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 4);
        java.lang.Class<?> wildcardClass85 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[32, -9, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        simpleMethods50.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods72.incrementNumberAtIndex(intArray85, 0);
        simpleMethods50.incrementNumberAtIndex(intArray85, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 3, 97]");
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 1);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods0.incrementNumberAtIndex(intArray48, (int) (short) 0);
        java.lang.Class<?> wildcardClass57 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray76, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods26.incrementNumberAtIndex(intArray54, 0);
        simpleMethods19.incrementNumberAtIndex(intArray54, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        java.lang.Class<?> wildcardClass49 = intArray38.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray67 = new int[] { '#' };
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36]");
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        int[] intArray22 = new int[] { 7, (short) -1, 9 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray22, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[7, -1, 9]");
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        java.lang.Class<?> wildcardClass49 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods67.incrementNumberAtIndex(intArray80, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 97");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[39, 2, 97]");
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        java.lang.Class<?> wildcardClass63 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods54.incrementNumberAtIndex(intArray85, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        simpleMethods0.incrementNumberAtIndex(intArray58, 5);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 97");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[38, 2, 97]");
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods22.incrementNumberAtIndex(intArray62, 2);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods22.incrementNumberAtIndex(intArray80, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[32, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 3);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods23.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray54, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[40, 2, 97]");
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass81 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods0.incrementNumberAtIndex(intArray48, (int) (short) 0);
        java.lang.Class<?> wildcardClass57 = intArray48.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        int[] intArray93 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods81.incrementNumberAtIndex(intArray93, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray77 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods65.incrementNumberAtIndex(intArray77, (int) (byte) 1);
        simpleMethods46.incrementNumberAtIndex(intArray77, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods53.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods7.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 1);
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 3);
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        java.lang.Class<?> wildcardClass40 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods20.incrementNumberAtIndex(intArray48, 1);
        simpleMethods1.incrementNumberAtIndex(intArray48, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray48, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 7");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -7");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[37, 4, 97]");
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        java.lang.Class<?> wildcardClass96 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 1);
        simpleMethods19.incrementNumberAtIndex(intArray46, (int) (short) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods19.incrementNumberAtIndex(intArray68, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods33.incrementNumberAtIndex(intArray64, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        simpleMethods37.incrementNumberAtIndex(intArray50, 0);
        simpleMethods15.incrementNumberAtIndex(intArray50, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[39, 3, 97]");
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        simpleMethods22.incrementNumberAtIndex(intArray49, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray49, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[38, 3, 97]");
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[37, 3, 97]");
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods41.incrementNumberAtIndex(intArray54, 0);
        simpleMethods19.incrementNumberAtIndex(intArray54, (int) (short) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 1);
        simpleMethods19.incrementNumberAtIndex(intArray77, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[38, 3, 97]");
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray32, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        int[] intArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray22, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        java.lang.Class<?> wildcardClass43 = intArray32.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        java.lang.Class<?> wildcardClass40 = intArray33.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        java.lang.Class<?> wildcardClass82 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 4);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[32, -9, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        int[] intArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray15, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        java.lang.Class<?> wildcardClass39 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods53.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods7.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 1);
        simpleMethods35.incrementNumberAtIndex(intArray82, 5);
        simpleMethods19.incrementNumberAtIndex(intArray82, 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (short) 1);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[32, -7, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods36.incrementNumberAtIndex(intArray71, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        int[] intArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray45, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 1);
        simpleMethods35.incrementNumberAtIndex(intArray82, 5);
        simpleMethods19.incrementNumberAtIndex(intArray82, 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (short) 1);
        java.lang.Class<?> wildcardClass93 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[32, -7, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        java.lang.Class<?> wildcardClass36 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 1);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        java.lang.Class<?> wildcardClass42 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods35.incrementNumberAtIndex(intArray73, 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        int[] intArray83 = new int[] { '#' };
        simpleMethods16.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 1);
        simpleMethods23.incrementNumberAtIndex(intArray50, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray50, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[38, 4, 97]");
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods45.incrementNumberAtIndex(intArray73, 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, 3);
        java.lang.Class<?> wildcardClass80 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, -9, 0, 1, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 0);
        simpleMethods44.incrementNumberAtIndex(intArray57, 0);
        simpleMethods22.incrementNumberAtIndex(intArray57, (int) (short) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 1);
        simpleMethods22.incrementNumberAtIndex(intArray80, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[38, 3, 97]");
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, (int) (short) 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods45.incrementNumberAtIndex(intArray78, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[38, 2, 97]");
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 1);
        simpleMethods16.incrementNumberAtIndex(intArray63, 5);
        simpleMethods0.incrementNumberAtIndex(intArray63, 1);
        java.lang.Class<?> wildcardClass72 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, -8, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 1);
        simpleMethods53.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods46.incrementNumberAtIndex(intArray80, 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 1);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[38, 5, 97]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray79, 4);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        java.lang.Class<?> wildcardClass86 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[35, 8, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods49.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods71.incrementNumberAtIndex(intArray84, 0);
        simpleMethods49.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray84, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[40, 3, 97]");
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray79, 4);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[35, 8, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray49 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods37.incrementNumberAtIndex(intArray49, (int) (byte) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods37.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods70.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray83, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[39, 2, 98]");
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 0);
        simpleMethods45.incrementNumberAtIndex(intArray89, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray89, 2);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        simpleMethods26.incrementNumberAtIndex(intArray53, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray53, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 4, 97]");
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods56.incrementNumberAtIndex(intArray84, 0);
        simpleMethods49.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray84, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        java.lang.Class<?> wildcardClass46 = intArray35.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods36.incrementNumberAtIndex(intArray76, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 98]");
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray62, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        simpleMethods0.incrementNumberAtIndex(intArray58, 5);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        examples.SimpleMethods simpleMethods85 = new examples.SimpleMethods();
        int[] intArray89 = new int[] { '#', 2, 'a' };
        simpleMethods85.incrementNumberAtIndex(intArray89, 0);
        simpleMethods78.incrementNumberAtIndex(intArray89, 0);
        simpleMethods77.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 1);
        simpleMethods53.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods46.incrementNumberAtIndex(intArray80, 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 1);
        java.lang.Class<?> wildcardClass93 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[38, 5, 97]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods64.incrementNumberAtIndex(intArray77, 5);
        simpleMethods49.incrementNumberAtIndex(intArray77, 0);
        simpleMethods42.incrementNumberAtIndex(intArray77, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray36 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods23.incrementNumberAtIndex(intArray36, 5);
        simpleMethods22.incrementNumberAtIndex(intArray36, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray36, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        int[] intArray49 = new int[] { (byte) 0, (byte) 0, 1 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray49, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 1]");
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        java.lang.Class<?> wildcardClass19 = intArray14.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        java.lang.Class<?> wildcardClass39 = intArray34.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray48, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        simpleMethods51.incrementNumberAtIndex(intArray89, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 0);
        simpleMethods74.incrementNumberAtIndex(intArray87, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray62, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods38.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray82, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods32.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        simpleMethods32.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray63, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[40, 2, 97]");
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        java.lang.Class<?> wildcardClass71 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 1);
        simpleMethods16.incrementNumberAtIndex(intArray63, 5);
        simpleMethods0.incrementNumberAtIndex(intArray63, 1);
        int[] intArray72 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, -8, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        java.lang.Class<?> wildcardClass74 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        java.lang.Class<?> wildcardClass36 = intArray31.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 0);
        simpleMethods74.incrementNumberAtIndex(intArray87, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass98 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 0);
        simpleMethods26.incrementNumberAtIndex(intArray57, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[39, 2, 98]");
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods49.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods49.incrementNumberAtIndex(intArray83, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods47.incrementNumberAtIndex(intArray74, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray74, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[38, 4, 97]");
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        int[] intArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray27, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods22.incrementNumberAtIndex(intArray67, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 4, 97]");
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 2);
        java.lang.Class<?> wildcardClass57 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        int[] intArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods0.incrementNumberAtIndex(intArray90, 0);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass75 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray53, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 1);
        simpleMethods45.incrementNumberAtIndex(intArray72, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[38, 3, 97]");
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray34, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 2, 97]");
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods35.incrementNumberAtIndex(intArray73, 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        int[] intArray83 = new int[] { '#' };
        simpleMethods16.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        java.lang.Class<?> wildcardClass88 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray36, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods45.incrementNumberAtIndex(intArray73, 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, 3);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, -9, 0, 1, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 0);
        simpleMethods54.incrementNumberAtIndex(intArray89, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods39.incrementNumberAtIndex(intArray71, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 7");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[40, 2, 97]");
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        int[] intArray49 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray49, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 2);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 1);
        simpleMethods57.incrementNumberAtIndex(intArray84, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[38, 3, 97]");
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, (int) (short) 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods34.incrementNumberAtIndex(intArray67, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass75 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 4);
        examples.SimpleMethods simpleMethods85 = new examples.SimpleMethods();
        int[] intArray89 = new int[] { '#', 2, 'a' };
        simpleMethods85.incrementNumberAtIndex(intArray89, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[32, -9, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 2, 97]");
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        int[] intArray39 = new int[] { 6, (byte) 0, (-1) };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray39, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 7");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[6, 0, -1]");
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        examples.SimpleMethods simpleMethods85 = new examples.SimpleMethods();
        int[] intArray89 = new int[] { '#', 2, 'a' };
        simpleMethods85.incrementNumberAtIndex(intArray89, 0);
        simpleMethods78.incrementNumberAtIndex(intArray89, 0);
        simpleMethods77.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        java.lang.Class<?> wildcardClass98 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 0);
        simpleMethods43.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        java.lang.Class<?> wildcardClass85 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        java.lang.Class<?> wildcardClass74 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, 0);
        simpleMethods40.incrementNumberAtIndex(intArray87, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 1);
        simpleMethods36.incrementNumberAtIndex(intArray63, (int) (short) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods36.incrementNumberAtIndex(intArray84, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[39, 2, 97]");
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods34.incrementNumberAtIndex(intArray62, 0);
        simpleMethods0.incrementNumberAtIndex(intArray62, 1);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray74, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        java.lang.Class<?> wildcardClass83 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 1);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        simpleMethods28.incrementNumberAtIndex(intArray39, 0);
        simpleMethods27.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray58 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods46.incrementNumberAtIndex(intArray58, (int) (byte) 1);
        simpleMethods27.incrementNumberAtIndex(intArray58, 0);
        simpleMethods20.incrementNumberAtIndex(intArray58, 1);
        simpleMethods1.incrementNumberAtIndex(intArray58, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 4);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[32, -9, 0, 0, 101, 11]");
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray31, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        simpleMethods0.incrementNumberAtIndex(intArray58, 5);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray74, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 1);
        simpleMethods19.incrementNumberAtIndex(intArray66, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 3, 97]");
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        java.lang.Class<?> wildcardClass42 = intArray35.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        java.lang.Class<?> wildcardClass76 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray86, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        simpleMethods38.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods16.incrementNumberAtIndex(intArray74, 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods54.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 2, 97]");
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods43.incrementNumberAtIndex(intArray76, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[38, 2, 97]");
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 1);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        simpleMethods28.incrementNumberAtIndex(intArray39, 0);
        simpleMethods27.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray58 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods46.incrementNumberAtIndex(intArray58, (int) (byte) 1);
        simpleMethods27.incrementNumberAtIndex(intArray58, 0);
        simpleMethods20.incrementNumberAtIndex(intArray58, 1);
        simpleMethods1.incrementNumberAtIndex(intArray58, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        simpleMethods38.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods16.incrementNumberAtIndex(intArray74, 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        java.lang.Class<?> wildcardClass85 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods38.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray83, (int) (short) 1);
        int[] intArray92 = new int[] { 10, (-8) };
        simpleMethods16.incrementNumberAtIndex(intArray92, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[11, -8]");
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods0.incrementNumberAtIndex(intArray48, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods57.incrementNumberAtIndex(intArray69, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 2, 97]");
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods54.incrementNumberAtIndex(intArray87, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[38, 2, 97]");
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 1);
        simpleMethods29.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods22.incrementNumberAtIndex(intArray56, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray56, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[38, 4, 97]");
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, 0);
        simpleMethods26.incrementNumberAtIndex(intArray64, 1);
        simpleMethods7.incrementNumberAtIndex(intArray64, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods22.incrementNumberAtIndex(intArray67, 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods76.incrementNumberAtIndex(intArray90, (int) (byte) 0);
        simpleMethods22.incrementNumberAtIndex(intArray90, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        simpleMethods28.incrementNumberAtIndex(intArray39, 0);
        simpleMethods27.incrementNumberAtIndex(intArray39, 0);
        simpleMethods26.incrementNumberAtIndex(intArray39, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray39, (int) (short) 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods51.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray53, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 98]");
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        int[] intArray18 = new int[] { 9, 4, 0 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray18, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[9, 4, 0]");
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        int[] intArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray16, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 3);
        examples.SimpleMethods simpleMethods89 = new examples.SimpleMethods();
        int[] intArray93 = new int[] { '#', 2, 'a' };
        simpleMethods89.incrementNumberAtIndex(intArray93, 0);
        simpleMethods0.incrementNumberAtIndex(intArray93, 1);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[36, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray20, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, 1);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods23.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray54, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[39, 2, 98]");
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, 0);
        simpleMethods52.incrementNumberAtIndex(intArray87, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray87, 1);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[34, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 1);
        simpleMethods45.incrementNumberAtIndex(intArray72, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[38, 3, 97]");
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray36, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        simpleMethods22.incrementNumberAtIndex(intArray49, (int) (short) 0);
        simpleMethods15.incrementNumberAtIndex(intArray49, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray49, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[38, 4, 97]");
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        simpleMethods28.incrementNumberAtIndex(intArray39, 0);
        simpleMethods27.incrementNumberAtIndex(intArray39, 0);
        simpleMethods26.incrementNumberAtIndex(intArray39, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray39, (int) (short) 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        java.lang.Class<?> wildcardClass94 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods34.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[37, 3, 97]");
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods37.incrementNumberAtIndex(intArray65, 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 1);
        java.lang.Class<?> wildcardClass76 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods34.incrementNumberAtIndex(intArray62, 0);
        simpleMethods0.incrementNumberAtIndex(intArray62, 1);
        java.lang.Class<?> wildcardClass73 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray74, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods62.incrementNumberAtIndex(intArray90, 1);
        simpleMethods43.incrementNumberAtIndex(intArray90, 5);
        simpleMethods0.incrementNumberAtIndex(intArray90, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[32, -8, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        examples.SimpleMethods simpleMethods89 = new examples.SimpleMethods();
        int[] intArray93 = new int[] { '#', 2, 'a' };
        simpleMethods89.incrementNumberAtIndex(intArray93, 0);
        simpleMethods82.incrementNumberAtIndex(intArray93, 0);
        simpleMethods0.incrementNumberAtIndex(intArray93, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[38, 2, 97]");
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods51.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        java.lang.Class<?> wildcardClass87 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray42, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        int[] intArray76 = new int[] { 10, (-8) };
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[11, -8]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        java.lang.Class<?> wildcardClass54 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray48, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[40, 2, 97]");
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods37.incrementNumberAtIndex(intArray65, 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray78 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods66.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 1);
        java.lang.Class<?> wildcardClass74 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray49, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[37, 3, 97]");
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray47, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods42.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 1);
        simpleMethods42.incrementNumberAtIndex(intArray87, 1);
        simpleMethods0.incrementNumberAtIndex(intArray87, 1);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 5, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, 1);
        java.lang.Class<?> wildcardClass89 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods19.incrementNumberAtIndex(intArray59, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods64.incrementNumberAtIndex(intArray77, 5);
        simpleMethods19.incrementNumberAtIndex(intArray77, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[32, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods42.incrementNumberAtIndex(intArray82, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 98]");
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 0);
        simpleMethods36.incrementNumberAtIndex(intArray83, 5);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        simpleMethods37.incrementNumberAtIndex(intArray50, 0);
        simpleMethods15.incrementNumberAtIndex(intArray50, (int) (short) 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 1);
        simpleMethods15.incrementNumberAtIndex(intArray73, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[38, 3, 97]");
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 0);
        simpleMethods42.incrementNumberAtIndex(intArray89, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        simpleMethods22.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        simpleMethods22.incrementNumberAtIndex(intArray70, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[39, 2, 97]");
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 0);
        simpleMethods36.incrementNumberAtIndex(intArray83, 5);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        java.lang.Class<?> wildcardClass92 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 1);
        java.lang.Class<?> wildcardClass94 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods16.incrementNumberAtIndex(intArray78, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[39, 3, 97]");
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods3 = new examples.SimpleMethods();
        int[] intArray7 = new int[] { '#', 2, 'a' };
        simpleMethods3.incrementNumberAtIndex(intArray7, 0);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        int[] intArray14 = new int[] { '#', 2, 'a' };
        simpleMethods10.incrementNumberAtIndex(intArray14, 0);
        simpleMethods3.incrementNumberAtIndex(intArray14, 0);
        simpleMethods2.incrementNumberAtIndex(intArray14, 0);
        simpleMethods1.incrementNumberAtIndex(intArray14, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods23.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray68, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        int[] intArray94 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods81.incrementNumberAtIndex(intArray94, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods42.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 1);
        simpleMethods42.incrementNumberAtIndex(intArray87, 1);
        simpleMethods0.incrementNumberAtIndex(intArray87, 1);
        java.lang.Class<?> wildcardClass98 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 5, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        int[] intArray46 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray46, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 1);
        simpleMethods49.incrementNumberAtIndex(intArray76, (int) (short) 0);
        simpleMethods42.incrementNumberAtIndex(intArray76, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[38, 4, 97]");
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 0);
        simpleMethods45.incrementNumberAtIndex(intArray76, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods38.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray82, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray68, 4);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass75 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        int[] intArray34 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray34, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray42, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[39, 2, 97]");
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods49.incrementNumberAtIndex(intArray62, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray62, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 2, 97]");
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        java.lang.Class<?> wildcardClass55 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods53.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods7.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 1);
        examples.SimpleMethods simpleMethods91 = new examples.SimpleMethods();
        int[] intArray95 = new int[] { '#', 2, 'a' };
        simpleMethods91.incrementNumberAtIndex(intArray95, 0);
        simpleMethods0.incrementNumberAtIndex(intArray95, 2);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[36, 2, 98]");
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods22.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods56.incrementNumberAtIndex(intArray84, 0);
        simpleMethods22.incrementNumberAtIndex(intArray84, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[39, 3, 97]");
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 1);
        java.lang.Class<?> wildcardClass85 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 1);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods67.incrementNumberAtIndex(intArray80, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[39, 2, 97]");
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods38.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray72, 0);
        simpleMethods34.incrementNumberAtIndex(intArray72, 1);
        simpleMethods15.incrementNumberAtIndex(intArray72, 0);
        int[] intArray82 = new int[] { '#' };
        simpleMethods15.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36]");
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods39.incrementNumberAtIndex(intArray67, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass77 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray39, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[39, 3, 97]");
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods55.incrementNumberAtIndex(intArray86, 0);
        simpleMethods19.incrementNumberAtIndex(intArray86, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray68, 4);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass75 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods36.incrementNumberAtIndex(intArray50, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        java.lang.Class<?> wildcardClass57 = intArray50.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 1);
        simpleMethods54.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        java.lang.Class<?> wildcardClass92 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods41.incrementNumberAtIndex(intArray54, (int) (short) 0);
        simpleMethods22.incrementNumberAtIndex(intArray54, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[40, 2, 97]");
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods54.incrementNumberAtIndex(intArray87, 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 4);
        int[] intArray87 = new int[] { (-5), 5 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[32, -9, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-5, 5]");
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray77 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods65.incrementNumberAtIndex(intArray77, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray77, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods77.incrementNumberAtIndex(intArray88, 0);
        simpleMethods76.incrementNumberAtIndex(intArray88, 0);
        simpleMethods40.incrementNumberAtIndex(intArray88, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[39, 2, 97]");
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods36.incrementNumberAtIndex(intArray50, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods57.incrementNumberAtIndex(intArray71, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        java.lang.Class<?> wildcardClass54 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods57.incrementNumberAtIndex(intArray85, 0);
        simpleMethods41.incrementNumberAtIndex(intArray85, (int) (short) 1);
        simpleMethods22.incrementNumberAtIndex(intArray85, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray75 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods63.incrementNumberAtIndex(intArray75, (int) (byte) 1);
        simpleMethods44.incrementNumberAtIndex(intArray75, 0);
        simpleMethods37.incrementNumberAtIndex(intArray75, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 2);
        java.lang.Class<?> wildcardClass57 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 1);
        simpleMethods19.incrementNumberAtIndex(intArray64, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 4, 97]");
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 1);
        simpleMethods16.incrementNumberAtIndex(intArray63, 5);
        simpleMethods0.incrementNumberAtIndex(intArray63, 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods41.incrementNumberAtIndex(intArray54, 0);
        simpleMethods19.incrementNumberAtIndex(intArray54, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[39, 3, 97]");
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods62.incrementNumberAtIndex(intArray90, 1);
        simpleMethods43.incrementNumberAtIndex(intArray90, 5);
        simpleMethods0.incrementNumberAtIndex(intArray90, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[32, -8, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 2, 97]");
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        java.lang.Class<?> wildcardClass40 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods35.incrementNumberAtIndex(intArray73, 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        int[] intArray83 = new int[] { '#' };
        simpleMethods16.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        int[] intArray90 = new int[] { (-7), (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray90, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-6, -10]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        simpleMethods22.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods22.incrementNumberAtIndex(intArray71, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray88, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods55.incrementNumberAtIndex(intArray86, 0);
        simpleMethods19.incrementNumberAtIndex(intArray86, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 0);
        simpleMethods43.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods58.incrementNumberAtIndex(intArray86, 0);
        simpleMethods39.incrementNumberAtIndex(intArray86, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods39.incrementNumberAtIndex(intArray71, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[40, 2, 97]");
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray1, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        int[] intArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray16, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
    }
}

