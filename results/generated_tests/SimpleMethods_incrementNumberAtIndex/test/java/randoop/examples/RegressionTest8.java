package examples;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test4001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4001");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods43.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, (int) (short) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[38, 3, 97]");
    }

    @Test
    public void test4002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4002");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray55 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods42.incrementNumberAtIndex(intArray55, 5);
        simpleMethods41.incrementNumberAtIndex(intArray55, (int) (byte) 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray74 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods61.incrementNumberAtIndex(intArray74, 5);
        simpleMethods60.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods41.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray74, 2);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[34, -9, 1, 0, 100, 11]");
    }

    @Test
    public void test4003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4003");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray86, (int) (short) 1);
        int[] intArray95 = new int[] { 10, (-8) };
        simpleMethods19.incrementNumberAtIndex(intArray95, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[11, -8]");
    }

    @Test
    public void test4004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4004");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods31.incrementNumberAtIndex(intArray43, 1);
        simpleMethods16.incrementNumberAtIndex(intArray43, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods54.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        java.lang.Class<?> wildcardClass96 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test4005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4005");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods48.incrementNumberAtIndex(intArray79, 0);
        simpleMethods47.incrementNumberAtIndex(intArray79, (int) (byte) 0);
        examples.SimpleMethods simpleMethods86 = new examples.SimpleMethods();
        int[] intArray90 = new int[] { '#', 2, 'a' };
        simpleMethods86.incrementNumberAtIndex(intArray90, 0);
        simpleMethods47.incrementNumberAtIndex(intArray90, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray90, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[37, 3, 97]");
    }

    @Test
    public void test4006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4006");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods37.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods37.incrementNumberAtIndex(intArray87, (int) (short) 0);
        int[] intArray95 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods37.incrementNumberAtIndex(intArray95, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray95, 2);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[10, 0, -6]");
    }

    @Test
    public void test4007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4007");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods0.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods55.incrementNumberAtIndex(intArray84, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4008");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
    }

    @Test
    public void test4009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4009");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods67.incrementNumberAtIndex(intArray85, 0);
        simpleMethods60.incrementNumberAtIndex(intArray85, (int) (short) 0);
        simpleMethods41.incrementNumberAtIndex(intArray85, (int) (short) 1);
        simpleMethods34.incrementNumberAtIndex(intArray85, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[40, 3, 97]");
    }

    @Test
    public void test4010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4010");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods65.incrementNumberAtIndex(intArray83, 0);
        simpleMethods58.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods39.incrementNumberAtIndex(intArray83, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[39, 3, 97]");
    }

    @Test
    public void test4011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4011");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        int[] intArray44 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        simpleMethods47.incrementNumberAtIndex(intArray60, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, -1, 8, -10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[39, 2, 97]");
    }

    @Test
    public void test4012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4012");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4013");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods43.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, (int) (short) 1);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test4014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4014");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods55.incrementNumberAtIndex(intArray86, 0);
        simpleMethods40.incrementNumberAtIndex(intArray86, 3);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        java.lang.Class<?> wildcardClass95 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4015");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods0.incrementNumberAtIndex(intArray87, 3);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[32, -10, 0, 1, 100, 11]");
    }

    @Test
    public void test4016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4016");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        simpleMethods38.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods38.incrementNumberAtIndex(intArray78, 2);
        simpleMethods37.incrementNumberAtIndex(intArray78, 2);
        simpleMethods0.incrementNumberAtIndex(intArray78, 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 3, 99]");
    }

    @Test
    public void test4017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4017");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods55.incrementNumberAtIndex(intArray86, 0);
        simpleMethods40.incrementNumberAtIndex(intArray86, 3);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4018");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        int[] intArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4019");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, 1);
        simpleMethods40.incrementNumberAtIndex(intArray87, 5);
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (short) 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test4020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4020");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods79.incrementNumberAtIndex(intArray92, 5);
        simpleMethods64.incrementNumberAtIndex(intArray92, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4021");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
    }

    @Test
    public void test4022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4022");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods3 = new examples.SimpleMethods();
        int[] intArray7 = new int[] { '#', 2, 'a' };
        simpleMethods3.incrementNumberAtIndex(intArray7, 0);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        int[] intArray14 = new int[] { '#', 2, 'a' };
        simpleMethods10.incrementNumberAtIndex(intArray14, 0);
        simpleMethods3.incrementNumberAtIndex(intArray14, 0);
        simpleMethods2.incrementNumberAtIndex(intArray14, 0);
        simpleMethods1.incrementNumberAtIndex(intArray14, (int) (short) 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        simpleMethods30.incrementNumberAtIndex(intArray61, 0);
        simpleMethods23.incrementNumberAtIndex(intArray61, 1);
        simpleMethods1.incrementNumberAtIndex(intArray61, 2);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 8, 0, 1, -7]");
    }

    @Test
    public void test4023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4023");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        int[] intArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray16, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
    }

    @Test
    public void test4024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4024");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods39.incrementNumberAtIndex(intArray79, 2);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 3, 98]");
    }

    @Test
    public void test4025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4025");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray39, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test4026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4026");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods23.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray68, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test4027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4027");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray20 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods7.incrementNumberAtIndex(intArray20, 5);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods58.incrementNumberAtIndex(intArray71, (int) (short) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 1);
        simpleMethods58.incrementNumberAtIndex(intArray86, 0);
        simpleMethods7.incrementNumberAtIndex(intArray86, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[39, 3, 97]");
    }

    @Test
    public void test4028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4028");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        int[] intArray48 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods58.incrementNumberAtIndex(intArray76, 0);
        simpleMethods51.incrementNumberAtIndex(intArray76, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1, 11, 0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[40, 2, 97]");
    }

    @Test
    public void test4029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4029");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods51.incrementNumberAtIndex(intArray79, 0);
        simpleMethods35.incrementNumberAtIndex(intArray79, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray79, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray79, 0);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[34, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test4030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4030");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods20.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, 2);
        simpleMethods20.incrementNumberAtIndex(intArray80, 0);
        simpleMethods1.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test4031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4031");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        simpleMethods35.incrementNumberAtIndex(intArray66, 0);
        simpleMethods34.incrementNumberAtIndex(intArray66, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test4032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4032");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods31.incrementNumberAtIndex(intArray43, 1);
        simpleMethods16.incrementNumberAtIndex(intArray43, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods54.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test4033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4033");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods3 = new examples.SimpleMethods();
        int[] intArray7 = new int[] { '#', 2, 'a' };
        simpleMethods3.incrementNumberAtIndex(intArray7, 0);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        int[] intArray14 = new int[] { '#', 2, 'a' };
        simpleMethods10.incrementNumberAtIndex(intArray14, 0);
        simpleMethods3.incrementNumberAtIndex(intArray14, 0);
        simpleMethods2.incrementNumberAtIndex(intArray14, 0);
        simpleMethods1.incrementNumberAtIndex(intArray14, (int) (short) 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        simpleMethods23.incrementNumberAtIndex(intArray54, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 0);
        simpleMethods63.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[39, 3, 97]");
    }

    @Test
    public void test4034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4034");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods20.incrementNumberAtIndex(intArray51, 0);
        simpleMethods19.incrementNumberAtIndex(intArray51, (int) (byte) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods19.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (short) 1);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test4035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4035");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        simpleMethods14.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        simpleMethods14.incrementNumberAtIndex(intArray48, 4);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods14.incrementNumberAtIndex(intArray65, (int) (short) 1);
        simpleMethods7.incrementNumberAtIndex(intArray65, 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, 3);
        java.lang.Class<?> wildcardClass74 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 8, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test4036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4036");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods40.incrementNumberAtIndex(intArray53, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test4037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4037");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray90 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods78.incrementNumberAtIndex(intArray90, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test4038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4038");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods51.incrementNumberAtIndex(intArray64, (int) (short) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 1);
        simpleMethods51.incrementNumberAtIndex(intArray79, 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, 0);
        java.lang.Class<?> wildcardClass90 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test4039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4039");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray74, 4);
        simpleMethods0.incrementNumberAtIndex(intArray74, 1);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[35, 8, -1, 1, -6]");
    }

    @Test
    public void test4040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4040");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[40, 2, 97]");
    }

    @Test
    public void test4041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4041");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 1);
        java.lang.Class<?> wildcardClass89 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test4042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4042");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray56 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods44.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods44.incrementNumberAtIndex(intArray72, 0);
        simpleMethods37.incrementNumberAtIndex(intArray72, 2);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        examples.SimpleMethods simpleMethods86 = new examples.SimpleMethods();
        int[] intArray90 = new int[] { '#', 2, 'a' };
        simpleMethods86.incrementNumberAtIndex(intArray90, 0);
        simpleMethods79.incrementNumberAtIndex(intArray90, 0);
        simpleMethods37.incrementNumberAtIndex(intArray90, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[38, 2, 97]");
    }

    @Test
    public void test4043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4043");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods33.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 3, 97]");
    }

    @Test
    public void test4044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4044");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods38.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 3, 97]");
    }

    @Test
    public void test4045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4045");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        simpleMethods47.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 0);
        simpleMethods69.incrementNumberAtIndex(intArray82, 0);
        simpleMethods47.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods40.incrementNumberAtIndex(intArray82, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[39, 3, 98]");
    }

    @Test
    public void test4046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4046");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        simpleMethods43.incrementNumberAtIndex(intArray70, (int) (short) 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods79.incrementNumberAtIndex(intArray92, 5);
        simpleMethods43.incrementNumberAtIndex(intArray92, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray92, (int) (short) 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4047");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 3);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test4048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4048");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray58 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray58, (int) (short) 1);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray61, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 0, -7]");
    }

    @Test
    public void test4049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4049");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods39.incrementNumberAtIndex(intArray79, 2);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 3, 98]");
    }

    @Test
    public void test4050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4050");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods34.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods34.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, 1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4051");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
    }

    @Test
    public void test4052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4052");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods43.incrementNumberAtIndex(intArray72, (int) (short) 0);
        int[] intArray87 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods43.incrementNumberAtIndex(intArray87, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, -1, 8, -10]");
    }

    @Test
    public void test4053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4053");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods1.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        simpleMethods28.incrementNumberAtIndex(intArray39, 0);
        simpleMethods27.incrementNumberAtIndex(intArray39, 0);
        simpleMethods26.incrementNumberAtIndex(intArray39, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods50.incrementNumberAtIndex(intArray68, 0);
        simpleMethods1.incrementNumberAtIndex(intArray68, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[38, 3, 97]");
    }

    @Test
    public void test4054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4054");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 5);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test4055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4055");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        simpleMethods18.incrementNumberAtIndex(intArray30, 0);
        simpleMethods17.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods43.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        java.lang.Class<?> wildcardClass85 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test4056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4056");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods32.incrementNumberAtIndex(intArray60, 0);
        simpleMethods25.incrementNumberAtIndex(intArray60, 2);
        simpleMethods0.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (short) 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[37, 3, 97]");
    }

    @Test
    public void test4057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4057");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray65, 2);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 3, 98]");
    }

    @Test
    public void test4058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4058");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (byte) 0);
        int[] intArray49 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray49, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 2, 97]");
    }

    @Test
    public void test4059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4059");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods79.incrementNumberAtIndex(intArray92, 5);
        simpleMethods64.incrementNumberAtIndex(intArray92, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4060");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray78 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods66.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        simpleMethods47.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods47.incrementNumberAtIndex(intArray87, 2);
        simpleMethods46.incrementNumberAtIndex(intArray87, 2);
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 2, 99]");
    }

    @Test
    public void test4061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4061");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        simpleMethods39.incrementNumberAtIndex(intArray70, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, (int) (short) 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[39, 3, 97]");
    }

    @Test
    public void test4062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4062");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods38.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, 2);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -8, 1, 0, 100, 11]");
    }

    @Test
    public void test4063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4063");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray45, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[38, 2, 97]");
    }

    @Test
    public void test4064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4064");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray20 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods7.incrementNumberAtIndex(intArray20, 5);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods58.incrementNumberAtIndex(intArray87, (int) (short) 1);
        simpleMethods7.incrementNumberAtIndex(intArray87, 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (short) 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test4065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4065");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
    }

    @Test
    public void test4066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4066");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, (int) (short) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods64.incrementNumberAtIndex(intArray77, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray77, (int) (short) 1);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 3, 97]");
    }

    @Test
    public void test4067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4067");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        simpleMethods22.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods22.incrementNumberAtIndex(intArray72, (int) (short) 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods77.incrementNumberAtIndex(intArray91, (int) (byte) 0);
        simpleMethods22.incrementNumberAtIndex(intArray91, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4068");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray74, 4);
        simpleMethods0.incrementNumberAtIndex(intArray74, 1);
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[35, 8, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test4069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4069");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 1);
        simpleMethods16.incrementNumberAtIndex(intArray63, 5);
        simpleMethods0.incrementNumberAtIndex(intArray63, 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test4070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4070");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        int[] intArray92 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods80.incrementNumberAtIndex(intArray92, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray92, 4);
        simpleMethods0.incrementNumberAtIndex(intArray92, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[36, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4071");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray27 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods15.incrementNumberAtIndex(intArray27, (int) (byte) 1);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        int[] intArray43 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods30.incrementNumberAtIndex(intArray43, 5);
        simpleMethods15.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 0);
        simpleMethods48.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods70.incrementNumberAtIndex(intArray83, 0);
        simpleMethods48.incrementNumberAtIndex(intArray83, (int) (short) 1);
        simpleMethods15.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[41, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test4072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4072");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray8 = new int[] { 3 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray8, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[3]");
    }

    @Test
    public void test4073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4073");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods36.incrementNumberAtIndex(intArray65, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4074");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods22.incrementNumberAtIndex(intArray69, 5);
        simpleMethods0.incrementNumberAtIndex(intArray69, 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test4075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4075");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[38, 7, -1, 1, -7]");
    }

    @Test
    public void test4076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4076");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods49.incrementNumberAtIndex(intArray62, (int) (short) 0);
        simpleMethods33.incrementNumberAtIndex(intArray62, (int) (short) 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods33.incrementNumberAtIndex(intArray86, 5);
        simpleMethods0.incrementNumberAtIndex(intArray86, 2);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[32, -10, 1, 0, 100, 12]");
    }

    @Test
    public void test4077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4077");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods33.incrementNumberAtIndex(intArray73, 2);
        simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 3, 98]");
    }

    @Test
    public void test4078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4078");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods30.incrementNumberAtIndex(intArray44, (int) (byte) 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods49.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods30.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods23.incrementNumberAtIndex(intArray63, 2);
        simpleMethods22.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        java.lang.Class<?> wildcardClass76 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[34, -8, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test4079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4079");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray87 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods75.incrementNumberAtIndex(intArray87, (int) (byte) 1);
        simpleMethods56.incrementNumberAtIndex(intArray87, 0);
        simpleMethods55.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test4080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4080");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        simpleMethods14.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        simpleMethods14.incrementNumberAtIndex(intArray48, 4);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods14.incrementNumberAtIndex(intArray65, (int) (short) 1);
        simpleMethods7.incrementNumberAtIndex(intArray65, 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, 3);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 8, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test4081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4081");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        simpleMethods43.incrementNumberAtIndex(intArray70, (int) (short) 0);
        simpleMethods36.incrementNumberAtIndex(intArray70, 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4082");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods9.incrementNumberAtIndex(intArray22, 5);
        simpleMethods8.incrementNumberAtIndex(intArray22, (int) (byte) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        int[] intArray41 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods28.incrementNumberAtIndex(intArray41, 5);
        simpleMethods27.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods8.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods53.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods53.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods52.incrementNumberAtIndex(intArray86, 1);
        simpleMethods0.incrementNumberAtIndex(intArray86, 2);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test4083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4083");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods17.incrementNumberAtIndex(intArray46, (int) (short) 1);
        simpleMethods1.incrementNumberAtIndex(intArray46, (int) (short) 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods53.incrementNumberAtIndex(intArray81, 0);
        simpleMethods1.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test4084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4084");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods64.incrementNumberAtIndex(intArray77, (int) (short) 0);
        simpleMethods49.incrementNumberAtIndex(intArray77, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray77, 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 4, 97]");
    }

    @Test
    public void test4085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4085");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[38, 3, 97]");
    }

    @Test
    public void test4086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4086");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        int[] intArray48 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods51.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods70.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods51.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1, 11, 0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[39, 3, 97]");
    }

    @Test
    public void test4087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4087");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods0.incrementNumberAtIndex(intArray87, 3);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[32, -10, 0, 1, 100, 11]");
    }

    @Test
    public void test4088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4088");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray21 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods9.incrementNumberAtIndex(intArray21, (int) (byte) 1);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        simpleMethods24.incrementNumberAtIndex(intArray36, 1);
        simpleMethods9.incrementNumberAtIndex(intArray36, (int) (short) 0);
        simpleMethods2.incrementNumberAtIndex(intArray36, 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods2.incrementNumberAtIndex(intArray59, 0);
        simpleMethods1.incrementNumberAtIndex(intArray59, 0);
        simpleMethods0.incrementNumberAtIndex(intArray59, 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[40, 3, 97]");
    }

    @Test
    public void test4089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4089");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        simpleMethods18.incrementNumberAtIndex(intArray30, 0);
        simpleMethods17.incrementNumberAtIndex(intArray30, (int) (short) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray70, (int) (short) 0);
        simpleMethods17.incrementNumberAtIndex(intArray70, 0);
        simpleMethods16.incrementNumberAtIndex(intArray70, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 7, -1, 1, -7]");
    }

    @Test
    public void test4090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4090");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4091");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        examples.SimpleMethods simpleMethods86 = new examples.SimpleMethods();
        int[] intArray90 = new int[] { '#', 2, 'a' };
        simpleMethods86.incrementNumberAtIndex(intArray90, 0);
        simpleMethods79.incrementNumberAtIndex(intArray90, 0);
        simpleMethods78.incrementNumberAtIndex(intArray90, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[38, 2, 97]");
    }

    @Test
    public void test4092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4092");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods40.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods65.incrementNumberAtIndex(intArray79, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray79, 1);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4093");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test4094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4094");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray81 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods69.incrementNumberAtIndex(intArray81, (int) (byte) 1);
        simpleMethods50.incrementNumberAtIndex(intArray81, 0);
        simpleMethods49.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 2);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[38, 7, 0, 1, -7]");
    }

    @Test
    public void test4095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4095");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods38.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray83, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test4096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4096");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods73.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[10, 2, 2, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4097");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray39 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        simpleMethods42.incrementNumberAtIndex(intArray55, (int) (short) 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods42.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, (int) (short) 1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[38, 3, 97]");
    }

    @Test
    public void test4098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4098");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        int[] intArray59 = new int[] { (-10), (short) 100, (short) 1, 5, (short) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray59, 0);
        int[] intArray65 = new int[] { (short) 0, (-7), (-8) };
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods68.incrementNumberAtIndex(intArray81, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-9, 100, 1, 5, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, -6, -8]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test4099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4099");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, 1);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[37, 4, 97]");
    }

    @Test
    public void test4100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4100");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods47.incrementNumberAtIndex(intArray75, 0);
        simpleMethods40.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[37, 2, 97]");
    }

    @Test
    public void test4101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4101");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray91 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods79.incrementNumberAtIndex(intArray91, (int) (byte) 1);
        simpleMethods60.incrementNumberAtIndex(intArray91, 0);
        simpleMethods45.incrementNumberAtIndex(intArray91, 3);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test4102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4102");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (byte) 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray61, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 3, 97]");
    }

    @Test
    public void test4103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4103");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods25.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 1);
        simpleMethods57.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods50.incrementNumberAtIndex(intArray84, 1);
        simpleMethods25.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[38, 5, 97]");
    }

    @Test
    public void test4104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4104");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray57, 0);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods66.incrementNumberAtIndex(intArray79, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[39, 3, 97]");
    }

    @Test
    public void test4105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4105");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods45.incrementNumberAtIndex(intArray73, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 2, 97]");
    }

    @Test
    public void test4106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4106");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        simpleMethods15.incrementNumberAtIndex(intArray26, 0);
        simpleMethods14.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods14.incrementNumberAtIndex(intArray45, 0);
        simpleMethods7.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods7.incrementNumberAtIndex(intArray80, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 2, 97]");
    }

    @Test
    public void test4107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4107");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray36 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods23.incrementNumberAtIndex(intArray36, 5);
        simpleMethods8.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods8.incrementNumberAtIndex(intArray86, 0);
        simpleMethods1.incrementNumberAtIndex(intArray86, 1);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 9, -1, 1, -7]");
    }

    @Test
    public void test4108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4108");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods33.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods33.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 3, 97]");
    }

    @Test
    public void test4109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4109");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods34.incrementNumberAtIndex(intArray69, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4110");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4111");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods30.incrementNumberAtIndex(intArray44, (int) (byte) 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods49.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods30.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods23.incrementNumberAtIndex(intArray63, 2);
        simpleMethods22.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[34, -8, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test4112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4112");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 1);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test4113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4113");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 0);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[40, 3, 97]");
    }

    @Test
    public void test4114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4114");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods40.incrementNumberAtIndex(intArray80, 2);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        java.lang.Class<?> wildcardClass87 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[37, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test4115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4115");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray74, 4);
        simpleMethods0.incrementNumberAtIndex(intArray74, 1);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[35, 8, -1, 1, -6]");
    }

    @Test
    public void test4116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4116");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        int[] intArray48 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods51.incrementNumberAtIndex(intArray64, (int) (short) 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods51.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1, 11, 0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[37, 5, 97]");
    }

    @Test
    public void test4117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4117");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods43.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test4118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4118");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[40, 2, 97]");
    }

    @Test
    public void test4119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4119");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 0);
        simpleMethods45.incrementNumberAtIndex(intArray76, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[39, 2, 97]");
    }

    @Test
    public void test4120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4120");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods55.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods39.incrementNumberAtIndex(intArray86, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 7, 0, 1, -7]");
    }

    @Test
    public void test4121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4121");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods51.incrementNumberAtIndex(intArray64, 0);
        simpleMethods29.incrementNumberAtIndex(intArray64, (int) (short) 1);
        simpleMethods22.incrementNumberAtIndex(intArray64, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[40, 3, 97]");
    }

    @Test
    public void test4122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4122");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 5);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test4123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4123");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray87 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods75.incrementNumberAtIndex(intArray87, (int) (byte) 1);
        simpleMethods56.incrementNumberAtIndex(intArray87, 0);
        simpleMethods55.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test4124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4124");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        int[] intArray48 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods67.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods51.incrementNumberAtIndex(intArray80, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1, 11, 0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 2, 97]");
    }

    @Test
    public void test4125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4125");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods67.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods51.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 2);
        java.lang.Class<?> wildcardClass93 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4126");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods54.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        simpleMethods54.incrementNumberAtIndex(intArray88, 4);
        simpleMethods0.incrementNumberAtIndex(intArray88, 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[36, 7, -1, 1, -6]");
    }

    @Test
    public void test4127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4127");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[10, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test4128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4128");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        int[] intArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray16, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test4129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4129");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        int[] intArray38 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods25.incrementNumberAtIndex(intArray38, 5);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray72, 2);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[37, 7, 0, 1, -7]");
    }

    @Test
    public void test4130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4130");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray41, 4);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods65.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods46.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[41, 3, 97]");
    }

    @Test
    public void test4131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4131");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods0.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4132");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray74, 4);
        simpleMethods0.incrementNumberAtIndex(intArray74, 1);
        java.lang.Class<?> wildcardClass81 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[35, 8, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test4133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4133");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray56 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods44.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods44.incrementNumberAtIndex(intArray72, 0);
        simpleMethods37.incrementNumberAtIndex(intArray72, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        int[] intArray94 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods81.incrementNumberAtIndex(intArray94, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4134");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray72, 0);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (byte) 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods79.incrementNumberAtIndex(intArray92, 5);
        simpleMethods40.incrementNumberAtIndex(intArray92, 0);
        simpleMethods0.incrementNumberAtIndex(intArray92, 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4135");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test4136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4136");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods57.incrementNumberAtIndex(intArray70, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[9, 3, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test4137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4137");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 0);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test4138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4138");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[37, 2, 97]");
    }

    @Test
    public void test4139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4139");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray87 = new int[] { (-7), (short) 0, 1, (-10), '4', 5 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-7, 0, 1, -10, 52, 5]");
    }

    @Test
    public void test4140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4140");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods15.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray47, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4141");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray58 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray58, (int) (short) 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, 2);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 0, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 3, 98]");
    }

    @Test
    public void test4142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4142");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods57.incrementNumberAtIndex(intArray70, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[9, 3, 1, -2, -1, 2]");
    }

    @Test
    public void test4143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4143");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods67.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods51.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 2);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4144");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        examples.SimpleMethods simpleMethods85 = new examples.SimpleMethods();
        int[] intArray89 = new int[] { '#', 2, 'a' };
        simpleMethods85.incrementNumberAtIndex(intArray89, 0);
        simpleMethods78.incrementNumberAtIndex(intArray89, 0);
        simpleMethods77.incrementNumberAtIndex(intArray89, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[37, 3, 97]");
    }

    @Test
    public void test4145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4145");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods40.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods65.incrementNumberAtIndex(intArray79, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods86 = new examples.SimpleMethods();
        int[] intArray90 = new int[] { '#', 2, 'a' };
        simpleMethods86.incrementNumberAtIndex(intArray90, 0);
        simpleMethods40.incrementNumberAtIndex(intArray90, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[37, 2, 97]");
    }

    @Test
    public void test4146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4146");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, (int) (short) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods67.incrementNumberAtIndex(intArray80, 0);
        simpleMethods34.incrementNumberAtIndex(intArray80, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[39, 3, 97]");
    }

    @Test
    public void test4147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4147");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods34.incrementNumberAtIndex(intArray62, 0);
        simpleMethods0.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (short) 1);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[37, 4, 97]");
    }

    @Test
    public void test4148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4148");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods68.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[40, 2, 97]");
    }

    @Test
    public void test4149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4149");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray79, 3);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[35, 8, -1, 2, -7]");
    }

    @Test
    public void test4150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4150");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 0);
        java.lang.Class<?> wildcardClass84 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test4151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4151");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods73.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[10, 2, 2, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test4152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4152");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4153");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods33.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods52.incrementNumberAtIndex(intArray66, (int) (byte) 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods71.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        simpleMethods52.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        simpleMethods33.incrementNumberAtIndex(intArray85, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4154");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 2, 97]");
    }

    @Test
    public void test4155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4155");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods51.incrementNumberAtIndex(intArray64, (int) (short) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 1);
        simpleMethods51.incrementNumberAtIndex(intArray79, 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test4156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4156");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, (int) (short) 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray87 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods75.incrementNumberAtIndex(intArray87, (int) (byte) 1);
        simpleMethods56.incrementNumberAtIndex(intArray87, (int) (short) 0);
        simpleMethods34.incrementNumberAtIndex(intArray87, 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[38, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test4157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4157");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        simpleMethods39.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 4, 97]");
    }

    @Test
    public void test4158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4158");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods9.incrementNumberAtIndex(intArray22, 5);
        simpleMethods8.incrementNumberAtIndex(intArray22, (int) (byte) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        int[] intArray41 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods28.incrementNumberAtIndex(intArray41, 5);
        simpleMethods27.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods8.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods70.incrementNumberAtIndex(intArray83, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[39, 2, 97]");
    }

    @Test
    public void test4159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4159");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray80 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods68.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        simpleMethods49.incrementNumberAtIndex(intArray80, 0);
        simpleMethods48.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        examples.SimpleMethods simpleMethods87 = new examples.SimpleMethods();
        int[] intArray91 = new int[] { '#', 2, 'a' };
        simpleMethods87.incrementNumberAtIndex(intArray91, 0);
        simpleMethods48.incrementNumberAtIndex(intArray91, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[37, 2, 97]");
    }

    @Test
    public void test4160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4160");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray22, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
    }

    @Test
    public void test4161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4161");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods40.incrementNumberAtIndex(intArray80, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 98]");
    }

    @Test
    public void test4162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4162");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray57, 0);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods66.incrementNumberAtIndex(intArray79, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test4163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4163");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4164");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        simpleMethods43.incrementNumberAtIndex(intArray70, (int) (short) 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods79.incrementNumberAtIndex(intArray92, 5);
        simpleMethods43.incrementNumberAtIndex(intArray92, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray92, (int) (short) 1);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4165");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods49.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods74.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        simpleMethods49.incrementNumberAtIndex(intArray88, 1);
        simpleMethods0.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test4166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4166");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods55.incrementNumberAtIndex(intArray86, 0);
        simpleMethods19.incrementNumberAtIndex(intArray86, 1);
        simpleMethods0.incrementNumberAtIndex(intArray86, 4);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[36, 8, -1, 1, -6]");
    }

    @Test
    public void test4167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4167");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods39.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods39.incrementNumberAtIndex(intArray85, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[32, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test4168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4168");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4169");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 2);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        examples.SimpleMethods simpleMethods87 = new examples.SimpleMethods();
        int[] intArray91 = new int[] { '#', 2, 'a' };
        simpleMethods87.incrementNumberAtIndex(intArray91, 0);
        simpleMethods80.incrementNumberAtIndex(intArray91, 0);
        simpleMethods79.incrementNumberAtIndex(intArray91, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[40, 2, 98]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[37, 3, 97]");
    }

    @Test
    public void test4170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4170");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods39.incrementNumberAtIndex(intArray52, (int) (short) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods39.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test4171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4171");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray36, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test4172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4172");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods15.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods60.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 4);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test4173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4173");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4174");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods33.incrementNumberAtIndex(intArray80, 5);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test4175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4175");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray46, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
    }

    @Test
    public void test4176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4176");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray74 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods61.incrementNumberAtIndex(intArray74, 5);
        simpleMethods60.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 5);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test4177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4177");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods48.incrementNumberAtIndex(intArray79, 0);
        simpleMethods33.incrementNumberAtIndex(intArray79, 3);
        simpleMethods0.incrementNumberAtIndex(intArray79, 3);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 7, -1, 3, -7]");
    }

    @Test
    public void test4178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4178");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods33.incrementNumberAtIndex(intArray51, 0);
        simpleMethods26.incrementNumberAtIndex(intArray51, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, (int) (short) 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[38, 2, 97]");
    }

    @Test
    public void test4179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4179");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods57.incrementNumberAtIndex(intArray70, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[9, 3, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test4180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4180");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods38.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 1);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray61, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4181");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods16.incrementNumberAtIndex(intArray62, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray62, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test4182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4182");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, 0);
        simpleMethods41.incrementNumberAtIndex(intArray76, 2);
        simpleMethods16.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, (int) (short) 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[35, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test4183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4183");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4184");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 1);
        simpleMethods36.incrementNumberAtIndex(intArray63, (int) (short) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods36.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[39, 3, 97]");
    }

    @Test
    public void test4185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4185");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
    }

    @Test
    public void test4186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4186");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, (int) (short) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods64.incrementNumberAtIndex(intArray77, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray77, (int) (short) 1);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 3, 97]");
    }

    @Test
    public void test4187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4187");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        int[] intArray26 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods14.incrementNumberAtIndex(intArray26, (int) (byte) 1);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray42 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods29.incrementNumberAtIndex(intArray42, 5);
        simpleMethods14.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods64.incrementNumberAtIndex(intArray77, 5);
        simpleMethods49.incrementNumberAtIndex(intArray77, (int) (short) 1);
        simpleMethods7.incrementNumberAtIndex(intArray77, 5);
        simpleMethods0.incrementNumberAtIndex(intArray77, 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[32, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test4188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4188");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods39.incrementNumberAtIndex(intArray79, 2);
        simpleMethods0.incrementNumberAtIndex(intArray79, 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 3, 98]");
    }

    @Test
    public void test4189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4189");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods67.incrementNumberAtIndex(intArray85, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 2, 97]");
    }

    @Test
    public void test4190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4190");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods57.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        simpleMethods57.incrementNumberAtIndex(intArray88, (int) (short) 0);
        simpleMethods35.incrementNumberAtIndex(intArray88, 0);
        simpleMethods34.incrementNumberAtIndex(intArray88, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[38, 7, -1, 1, -7]");
    }

    @Test
    public void test4191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4191");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4192");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        int[] intArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray16, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4193");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods33.incrementNumberAtIndex(intArray80, 5);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test4194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4194");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods1.incrementNumberAtIndex(intArray30, (int) (short) 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        simpleMethods35.incrementNumberAtIndex(intArray69, 4);
        simpleMethods1.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 7, -1, 1, -6]");
    }

    @Test
    public void test4195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4195");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        int[] intArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray19, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
    }

    @Test
    public void test4196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4196");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray80 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods68.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        simpleMethods49.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (short) 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test4197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4197");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray58 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray58, (int) (short) 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, 2);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 0, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 3, 98]");
    }

    @Test
    public void test4198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4198");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        int[] intArray44 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods47.incrementNumberAtIndex(intArray82, 2);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, -1, 8, -10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4199");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods36.incrementNumberAtIndex(intArray50, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods57.incrementNumberAtIndex(intArray85, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        java.lang.Class<?> wildcardClass92 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test4200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4200");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        simpleMethods32.incrementNumberAtIndex(intArray45, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray45, 0);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 0);
        java.lang.Class<?> wildcardClass58 = intArray45.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test4201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4201");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, 0);
        simpleMethods43.incrementNumberAtIndex(intArray72, 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[41, 2, 97]");
    }

    @Test
    public void test4202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4202");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods26.incrementNumberAtIndex(intArray44, 0);
        simpleMethods19.incrementNumberAtIndex(intArray44, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[39, 3, 97]");
    }

    @Test
    public void test4203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4203");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 1);
        simpleMethods53.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods46.incrementNumberAtIndex(intArray80, 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[38, 5, 97]");
    }

    @Test
    public void test4204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4204");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods35.incrementNumberAtIndex(intArray73, 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        int[] intArray83 = new int[] { '#' };
        simpleMethods16.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        int[] intArray90 = new int[] { (-7), (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray90, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-6, -10]");
    }

    @Test
    public void test4205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4205");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray61, 0);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4206");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        int[] intArray44 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods47.incrementNumberAtIndex(intArray82, 2);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, -1, 8, -10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4207");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods39.incrementNumberAtIndex(intArray53, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4208");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods40.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods65.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) 1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[40, 3, 97]");
    }

    @Test
    public void test4209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4209");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray53, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods77.incrementNumberAtIndex(intArray88, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[37, 2, 97]");
    }

    @Test
    public void test4210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4210");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray27 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods15.incrementNumberAtIndex(intArray27, (int) (byte) 1);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        int[] intArray43 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods30.incrementNumberAtIndex(intArray43, 5);
        simpleMethods15.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 0);
        simpleMethods48.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods70.incrementNumberAtIndex(intArray83, 0);
        simpleMethods48.incrementNumberAtIndex(intArray83, (int) (short) 1);
        simpleMethods15.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        java.lang.Class<?> wildcardClass98 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[41, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test4211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4211");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        simpleMethods43.incrementNumberAtIndex(intArray70, (int) (short) 0);
        simpleMethods36.incrementNumberAtIndex(intArray70, 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        java.lang.Class<?> wildcardClass83 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4212");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods43.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        java.lang.Class<?> wildcardClass87 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test4213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4213");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4214");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods38.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, 2);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -8, 1, 0, 100, 11]");
    }

    @Test
    public void test4215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4215");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 1);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[38, 3, 97]");
    }

    @Test
    public void test4216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4216");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        simpleMethods38.incrementNumberAtIndex(intArray69, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray88, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test4217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4217");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4218");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        simpleMethods37.incrementNumberAtIndex(intArray50, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[39, 2, 97]");
    }

    @Test
    public void test4219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4219");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods34.incrementNumberAtIndex(intArray62, 0);
        simpleMethods0.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (short) 1);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[37, 4, 97]");
    }

    @Test
    public void test4220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4220");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        simpleMethods26.incrementNumberAtIndex(intArray53, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods26.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4221");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 1);
        simpleMethods23.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods23.incrementNumberAtIndex(intArray72, (int) (short) 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods23.incrementNumberAtIndex(intArray89, 1);
        simpleMethods16.incrementNumberAtIndex(intArray89, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test4222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4222");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods0.incrementNumberAtIndex(intArray48, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods57.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        simpleMethods57.incrementNumberAtIndex(intArray88, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test4223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4223");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        simpleMethods23.incrementNumberAtIndex(intArray54, 0);
        simpleMethods22.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods22.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, 1);
        java.lang.Class<?> wildcardClass72 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test4224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4224");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray39, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test4225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4225");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods9.incrementNumberAtIndex(intArray22, 5);
        simpleMethods8.incrementNumberAtIndex(intArray22, (int) (byte) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        int[] intArray41 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods28.incrementNumberAtIndex(intArray41, 5);
        simpleMethods27.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods8.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods70.incrementNumberAtIndex(intArray83, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[39, 2, 97]");
    }

    @Test
    public void test4226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4226");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
    }

    @Test
    public void test4227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4227");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, (int) (short) 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4228");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (short) 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[38, 2, 97]");
    }

    @Test
    public void test4229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4229");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4230");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods34.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods34.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4231");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray36, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test4232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4232");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods58.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[40, 2, 97]");
    }

    @Test
    public void test4233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4233");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods73.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[10, 2, 2, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test4234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4234");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods49.incrementNumberAtIndex(intArray67, 0);
        simpleMethods42.incrementNumberAtIndex(intArray67, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
    }

    @Test
    public void test4235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4235");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        simpleMethods23.incrementNumberAtIndex(intArray54, 0);
        simpleMethods22.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods22.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4236");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods59.incrementNumberAtIndex(intArray77, 0);
        simpleMethods43.incrementNumberAtIndex(intArray77, 0);
        int[] intArray91 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods43.incrementNumberAtIndex(intArray91, 2);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1, 1, 11, 0, 0]");
    }

    @Test
    public void test4237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4237");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 2);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 98]");
    }

    @Test
    public void test4238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4238");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        simpleMethods0.incrementNumberAtIndex(intArray48, (int) (short) 0);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 3, 97]");
    }

    @Test
    public void test4239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4239");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4240");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods39.incrementNumberAtIndex(intArray79, 2);
        simpleMethods0.incrementNumberAtIndex(intArray79, 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 3, 98]");
    }

    @Test
    public void test4241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4241");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods74.incrementNumberAtIndex(intArray87, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test4242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4242");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 1);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods20.incrementNumberAtIndex(intArray48, 0);
        simpleMethods1.incrementNumberAtIndex(intArray48, 5);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods55.incrementNumberAtIndex(intArray69, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray69, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4243");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray39 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        simpleMethods42.incrementNumberAtIndex(intArray55, (int) (short) 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods42.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, (int) (short) 1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[38, 3, 97]");
    }

    @Test
    public void test4244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4244");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray87 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods75.incrementNumberAtIndex(intArray87, (int) (byte) 1);
        simpleMethods56.incrementNumberAtIndex(intArray87, 0);
        simpleMethods55.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test4245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4245");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        simpleMethods26.incrementNumberAtIndex(intArray53, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray53, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 1);
        simpleMethods19.incrementNumberAtIndex(intArray76, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[38, 3, 97]");
    }

    @Test
    public void test4246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4246");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 4, 97]");
    }

    @Test
    public void test4247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4247");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods75.incrementNumberAtIndex(intArray88, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test4248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4248");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods47.incrementNumberAtIndex(intArray75, 0);
        simpleMethods40.incrementNumberAtIndex(intArray75, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test4249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4249");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (short) 0);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[38, 2, 97]");
    }

    @Test
    public void test4250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4250");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test4251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4251");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods39.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[41, 2, 97]");
    }

    @Test
    public void test4252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4252");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods55.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods33.incrementNumberAtIndex(intArray84, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test4253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4253");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods49.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 0);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4254");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray82, 0);
        simpleMethods36.incrementNumberAtIndex(intArray82, 3);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[37, 7, -1, 2, -7]");
    }

    @Test
    public void test4255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4255");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray47, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4256");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4257");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray59 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods46.incrementNumberAtIndex(intArray59, 5);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test4258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4258");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 5);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test4259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4259");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods40.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods65.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) 1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[40, 3, 97]");
    }

    @Test
    public void test4260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4260");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = intArray52.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test4261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4261");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray76, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test4262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4262");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        simpleMethods18.incrementNumberAtIndex(intArray30, 0);
        simpleMethods17.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray75 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods63.incrementNumberAtIndex(intArray75, (int) (byte) 1);
        simpleMethods44.incrementNumberAtIndex(intArray75, 0);
        simpleMethods43.incrementNumberAtIndex(intArray75, (int) (byte) 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods43.incrementNumberAtIndex(intArray86, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 2, 97]");
    }

    @Test
    public void test4263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4263");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods50.incrementNumberAtIndex(intArray64, (int) (byte) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods69.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods50.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods43.incrementNumberAtIndex(intArray83, 2);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        java.lang.Class<?> wildcardClass94 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4264");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods58.incrementNumberAtIndex(intArray71, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test4265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4265");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods60.incrementNumberAtIndex(intArray88, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        java.lang.Class<?> wildcardClass95 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4266");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods40.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods33.incrementNumberAtIndex(intArray89, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4267");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods33.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4268");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 1);
        simpleMethods0.incrementNumberAtIndex(intArray89, (int) (short) 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test4269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4269");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods58.incrementNumberAtIndex(intArray86, 1);
        simpleMethods39.incrementNumberAtIndex(intArray86, 5);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[32, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test4270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4270");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods39.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray73, 4);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray90 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods78.incrementNumberAtIndex(intArray90, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray90, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray90, 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test4271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4271");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods20.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods20.incrementNumberAtIndex(intArray60, 2);
        simpleMethods19.incrementNumberAtIndex(intArray60, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 99]");
    }

    @Test
    public void test4272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4272");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4273");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        simpleMethods42.incrementNumberAtIndex(intArray55, 0);
        simpleMethods0.incrementNumberAtIndex(intArray55, 0);
        java.lang.Class<?> wildcardClass66 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test4274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4274");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        int[] intArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray16, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test4275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4275");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, 1);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[37, 4, 97]");
    }

    @Test
    public void test4276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4276");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods42.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods67.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods42.incrementNumberAtIndex(intArray81, 1);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test4277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4277");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods62.incrementNumberAtIndex(intArray80, 0);
        simpleMethods55.incrementNumberAtIndex(intArray80, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[39, 2, 97]");
    }

    @Test
    public void test4278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4278");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods43.incrementNumberAtIndex(intArray83, 2);
        simpleMethods42.incrementNumberAtIndex(intArray83, 2);
        simpleMethods0.incrementNumberAtIndex(intArray83, 1);
        int[] intArray93 = new int[] { (-4) };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 3, 99]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-4]");
    }

    @Test
    public void test4279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4279");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray80 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods68.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        simpleMethods49.incrementNumberAtIndex(intArray80, 0);
        simpleMethods34.incrementNumberAtIndex(intArray80, 3);
        simpleMethods0.incrementNumberAtIndex(intArray80, 2);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 7, 0, 2, -7]");
    }

    @Test
    public void test4280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4280");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray39 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray42, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -1, 6, 10, -9, -2]");
    }

    @Test
    public void test4281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4281");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        simpleMethods0.incrementNumberAtIndex(intArray49, 0);
        java.lang.Class<?> wildcardClass58 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test4282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4282");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test4283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4283");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray41, 4);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray58 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods46.incrementNumberAtIndex(intArray58, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray58, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 1);
        simpleMethods0.incrementNumberAtIndex(intArray77, (int) (byte) 1);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test4284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4284");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray82, 0);
        simpleMethods44.incrementNumberAtIndex(intArray82, 1);
        simpleMethods22.incrementNumberAtIndex(intArray82, 2);
        simpleMethods0.incrementNumberAtIndex(intArray82, 0);
        java.lang.Class<?> wildcardClass93 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[37, 8, 0, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4285");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray77 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods64.incrementNumberAtIndex(intArray77, 5);
        simpleMethods45.incrementNumberAtIndex(intArray77, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4286");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods31.incrementNumberAtIndex(intArray45, (int) (byte) 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods50.incrementNumberAtIndex(intArray64, (int) (byte) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods69.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods50.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods31.incrementNumberAtIndex(intArray83, 1);
        simpleMethods16.incrementNumberAtIndex(intArray83, 1);
        simpleMethods0.incrementNumberAtIndex(intArray83, 5);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test4287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4287");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 5);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test4288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4288");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods16.incrementNumberAtIndex(intArray56, 2);
        simpleMethods15.incrementNumberAtIndex(intArray56, 2);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods65.incrementNumberAtIndex(intArray78, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[37, 2, 99]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test4289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4289");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods26.incrementNumberAtIndex(intArray44, 0);
        simpleMethods19.incrementNumberAtIndex(intArray44, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods55.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test4290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4290");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray74 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods61.incrementNumberAtIndex(intArray74, 5);
        simpleMethods60.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 5);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test4291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4291");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods32.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray61, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4292");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray72, 0);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (byte) 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods79.incrementNumberAtIndex(intArray92, 5);
        simpleMethods40.incrementNumberAtIndex(intArray92, 0);
        simpleMethods0.incrementNumberAtIndex(intArray92, 1);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4293");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        simpleMethods18.incrementNumberAtIndex(intArray30, 0);
        simpleMethods17.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
    }

    @Test
    public void test4294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4294");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods60.incrementNumberAtIndex(intArray88, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4295");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods39.incrementNumberAtIndex(intArray52, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 2);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods63.incrementNumberAtIndex(intArray76, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[10, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test4296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4296");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods16.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 3, 97]");
    }

    @Test
    public void test4297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4297");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods70.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods54.incrementNumberAtIndex(intArray83, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[40, 2, 97]");
    }

    @Test
    public void test4298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4298");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        int[] intArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray37, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 3, 97]");
    }

    @Test
    public void test4299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4299");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
    }

    @Test
    public void test4300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4300");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, (int) (short) 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods51.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        simpleMethods15.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 0);
        simpleMethods74.incrementNumberAtIndex(intArray87, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[39, 2, 97]");
    }

    @Test
    public void test4301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4301");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods31.incrementNumberAtIndex(intArray43, 0);
        simpleMethods30.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods30.incrementNumberAtIndex(intArray64, 4);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray81 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods69.incrementNumberAtIndex(intArray81, (int) (byte) 1);
        simpleMethods30.incrementNumberAtIndex(intArray81, (int) (short) 1);
        simpleMethods23.incrementNumberAtIndex(intArray81, 0);
        simpleMethods16.incrementNumberAtIndex(intArray81, 3);
        simpleMethods0.incrementNumberAtIndex(intArray81, 1);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 9, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test4302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4302");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods36.incrementNumberAtIndex(intArray65, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4303");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray59 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods46.incrementNumberAtIndex(intArray59, 5);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        java.lang.Class<?> wildcardClass82 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test4304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4304");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods49.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods74.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        simpleMethods49.incrementNumberAtIndex(intArray88, 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4305");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray78 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods66.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        simpleMethods47.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods47.incrementNumberAtIndex(intArray87, 2);
        simpleMethods46.incrementNumberAtIndex(intArray87, 2);
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 2, 99]");
    }

    @Test
    public void test4306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4306");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods47.incrementNumberAtIndex(intArray74, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray74, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[38, 4, 97]");
    }

    @Test
    public void test4307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4307");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 1);
        simpleMethods53.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods46.incrementNumberAtIndex(intArray80, 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[38, 5, 97]");
    }

    @Test
    public void test4308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4308");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray72, 0);
        simpleMethods34.incrementNumberAtIndex(intArray72, 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test4309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4309");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray80 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods68.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        simpleMethods49.incrementNumberAtIndex(intArray80, 0);
        simpleMethods34.incrementNumberAtIndex(intArray80, 3);
        simpleMethods0.incrementNumberAtIndex(intArray80, 2);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 7, 0, 2, -7]");
    }

    @Test
    public void test4310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4310");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray74 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods61.incrementNumberAtIndex(intArray74, 5);
        simpleMethods60.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4311");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods51.incrementNumberAtIndex(intArray79, 1);
        int[] intArray90 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods51.incrementNumberAtIndex(intArray90, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[33, -1, 6, 10, -9, -2]");
    }

    @Test
    public void test4312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4312");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods39.incrementNumberAtIndex(intArray79, 2);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 3, 98]");
    }

    @Test
    public void test4313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4313");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods33.incrementNumberAtIndex(intArray80, 5);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test4314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4314");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods77.incrementNumberAtIndex(intArray88, 0);
        simpleMethods76.incrementNumberAtIndex(intArray88, 1);
        simpleMethods40.incrementNumberAtIndex(intArray88, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[38, 3, 97]");
    }

    @Test
    public void test4315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4315");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods47.incrementNumberAtIndex(intArray61, (int) (byte) 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods66.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods47.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray80, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test4316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4316");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods42.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods67.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods42.incrementNumberAtIndex(intArray81, 1);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test4317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4317");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        int[] intArray44 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods47.incrementNumberAtIndex(intArray61, (int) (byte) 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods66.incrementNumberAtIndex(intArray79, (int) (short) 0);
        simpleMethods47.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, -1, 8, -10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[39, 3, 97]");
    }

    @Test
    public void test4318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4318");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test4319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4319");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods39.incrementNumberAtIndex(intArray52, (int) (short) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods39.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        java.lang.Class<?> wildcardClass78 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test4320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4320");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (short) 0);
        java.lang.Class<?> wildcardClass78 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test4321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4321");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[41, 2, 97]");
    }

    @Test
    public void test4322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4322");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (short) 0);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test4323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4323");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray22, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
    }

    @Test
    public void test4324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4324");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
    }

    @Test
    public void test4325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4325");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[41, 2, 97]");
    }

    @Test
    public void test4326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4326");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray67 = new int[] { '#' };
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36]");
    }

    @Test
    public void test4327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4327");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods17.incrementNumberAtIndex(intArray46, (int) (short) 1);
        simpleMethods1.incrementNumberAtIndex(intArray46, (int) (short) 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods53.incrementNumberAtIndex(intArray81, 0);
        simpleMethods1.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4328");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        int[] intArray37 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods25.incrementNumberAtIndex(intArray37, (int) (byte) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods25.incrementNumberAtIndex(intArray53, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods25.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4329");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        simpleMethods57.incrementNumberAtIndex(intArray70, (int) (short) 0);
        simpleMethods42.incrementNumberAtIndex(intArray70, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, 2);
        java.lang.Class<?> wildcardClass83 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[39, 3, 98]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4330");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 3, 97]");
    }

    @Test
    public void test4331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4331");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods7.incrementNumberAtIndex(intArray68, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4332");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, 5);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test4333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4333");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        simpleMethods22.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods22.incrementNumberAtIndex(intArray71, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4334");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods77.incrementNumberAtIndex(intArray88, 0);
        simpleMethods70.incrementNumberAtIndex(intArray88, 0);
        simpleMethods54.incrementNumberAtIndex(intArray88, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[39, 2, 97]");
    }

    @Test
    public void test4335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4335");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[40, 2, 97]");
    }

    @Test
    public void test4336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4336");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 1);
        simpleMethods23.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods23.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray72, 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        java.lang.Class<?> wildcardClass81 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test4337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4337");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
    }

    @Test
    public void test4338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4338");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        simpleMethods57.incrementNumberAtIndex(intArray70, (int) (short) 0);
        simpleMethods42.incrementNumberAtIndex(intArray70, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray70, 2);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[39, 3, 98]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4339");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods43.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, (int) (short) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[38, 3, 97]");
    }

    @Test
    public void test4340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4340");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        int[] intArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test4341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4341");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods34.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods34.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, 1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4342");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, 0);
        simpleMethods39.incrementNumberAtIndex(intArray68, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 2, 97]");
    }

    @Test
    public void test4343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4343");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray81 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods69.incrementNumberAtIndex(intArray81, (int) (byte) 1);
        simpleMethods50.incrementNumberAtIndex(intArray81, 0);
        simpleMethods49.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 2);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[38, 7, 0, 1, -7]");
    }

    @Test
    public void test4344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4344");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 1);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test4345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4345");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods35.incrementNumberAtIndex(intArray68, 0);
        simpleMethods16.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[38, 3, 97]");
    }

    @Test
    public void test4346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4346");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray27 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods15.incrementNumberAtIndex(intArray27, (int) (byte) 1);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        int[] intArray43 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods30.incrementNumberAtIndex(intArray43, 5);
        simpleMethods15.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray80 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods68.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        simpleMethods49.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods85 = new examples.SimpleMethods();
        int[] intArray89 = new int[] { '#', 2, 'a' };
        simpleMethods85.incrementNumberAtIndex(intArray89, 0);
        simpleMethods49.incrementNumberAtIndex(intArray89, 2);
        simpleMethods48.incrementNumberAtIndex(intArray89, 2);
        simpleMethods15.incrementNumberAtIndex(intArray89, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 2, 100]");
    }

    @Test
    public void test4347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4347");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods36.incrementNumberAtIndex(intArray66, 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, (int) (short) 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[42, 2, 97]");
    }

    @Test
    public void test4348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4348");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, (int) (short) 1);
        java.lang.Class<?> wildcardClass61 = intArray52.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test4349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4349");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray76, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test4350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4350");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods26.incrementNumberAtIndex(intArray44, 0);
        simpleMethods19.incrementNumberAtIndex(intArray44, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, (int) (short) 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods55.incrementNumberAtIndex(intArray90, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray90, 5);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test4351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4351");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        int[] intArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4352");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods22.incrementNumberAtIndex(intArray51, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, 1);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test4353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4353");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods37.incrementNumberAtIndex(intArray65, 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, 2);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test4354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4354");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods31.incrementNumberAtIndex(intArray43, 0);
        simpleMethods30.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods30.incrementNumberAtIndex(intArray64, 4);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray81 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods69.incrementNumberAtIndex(intArray81, (int) (byte) 1);
        simpleMethods30.incrementNumberAtIndex(intArray81, (int) (short) 1);
        simpleMethods23.incrementNumberAtIndex(intArray81, 0);
        simpleMethods16.incrementNumberAtIndex(intArray81, 3);
        simpleMethods0.incrementNumberAtIndex(intArray81, 1);
        java.lang.Class<?> wildcardClass92 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 9, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test4355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4355");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods40.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods65.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) 1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[40, 3, 97]");
    }

    @Test
    public void test4356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4356");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods33.incrementNumberAtIndex(intArray68, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test4357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4357");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray77 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods65.incrementNumberAtIndex(intArray77, (int) (byte) 1);
        simpleMethods46.incrementNumberAtIndex(intArray77, 0);
        simpleMethods45.incrementNumberAtIndex(intArray77, (int) (byte) 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods45.incrementNumberAtIndex(intArray88, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[37, 3, 97]");
    }

    @Test
    public void test4358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4358");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray39 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray55 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods42.incrementNumberAtIndex(intArray55, 5);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods58.incrementNumberAtIndex(intArray87, (int) (short) 1);
        simpleMethods42.incrementNumberAtIndex(intArray87, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4359");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[39, 3, 97]");
    }

    @Test
    public void test4360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4360");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4361");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray59 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods46.incrementNumberAtIndex(intArray59, 5);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods46.incrementNumberAtIndex(intArray75, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4362");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods33.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray61, 0);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4363");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[41, 2, 97]");
    }

    @Test
    public void test4364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4364");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods43.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4365");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 1);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        int[] intArray93 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods80.incrementNumberAtIndex(intArray93, 5);
        simpleMethods61.incrementNumberAtIndex(intArray93, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test4366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4366");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods50.incrementNumberAtIndex(intArray64, (int) (byte) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods69.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods50.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods43.incrementNumberAtIndex(intArray83, 2);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4367");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods51.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test4368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4368");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods33.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods33.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[40, 3, 97]");
    }

    @Test
    public void test4369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4369");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray82, 0);
        simpleMethods44.incrementNumberAtIndex(intArray82, 1);
        simpleMethods22.incrementNumberAtIndex(intArray82, 2);
        simpleMethods0.incrementNumberAtIndex(intArray82, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[37, 8, 0, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4370");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray62, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[38, 2, 97]");
    }

    @Test
    public void test4371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4371");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 0);
        simpleMethods22.incrementNumberAtIndex(intArray57, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods75.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test4372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4372");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods21.incrementNumberAtIndex(intArray33, 0);
        simpleMethods20.incrementNumberAtIndex(intArray33, (int) (short) 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, (int) (short) 0);
        simpleMethods20.incrementNumberAtIndex(intArray73, 0);
        simpleMethods19.incrementNumberAtIndex(intArray73, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[38, 7, -1, 1, -7]");
    }
}

