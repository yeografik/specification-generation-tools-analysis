package examples;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    @Test
    public void test3501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3501");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods47.incrementNumberAtIndex(intArray78, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray78, 2);
        simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[40, 2, 98]");
    }

    @Test
    public void test3502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3502");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 2);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[37, 3, 98]");
    }

    @Test
    public void test3503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3503");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods32.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray61, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3504");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[41, 2, 97]");
    }

    @Test
    public void test3505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3505");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods49.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods33.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) 0);
        examples.SimpleMethods simpleMethods87 = new examples.SimpleMethods();
        int[] intArray91 = new int[] { '#', 2, 'a' };
        simpleMethods87.incrementNumberAtIndex(intArray91, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[36, 2, 97]");
    }

    @Test
    public void test3506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3506");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3507");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, (int) (short) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods64.incrementNumberAtIndex(intArray77, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray77, (int) (short) 1);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test3508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3508");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods34.incrementNumberAtIndex(intArray74, 2);
        simpleMethods33.incrementNumberAtIndex(intArray74, 2);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 2, 99]");
    }

    @Test
    public void test3509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3509");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 1);
        simpleMethods33.incrementNumberAtIndex(intArray80, 5);
        int[] intArray92 = new int[] { (-10), (short) 100, (short) 1, 5, (short) 0 };
        simpleMethods33.incrementNumberAtIndex(intArray92, 0);
        simpleMethods0.incrementNumberAtIndex(intArray92, (int) (short) 1);
        java.lang.Class<?> wildcardClass97 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-9, 101, 1, 5, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test3510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3510");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray36, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test3511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3511");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3512");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods9.incrementNumberAtIndex(intArray22, 5);
        simpleMethods8.incrementNumberAtIndex(intArray22, (int) (byte) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        int[] intArray41 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods28.incrementNumberAtIndex(intArray41, 5);
        simpleMethods27.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods8.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        java.lang.Class<?> wildcardClass70 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test3513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3513");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 3, 97]");
    }

    @Test
    public void test3514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3514");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods35.incrementNumberAtIndex(intArray73, 1);
        simpleMethods16.incrementNumberAtIndex(intArray73, 0);
        int[] intArray83 = new int[] { '#' };
        simpleMethods16.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        int[] intArray90 = new int[] { (-7), (-10) };
        simpleMethods0.incrementNumberAtIndex(intArray90, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-6, -10]");
    }

    @Test
    public void test3515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3515");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods43.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods68.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods43.incrementNumberAtIndex(intArray81, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[40, 2, 97]");
    }

    @Test
    public void test3516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3516");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods32.incrementNumberAtIndex(intArray60, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray77 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods65.incrementNumberAtIndex(intArray77, (int) (byte) 1);
        simpleMethods32.incrementNumberAtIndex(intArray77, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray77, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test3517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3517");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods56.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods40.incrementNumberAtIndex(intArray84, 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3518");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 1);
        simpleMethods36.incrementNumberAtIndex(intArray63, (int) (short) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods36.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) 1);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test3519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3519");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods32.incrementNumberAtIndex(intArray44, 0);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods72.incrementNumberAtIndex(intArray85, (int) (short) 0);
        simpleMethods53.incrementNumberAtIndex(intArray85, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray85, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[42, 2, 97]");
    }

    @Test
    public void test3520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3520");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        simpleMethods26.incrementNumberAtIndex(intArray53, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods26.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods19.incrementNumberAtIndex(intArray86, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 2, 97]");
    }

    @Test
    public void test3521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3521");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        int[] intArray95 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods83.incrementNumberAtIndex(intArray95, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test3522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3522");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3523");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods33.incrementNumberAtIndex(intArray44, 0);
        simpleMethods32.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods51.incrementNumberAtIndex(intArray64, (int) (short) 0);
        simpleMethods32.incrementNumberAtIndex(intArray64, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray64, 0);
        simpleMethods0.incrementNumberAtIndex(intArray64, 0);
        java.lang.Class<?> wildcardClass79 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[42, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test3524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3524");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods17.incrementNumberAtIndex(intArray46, (int) (short) 1);
        simpleMethods1.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 1);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3525");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods40.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods65.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[41, 2, 97]");
    }

    @Test
    public void test3526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3526");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray36, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test3527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3527");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        simpleMethods28.incrementNumberAtIndex(intArray39, 0);
        simpleMethods27.incrementNumberAtIndex(intArray39, 0);
        simpleMethods26.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 0);
        simpleMethods48.incrementNumberAtIndex(intArray61, 0);
        simpleMethods26.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods19.incrementNumberAtIndex(intArray86, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[39, 2, 97]");
    }

    @Test
    public void test3528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3528");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3529");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 2, 97]");
    }

    @Test
    public void test3530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3530");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, 0);
        simpleMethods40.incrementNumberAtIndex(intArray87, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3531");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods47.incrementNumberAtIndex(intArray75, 0);
        simpleMethods40.incrementNumberAtIndex(intArray75, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3532");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
    }

    @Test
    public void test3533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3533");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 2);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[40, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test3534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3534");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray36 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods23.incrementNumberAtIndex(intArray36, 5);
        simpleMethods22.incrementNumberAtIndex(intArray36, (int) (byte) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray55 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods42.incrementNumberAtIndex(intArray55, 5);
        simpleMethods41.incrementNumberAtIndex(intArray55, (int) (byte) 0);
        simpleMethods22.incrementNumberAtIndex(intArray55, (int) (byte) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods22.incrementNumberAtIndex(intArray66, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods73.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3535");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        int[] intArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray16, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
    }

    @Test
    public void test3536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3536");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        simpleMethods26.incrementNumberAtIndex(intArray53, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods26.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3537");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        int[] intArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray37, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3538");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 0);
        simpleMethods36.incrementNumberAtIndex(intArray83, 5);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test3539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3539");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3540");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        int[] intArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray48, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
    }

    @Test
    public void test3541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3541");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        simpleMethods38.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods38.incrementNumberAtIndex(intArray78, 2);
        simpleMethods37.incrementNumberAtIndex(intArray78, 2);
        simpleMethods0.incrementNumberAtIndex(intArray78, 1);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 3, 99]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3542");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
    }

    @Test
    public void test3543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3543");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3544");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods39.incrementNumberAtIndex(intArray68, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass75 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test3545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3545");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods25.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods57.incrementNumberAtIndex(intArray85, 0);
        simpleMethods50.incrementNumberAtIndex(intArray85, 2);
        simpleMethods25.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[35, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3546");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray53, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, 1);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test3547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3547");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods39.incrementNumberAtIndex(intArray68, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        java.lang.Class<?> wildcardClass75 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test3548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3548");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        simpleMethods19.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 0);
        simpleMethods44.incrementNumberAtIndex(intArray57, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods68.incrementNumberAtIndex(intArray82, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray82, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3549");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
    }

    @Test
    public void test3550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3550");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
    }

    @Test
    public void test3551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3551");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray42, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3552");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods26.incrementNumberAtIndex(intArray54, 0);
        simpleMethods19.incrementNumberAtIndex(intArray54, 2);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        java.lang.Class<?> wildcardClass63 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test3553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3553");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, 5);
        java.lang.Class<?> wildcardClass85 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test3554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3554");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 2);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 98]");
    }

    @Test
    public void test3555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3555");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods47.incrementNumberAtIndex(intArray61, (int) (byte) 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods66.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods47.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray80, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3556");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test3557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3557");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods3 = new examples.SimpleMethods();
        int[] intArray7 = new int[] { '#', 2, 'a' };
        simpleMethods3.incrementNumberAtIndex(intArray7, 0);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        int[] intArray14 = new int[] { '#', 2, 'a' };
        simpleMethods10.incrementNumberAtIndex(intArray14, 0);
        simpleMethods3.incrementNumberAtIndex(intArray14, 0);
        simpleMethods2.incrementNumberAtIndex(intArray14, 0);
        simpleMethods1.incrementNumberAtIndex(intArray14, (int) (short) 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        simpleMethods23.incrementNumberAtIndex(intArray54, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 0);
        simpleMethods63.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[39, 3, 97]");
    }

    @Test
    public void test3558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3558");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods39.incrementNumberAtIndex(intArray53, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods60.incrementNumberAtIndex(intArray73, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test3559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3559");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods79.incrementNumberAtIndex(intArray92, 5);
        simpleMethods78.incrementNumberAtIndex(intArray92, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3560");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods31.incrementNumberAtIndex(intArray43, 1);
        simpleMethods16.incrementNumberAtIndex(intArray43, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 1);
        java.lang.Class<?> wildcardClass54 = intArray43.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test3561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3561");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray86, (int) (short) 1);
        int[] intArray95 = new int[] { 10, (-8) };
        simpleMethods19.incrementNumberAtIndex(intArray95, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[11, -8]");
    }

    @Test
    public void test3562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3562");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods55.incrementNumberAtIndex(intArray86, 0);
        simpleMethods54.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 3);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 7, -1, 2, -7]");
    }

    @Test
    public void test3563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3563");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray57, 0);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods66.incrementNumberAtIndex(intArray79, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test3564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3564");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, (int) (short) 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3565");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods43.incrementNumberAtIndex(intArray83, 2);
        simpleMethods42.incrementNumberAtIndex(intArray83, 2);
        simpleMethods0.incrementNumberAtIndex(intArray83, 1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 3, 99]");
    }

    @Test
    public void test3566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3566");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 0);
        simpleMethods43.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[40, 2, 97]");
    }

    @Test
    public void test3567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3567");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods40.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 0);
        simpleMethods65.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[41, 2, 97]");
    }

    @Test
    public void test3568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3568");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 1);
        simpleMethods33.incrementNumberAtIndex(intArray80, 5);
        int[] intArray92 = new int[] { (-10), (short) 100, (short) 1, 5, (short) 0 };
        simpleMethods33.incrementNumberAtIndex(intArray92, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-9, 100, 1, 5, 0]");
    }

    @Test
    public void test3569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3569");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods9.incrementNumberAtIndex(intArray22, 5);
        simpleMethods8.incrementNumberAtIndex(intArray22, (int) (byte) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        int[] intArray41 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods28.incrementNumberAtIndex(intArray41, 5);
        simpleMethods27.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods8.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods52.incrementNumberAtIndex(intArray66, (int) (byte) 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods71.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        simpleMethods52.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3570");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods48.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods67.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods48.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 99]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3571");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray36 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods23.incrementNumberAtIndex(intArray36, 5);
        simpleMethods8.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods8.incrementNumberAtIndex(intArray86, 0);
        simpleMethods1.incrementNumberAtIndex(intArray86, 1);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 9, -1, 1, -7]");
    }

    @Test
    public void test3572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3572");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[40, 3, 97]");
    }

    @Test
    public void test3573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3573");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, 5);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test3574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3574");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        simpleMethods43.incrementNumberAtIndex(intArray70, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 1);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 4, 97]");
    }

    @Test
    public void test3575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3575");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test3576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3576");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        int[] intArray38 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods57.incrementNumberAtIndex(intArray85, 0);
        simpleMethods41.incrementNumberAtIndex(intArray85, (int) (short) 1);
        simpleMethods25.incrementNumberAtIndex(intArray85, 3);
        simpleMethods0.incrementNumberAtIndex(intArray85, 5);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[33, -9, 0, 1, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3577");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods39.incrementNumberAtIndex(intArray68, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3578");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray68, 4);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 7, -1, 1, -6]");
    }

    @Test
    public void test3579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3579");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods56.incrementNumberAtIndex(intArray70, (int) (byte) 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods75.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        simpleMethods56.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray89, 1);
        simpleMethods0.incrementNumberAtIndex(intArray89, 3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[34, -9, 0, 1, 100, 11]");
    }

    @Test
    public void test3580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3580");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (byte) 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods49.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods49.incrementNumberAtIndex(intArray83, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test3581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3581");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray27, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
    }

    @Test
    public void test3582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3582");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray70, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[35, 7, -1, 1, -6]");
    }

    @Test
    public void test3583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3583");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods16.incrementNumberAtIndex(intArray56, 2);
        simpleMethods15.incrementNumberAtIndex(intArray56, 2);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[37, 2, 99]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test3584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3584");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods33.incrementNumberAtIndex(intArray67, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 4, 97]");
    }

    @Test
    public void test3585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3585");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods31.incrementNumberAtIndex(intArray43, 1);
        simpleMethods16.incrementNumberAtIndex(intArray43, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods54.incrementNumberAtIndex(intArray83, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3586");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods59.incrementNumberAtIndex(intArray77, 0);
        simpleMethods43.incrementNumberAtIndex(intArray77, 0);
        int[] intArray91 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods43.incrementNumberAtIndex(intArray91, 2);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1, 1, 11, 0, 0]");
    }

    @Test
    public void test3587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3587");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, (int) (short) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods64.incrementNumberAtIndex(intArray77, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray77, (int) (short) 1);
        java.lang.Class<?> wildcardClass88 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test3588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3588");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray86 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods74.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        simpleMethods55.incrementNumberAtIndex(intArray86, 0);
        simpleMethods54.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 3);
        java.lang.Class<?> wildcardClass95 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 7, -1, 2, -7]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test3589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3589");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
    }

    @Test
    public void test3590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3590");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[39, 2, 97]");
    }

    @Test
    public void test3591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3591");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 3, 97]");
    }

    @Test
    public void test3592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3592");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 2);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray91 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods79.incrementNumberAtIndex(intArray91, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        java.lang.Class<?> wildcardClass96 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[40, 2, 98]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3593");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 0);
        simpleMethods62.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods43.incrementNumberAtIndex(intArray75, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[40, 2, 97]");
    }

    @Test
    public void test3594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3594");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray42, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3595");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        simpleMethods38.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods38.incrementNumberAtIndex(intArray78, 2);
        simpleMethods37.incrementNumberAtIndex(intArray78, 2);
        simpleMethods0.incrementNumberAtIndex(intArray78, 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 3, 99]");
    }

    @Test
    public void test3596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3596");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray58 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods45.incrementNumberAtIndex(intArray58, 5);
        simpleMethods0.incrementNumberAtIndex(intArray58, 5);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 2, 97]");
    }

    @Test
    public void test3597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3597");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods49.incrementNumberAtIndex(intArray67, 0);
        simpleMethods42.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods23.incrementNumberAtIndex(intArray67, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray67, 0);
        simpleMethods1.incrementNumberAtIndex(intArray67, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[40, 3, 98]");
    }

    @Test
    public void test3598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3598");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 1);
        simpleMethods35.incrementNumberAtIndex(intArray82, 5);
        simpleMethods19.incrementNumberAtIndex(intArray82, 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (short) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[32, -7, 0, 0, 100, 12]");
    }

    @Test
    public void test3599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3599");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods16.incrementNumberAtIndex(intArray56, 2);
        simpleMethods15.incrementNumberAtIndex(intArray56, 2);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        java.lang.Class<?> wildcardClass65 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[37, 2, 99]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test3600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3600");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods31.incrementNumberAtIndex(intArray43, 1);
        simpleMethods16.incrementNumberAtIndex(intArray43, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 1);
        java.lang.Class<?> wildcardClass54 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test3601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3601");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods17.incrementNumberAtIndex(intArray46, (int) (short) 1);
        simpleMethods1.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 1);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3602");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 1);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray47, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[38, 3, 97]");
    }

    @Test
    public void test3603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3603");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods33.incrementNumberAtIndex(intArray73, 2);
        simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 3, 98]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test3604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3604");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
    }

    @Test
    public void test3605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3605");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods3 = new examples.SimpleMethods();
        int[] intArray7 = new int[] { '#', 2, 'a' };
        simpleMethods3.incrementNumberAtIndex(intArray7, 0);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        int[] intArray14 = new int[] { '#', 2, 'a' };
        simpleMethods10.incrementNumberAtIndex(intArray14, 0);
        simpleMethods3.incrementNumberAtIndex(intArray14, 0);
        simpleMethods2.incrementNumberAtIndex(intArray14, 0);
        simpleMethods1.incrementNumberAtIndex(intArray14, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray35, 4);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray67, 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods1.incrementNumberAtIndex(intArray82, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[37, 2, 97]");
    }

    @Test
    public void test3606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3606");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        int[] intArray48 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods51.incrementNumberAtIndex(intArray64, (int) (short) 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods51.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, 1);
        java.lang.Class<?> wildcardClass96 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1, 11, 0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[37, 5, 97]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3607");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3608");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods22.incrementNumberAtIndex(intArray69, 5);
        simpleMethods0.incrementNumberAtIndex(intArray69, 4);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 101, 12]");
    }

    @Test
    public void test3609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3609");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 0);
        simpleMethods36.incrementNumberAtIndex(intArray83, 5);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test3610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3610");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[38, 3, 97]");
    }

    @Test
    public void test3611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3611");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods39.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray73, 4);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray90 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods78.incrementNumberAtIndex(intArray90, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray90, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray90, 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test3612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3612");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        simpleMethods39.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 4, 97]");
    }

    @Test
    public void test3613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3613");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods49.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods74.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        simpleMethods49.incrementNumberAtIndex(intArray88, 0);
        simpleMethods0.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3614");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test3615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3615");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray47, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test3616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3616");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        simpleMethods38.incrementNumberAtIndex(intArray69, 0);
        simpleMethods37.incrementNumberAtIndex(intArray69, (int) (byte) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods37.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3617");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods29.incrementNumberAtIndex(intArray40, 0);
        simpleMethods22.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods47.incrementNumberAtIndex(intArray82, 2);
        simpleMethods22.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 5);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[34, -10, 1, 0, 100, 12]");
    }

    @Test
    public void test3618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3618");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods34.incrementNumberAtIndex(intArray74, 2);
        simpleMethods33.incrementNumberAtIndex(intArray74, 2);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 2, 99]");
    }

    @Test
    public void test3619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3619");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray75 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods63.incrementNumberAtIndex(intArray75, (int) (byte) 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods63.incrementNumberAtIndex(intArray91, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3620");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 0);
        simpleMethods22.incrementNumberAtIndex(intArray66, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3621");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, 5);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test3622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3622");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test3623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3623");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test3624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3624");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        int[] intArray38 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods57.incrementNumberAtIndex(intArray85, 0);
        simpleMethods41.incrementNumberAtIndex(intArray85, (int) (short) 1);
        simpleMethods25.incrementNumberAtIndex(intArray85, 3);
        simpleMethods0.incrementNumberAtIndex(intArray85, 5);
        java.lang.Class<?> wildcardClass96 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[33, -9, 0, 1, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3625");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray71, 0);
        java.lang.Class<?> wildcardClass82 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test3626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3626");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        int[] intArray26 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods14.incrementNumberAtIndex(intArray26, (int) (byte) 1);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods30.incrementNumberAtIndex(intArray41, 0);
        simpleMethods29.incrementNumberAtIndex(intArray41, 1);
        simpleMethods14.incrementNumberAtIndex(intArray41, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray41, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 1);
        simpleMethods7.incrementNumberAtIndex(intArray80, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3627");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray57, 0);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods66.incrementNumberAtIndex(intArray79, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[39, 3, 97]");
    }

    @Test
    public void test3628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3628");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test3629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3629");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 0);
        simpleMethods43.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray87 = new int[] { '4', (-4) };
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        java.lang.Class<?> wildcardClass90 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[53, -4]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test3630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3630");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods51.incrementNumberAtIndex(intArray79, 0);
        simpleMethods35.incrementNumberAtIndex(intArray79, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray79, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray79, 0);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[34, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3631");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods36.incrementNumberAtIndex(intArray50, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods57.incrementNumberAtIndex(intArray85, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 2, 97]");
    }

    @Test
    public void test3632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3632");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        int[] intArray43 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods30.incrementNumberAtIndex(intArray43, 5);
        simpleMethods29.incrementNumberAtIndex(intArray43, (int) (byte) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods48.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        simpleMethods29.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        simpleMethods22.incrementNumberAtIndex(intArray62, 2);
        simpleMethods0.incrementNumberAtIndex(intArray62, 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test3633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3633");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3634");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, 0);
        simpleMethods33.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods74.incrementNumberAtIndex(intArray87, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[38, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test3635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3635");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        simpleMethods15.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods31.incrementNumberAtIndex(intArray43, 0);
        simpleMethods15.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods15.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, 5);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        examples.SimpleMethods simpleMethods86 = new examples.SimpleMethods();
        int[] intArray90 = new int[] { '#', 2, 'a' };
        simpleMethods86.incrementNumberAtIndex(intArray90, 0);
        simpleMethods79.incrementNumberAtIndex(intArray90, 0);
        simpleMethods72.incrementNumberAtIndex(intArray90, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[38, 2, 97]");
    }

    @Test
    public void test3636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3636");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods58.incrementNumberAtIndex(intArray76, 0);
        simpleMethods42.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[40, 2, 97]");
    }

    @Test
    public void test3637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3637");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        int[] intArray48 = new int[] { 0, 1, (byte) 10, (byte) 0, (byte) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        simpleMethods51.incrementNumberAtIndex(intArray64, (int) (short) 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods51.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, 1);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1, 11, 0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[37, 5, 97]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3638");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray71, 0);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test3639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3639");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray45, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
    }

    @Test
    public void test3640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3640");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 4);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[32, -9, 0, 0, 101, 11]");
    }

    @Test
    public void test3641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3641");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods37.incrementNumberAtIndex(intArray65, 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 1);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 3, 97]");
    }

    @Test
    public void test3642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3642");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[39, 2, 97]");
    }

    @Test
    public void test3643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3643");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods26.incrementNumberAtIndex(intArray54, 0);
        simpleMethods19.incrementNumberAtIndex(intArray54, 2);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        java.lang.Class<?> wildcardClass63 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test3644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3644");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test3645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3645");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods39.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods39.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 2);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3646");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 0);
        simpleMethods70.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods51.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods36.incrementNumberAtIndex(intArray83, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[41, 2, 97]");
    }

    @Test
    public void test3647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3647");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, (int) (short) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods64.incrementNumberAtIndex(intArray77, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray77, (int) (short) 1);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 3, 97]");
    }

    @Test
    public void test3648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3648");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods61.incrementNumberAtIndex(intArray72, 0);
        simpleMethods60.incrementNumberAtIndex(intArray72, 0);
        simpleMethods59.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods40.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[39, 3, 97]");
    }

    @Test
    public void test3649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3649");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        simpleMethods37.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods37.incrementNumberAtIndex(intArray72, (int) (short) 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods37.incrementNumberAtIndex(intArray89, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test3650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3650");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 0);
        simpleMethods22.incrementNumberAtIndex(intArray57, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 2, 97]");
    }

    @Test
    public void test3651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3651");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        int[] intArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray45, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
    }

    @Test
    public void test3652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3652");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods33.incrementNumberAtIndex(intArray51, 0);
        simpleMethods26.incrementNumberAtIndex(intArray51, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, (int) (short) 0);
        java.lang.Class<?> wildcardClass82 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test3653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3653");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, (int) (short) 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods36.incrementNumberAtIndex(intArray64, 0);
        simpleMethods29.incrementNumberAtIndex(intArray64, (int) (short) 1);
        simpleMethods7.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods7.incrementNumberAtIndex(intArray77, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[37, 2, 97]");
    }

    @Test
    public void test3654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3654");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods49.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 1);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 3, 97]");
    }

    @Test
    public void test3655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3655");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray76, 0);
        simpleMethods38.incrementNumberAtIndex(intArray76, 1);
        simpleMethods19.incrementNumberAtIndex(intArray76, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test3656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3656");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray39, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test3657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3657");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods43.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3658");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, (int) (short) 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3659");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        int[] intArray14 = new int[] { '#', 2, 'a' };
        simpleMethods10.incrementNumberAtIndex(intArray14, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        simpleMethods10.incrementNumberAtIndex(intArray21, 0);
        simpleMethods9.incrementNumberAtIndex(intArray21, 0);
        simpleMethods8.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods31.incrementNumberAtIndex(intArray43, 0);
        simpleMethods30.incrementNumberAtIndex(intArray43, 0);
        simpleMethods8.incrementNumberAtIndex(intArray43, (int) (short) 1);
        simpleMethods1.incrementNumberAtIndex(intArray43, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[39, 3, 98]");
    }

    @Test
    public void test3660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3660");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods58.incrementNumberAtIndex(intArray87, (int) (short) 1);
        simpleMethods36.incrementNumberAtIndex(intArray87, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3661");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods43.incrementNumberAtIndex(intArray83, 2);
        simpleMethods42.incrementNumberAtIndex(intArray83, 2);
        simpleMethods0.incrementNumberAtIndex(intArray83, 1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 3, 99]");
    }

    @Test
    public void test3662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3662");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray39 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods57.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        simpleMethods57.incrementNumberAtIndex(intArray88, 0);
        simpleMethods42.incrementNumberAtIndex(intArray88, 3);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test3663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3663");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods38.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods19.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods68.incrementNumberAtIndex(intArray86, 0);
        simpleMethods61.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[40, 2, 97]");
    }

    @Test
    public void test3664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3664");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray74, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test3665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3665");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods53.incrementNumberAtIndex(intArray81, 0);
        simpleMethods37.incrementNumberAtIndex(intArray81, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray81, 3);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[33, -9, 0, 1, 100, 11]");
    }

    @Test
    public void test3666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3666");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        int[] intArray93 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods80.incrementNumberAtIndex(intArray93, 5);
        simpleMethods43.incrementNumberAtIndex(intArray93, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3667");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray25, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
    }

    @Test
    public void test3668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3668");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods22.incrementNumberAtIndex(intArray69, 5);
        simpleMethods0.incrementNumberAtIndex(intArray69, 1);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test3669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3669");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods36.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (short) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test3670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3670");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        java.lang.Class<?> wildcardClass72 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[10, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test3671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3671");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods26.incrementNumberAtIndex(intArray54, 0);
        simpleMethods19.incrementNumberAtIndex(intArray54, 2);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray75 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods63.incrementNumberAtIndex(intArray75, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test3672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3672");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3673");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray39 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        simpleMethods0.incrementNumberAtIndex(intArray73, 4);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 7, -1, 1, -6]");
    }

    @Test
    public void test3674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3674");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        int[] intArray43 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods30.incrementNumberAtIndex(intArray43, 5);
        simpleMethods29.incrementNumberAtIndex(intArray43, (int) (byte) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods48.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        simpleMethods29.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        simpleMethods22.incrementNumberAtIndex(intArray62, 2);
        simpleMethods0.incrementNumberAtIndex(intArray62, 0);
        java.lang.Class<?> wildcardClass73 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test3675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3675");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods15.incrementNumberAtIndex(intArray29, (int) (byte) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods34.incrementNumberAtIndex(intArray48, (int) (byte) 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods53.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        simpleMethods15.incrementNumberAtIndex(intArray67, 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[34, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3676");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 4, 97]");
    }

    @Test
    public void test3677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3677");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods77.incrementNumberAtIndex(intArray88, 0);
        simpleMethods76.incrementNumberAtIndex(intArray88, 1);
        simpleMethods40.incrementNumberAtIndex(intArray88, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[38, 3, 97]");
    }

    @Test
    public void test3678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3678");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray39, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test3679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3679");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray27 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods15.incrementNumberAtIndex(intArray27, (int) (byte) 1);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        int[] intArray43 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods30.incrementNumberAtIndex(intArray43, 5);
        simpleMethods15.incrementNumberAtIndex(intArray43, 0);
        simpleMethods8.incrementNumberAtIndex(intArray43, (int) (short) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods8.incrementNumberAtIndex(intArray78, 5);
        simpleMethods1.incrementNumberAtIndex(intArray78, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[32, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test3680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3680");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods36.incrementNumberAtIndex(intArray71, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray71, 5);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test3681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3681");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray62 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods50.incrementNumberAtIndex(intArray62, (int) (byte) 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods50.incrementNumberAtIndex(intArray78, 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 4);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[32, -9, 0, 0, 101, 11]");
    }

    @Test
    public void test3682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3682");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray67 = new int[] { '#' };
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36]");
    }

    @Test
    public void test3683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3683");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        simpleMethods0.incrementNumberAtIndex(intArray48, (int) (short) 0);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 3, 97]");
    }

    @Test
    public void test3684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3684");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods1.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray79, 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray94 = new int[] { (-100), 'a', (byte) 0, '#', 0, 10 };
        simpleMethods0.incrementNumberAtIndex(intArray94, (int) (byte) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[-99, 97, 0, 35, 0, 10]");
    }

    @Test
    public void test3685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3685");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[39, 2, 97]");
    }

    @Test
    public void test3686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3686");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods79.incrementNumberAtIndex(intArray92, 5);
        simpleMethods78.incrementNumberAtIndex(intArray92, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray92, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3687");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 2, 97]");
    }

    @Test
    public void test3688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3688");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 3, 97]");
    }

    @Test
    public void test3689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3689");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods39.incrementNumberAtIndex(intArray79, 2);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 3, 98]");
    }

    @Test
    public void test3690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3690");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods39.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[41, 2, 97]");
    }

    @Test
    public void test3691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3691");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 0);
        simpleMethods43.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray87 = new int[] { '4', (-4) };
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[53, -4]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test3692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3692");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods16.incrementNumberAtIndex(intArray45, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3693");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        int[] intArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray45, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
    }

    @Test
    public void test3694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3694");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray53, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray72, 1);
        java.lang.Class<?> wildcardClass77 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test3695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3695");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3696");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods33.incrementNumberAtIndex(intArray67, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 4, 97]");
    }

    @Test
    public void test3697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3697");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 0);
        simpleMethods22.incrementNumberAtIndex(intArray57, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3698");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray79, 3);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[35, 8, -1, 2, -7]");
    }

    @Test
    public void test3699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3699");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods39.incrementNumberAtIndex(intArray52, (int) (short) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods39.incrementNumberAtIndex(intArray67, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 3, 97]");
    }

    @Test
    public void test3700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3700");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods46.incrementNumberAtIndex(intArray60, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray60, 0);
        java.lang.Class<?> wildcardClass67 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test3701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3701");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods22.incrementNumberAtIndex(intArray69, 5);
        simpleMethods0.incrementNumberAtIndex(intArray69, 1);
        java.lang.Class<?> wildcardClass78 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test3702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3702");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3703");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods43.incrementNumberAtIndex(intArray74, 0);
        simpleMethods42.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods42.incrementNumberAtIndex(intArray85, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[37, 2, 97]");
    }

    @Test
    public void test3704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3704");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, 0);
        simpleMethods36.incrementNumberAtIndex(intArray71, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 3, 97]");
    }

    @Test
    public void test3705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3705");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test3706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3706");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        simpleMethods0.incrementNumberAtIndex(intArray25, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods34.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods59.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray73, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3707");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods68.incrementNumberAtIndex(intArray86, 0);
        simpleMethods61.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[40, 2, 97]");
    }

    @Test
    public void test3708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3708");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 0);
        simpleMethods69.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods53.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods52.incrementNumberAtIndex(intArray82, 0);
        simpleMethods16.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 2);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[42, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3709");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods68.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods52.incrementNumberAtIndex(intArray81, (int) (short) 0);
        simpleMethods51.incrementNumberAtIndex(intArray81, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[41, 2, 97]");
    }

    @Test
    public void test3710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3710");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods58.incrementNumberAtIndex(intArray86, 1);
        simpleMethods39.incrementNumberAtIndex(intArray86, 5);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[32, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test3711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3711");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods3 = new examples.SimpleMethods();
        int[] intArray7 = new int[] { '#', 2, 'a' };
        simpleMethods3.incrementNumberAtIndex(intArray7, 0);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        int[] intArray14 = new int[] { '#', 2, 'a' };
        simpleMethods10.incrementNumberAtIndex(intArray14, 0);
        simpleMethods3.incrementNumberAtIndex(intArray14, 0);
        simpleMethods2.incrementNumberAtIndex(intArray14, 0);
        simpleMethods1.incrementNumberAtIndex(intArray14, (int) (short) 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        simpleMethods30.incrementNumberAtIndex(intArray61, 0);
        simpleMethods23.incrementNumberAtIndex(intArray61, 1);
        simpleMethods1.incrementNumberAtIndex(intArray61, 2);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        java.lang.Class<?> wildcardClass72 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 8, 0, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test3712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3712");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 2);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods57.incrementNumberAtIndex(intArray85, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3713");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods3 = new examples.SimpleMethods();
        int[] intArray7 = new int[] { '#', 2, 'a' };
        simpleMethods3.incrementNumberAtIndex(intArray7, 0);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        int[] intArray14 = new int[] { '#', 2, 'a' };
        simpleMethods10.incrementNumberAtIndex(intArray14, 0);
        simpleMethods3.incrementNumberAtIndex(intArray14, 0);
        simpleMethods2.incrementNumberAtIndex(intArray14, 0);
        simpleMethods1.incrementNumberAtIndex(intArray14, (int) (short) 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray61 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods49.incrementNumberAtIndex(intArray61, (int) (byte) 1);
        simpleMethods30.incrementNumberAtIndex(intArray61, 0);
        simpleMethods23.incrementNumberAtIndex(intArray61, 1);
        simpleMethods1.incrementNumberAtIndex(intArray61, 2);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        java.lang.Class<?> wildcardClass72 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 8, 0, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test3714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3714");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        int[] intArray43 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods30.incrementNumberAtIndex(intArray43, 5);
        simpleMethods29.incrementNumberAtIndex(intArray43, (int) (byte) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods48.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        simpleMethods29.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        simpleMethods22.incrementNumberAtIndex(intArray62, 2);
        simpleMethods0.incrementNumberAtIndex(intArray62, 0);
        int[] intArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[35, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3715");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray48, 0);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray61, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[41, 2, 97]");
    }

    @Test
    public void test3716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3716");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[36, 2, 97]");
    }

    @Test
    public void test3717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3717");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, (int) (short) 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods55.incrementNumberAtIndex(intArray90, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3718");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        simpleMethods0.incrementNumberAtIndex(intArray48, (int) (short) 0);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 3, 97]");
    }

    @Test
    public void test3719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3719");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 0);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3720");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods45.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods45.incrementNumberAtIndex(intArray84, 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, 2);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3721");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, 0);
        simpleMethods33.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods33.incrementNumberAtIndex(intArray76, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, (int) (short) 1);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[37, 3, 97]");
    }

    @Test
    public void test3722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3722");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods45.incrementNumberAtIndex(intArray73, 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, 3);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, -9, 0, 1, 100, 11]");
    }

    @Test
    public void test3723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3723");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods1.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray79, 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        examples.SimpleMethods simpleMethods88 = new examples.SimpleMethods();
        int[] intArray92 = new int[] { '#', 2, 'a' };
        simpleMethods88.incrementNumberAtIndex(intArray92, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[36, 2, 97]");
    }

    @Test
    public void test3724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3724");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods53.incrementNumberAtIndex(intArray71, 0);
        simpleMethods46.incrementNumberAtIndex(intArray71, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 2, 97]");
    }

    @Test
    public void test3725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3725");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test3726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3726");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 0);
        simpleMethods34.incrementNumberAtIndex(intArray62, 0);
        simpleMethods0.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        examples.SimpleMethods simpleMethods87 = new examples.SimpleMethods();
        int[] intArray91 = new int[] { '#', 2, 'a' };
        simpleMethods87.incrementNumberAtIndex(intArray91, 0);
        simpleMethods80.incrementNumberAtIndex(intArray91, 0);
        simpleMethods73.incrementNumberAtIndex(intArray91, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[38, 2, 97]");
    }

    @Test
    public void test3727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3727");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test3728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3728");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        int[] intArray58 = new int[] { (byte) 10, (-1), (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray58, (int) (short) 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, 2);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 0, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[37, 3, 98]");
    }

    @Test
    public void test3729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3729");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray76, 0);
        simpleMethods38.incrementNumberAtIndex(intArray76, 1);
        simpleMethods19.incrementNumberAtIndex(intArray76, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test3730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3730");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        simpleMethods24.incrementNumberAtIndex(intArray36, 0);
        simpleMethods23.incrementNumberAtIndex(intArray36, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray36, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods47.incrementNumberAtIndex(intArray61, (int) (byte) 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods66.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods47.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3731");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods54.incrementNumberAtIndex(intArray83, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray83, 2);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[32, -9, 1, 0, 100, 11]");
    }

    @Test
    public void test3732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3732");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray38, 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 0);
        simpleMethods45.incrementNumberAtIndex(intArray73, 0);
        simpleMethods0.incrementNumberAtIndex(intArray73, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[40, 2, 97]");
    }

    @Test
    public void test3733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3733");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[37, 2, 97]");
    }

    @Test
    public void test3734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3734");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods23.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods16.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods76.incrementNumberAtIndex(intArray90, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray90, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test3735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3735");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods72.incrementNumberAtIndex(intArray85, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 2, 97]");
    }

    @Test
    public void test3736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3736");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        simpleMethods15.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 0);
        simpleMethods31.incrementNumberAtIndex(intArray66, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods31.incrementNumberAtIndex(intArray84, 0);
        simpleMethods15.incrementNumberAtIndex(intArray84, 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[39, 3, 97]");
    }

    @Test
    public void test3737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3737");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 2);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray91 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods79.incrementNumberAtIndex(intArray91, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray91, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[40, 2, 98]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3738");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 5);
        java.lang.Class<?> wildcardClass96 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3739");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray14 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods2.incrementNumberAtIndex(intArray14, (int) (byte) 1);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods2.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray80 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods68.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        simpleMethods35.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        simpleMethods2.incrementNumberAtIndex(intArray80, 0);
        simpleMethods1.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (short) 1);
        java.lang.Class<?> wildcardClass91 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 10, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test3740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3740");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods48.incrementNumberAtIndex(intArray62, (int) (byte) 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods67.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods48.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, 4);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[34, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test3741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3741");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray57, 0);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3742");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[10, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test3743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3743");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods30.incrementNumberAtIndex(intArray41, 0);
        simpleMethods29.incrementNumberAtIndex(intArray41, 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        simpleMethods29.incrementNumberAtIndex(intArray60, (int) (byte) 0);
        simpleMethods22.incrementNumberAtIndex(intArray60, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[39, 2, 98]");
    }

    @Test
    public void test3744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3744");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, (int) (short) 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods51.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        simpleMethods15.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 3, 97]");
    }

    @Test
    public void test3745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3745");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3746");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods39.incrementNumberAtIndex(intArray52, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 2);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods63.incrementNumberAtIndex(intArray76, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        java.lang.Class<?> wildcardClass81 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[10, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test3747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3747");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        java.lang.Class<?> wildcardClass80 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test3748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3748");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods36.incrementNumberAtIndex(intArray64, 1);
        simpleMethods0.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods71.incrementNumberAtIndex(intArray84, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test3749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3749");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods79.incrementNumberAtIndex(intArray92, 5);
        simpleMethods78.incrementNumberAtIndex(intArray92, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray92, 0);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3750");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods0.incrementNumberAtIndex(intArray48, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods57.incrementNumberAtIndex(intArray69, 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray88 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods76.incrementNumberAtIndex(intArray88, (int) (byte) 1);
        simpleMethods57.incrementNumberAtIndex(intArray88, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test3751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3751");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods39.incrementNumberAtIndex(intArray67, 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray84 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods72.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) 1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[35, 9, -1, 1, -7]");
    }

    @Test
    public void test3752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3752");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray14 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods2.incrementNumberAtIndex(intArray14, (int) (byte) 1);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods2.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray80 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods68.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        simpleMethods35.incrementNumberAtIndex(intArray80, (int) (byte) 1);
        simpleMethods2.incrementNumberAtIndex(intArray80, 0);
        simpleMethods1.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (short) 1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 10, -1, 1, -7]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test3753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3753");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray27 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods15.incrementNumberAtIndex(intArray27, (int) (byte) 1);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        int[] intArray43 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods30.incrementNumberAtIndex(intArray43, 5);
        simpleMethods15.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 1);
        simpleMethods15.incrementNumberAtIndex(intArray60, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods69.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods15.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (short) 1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3754");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods3 = new examples.SimpleMethods();
        int[] intArray7 = new int[] { '#', 2, 'a' };
        simpleMethods3.incrementNumberAtIndex(intArray7, 0);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        int[] intArray14 = new int[] { '#', 2, 'a' };
        simpleMethods10.incrementNumberAtIndex(intArray14, 0);
        simpleMethods3.incrementNumberAtIndex(intArray14, 0);
        simpleMethods2.incrementNumberAtIndex(intArray14, 0);
        simpleMethods1.incrementNumberAtIndex(intArray14, (int) (short) 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        simpleMethods23.incrementNumberAtIndex(intArray54, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods64.incrementNumberAtIndex(intArray76, 0);
        simpleMethods63.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[39, 3, 97]");
    }

    @Test
    public void test3755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3755");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        java.lang.Class<?> wildcardClass93 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test3756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3756");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        simpleMethods19.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods51.incrementNumberAtIndex(intArray79, 0);
        simpleMethods44.incrementNumberAtIndex(intArray79, 2);
        simpleMethods19.incrementNumberAtIndex(intArray79, 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 0);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[35, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3757");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods43.incrementNumberAtIndex(intArray71, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray71, 1);
        int[] intArray83 = new int[] { 100, 1, (short) 10, (-9), 5 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 1, 10, -9, 5]");
    }

    @Test
    public void test3758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3758");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods1.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, 0);
        simpleMethods1.incrementNumberAtIndex(intArray47, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray47, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[39, 3, 97]");
    }

    @Test
    public void test3759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3759");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        simpleMethods17.incrementNumberAtIndex(intArray48, 0);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (byte) 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray68, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray68, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[39, 2, 98]");
    }

    @Test
    public void test3760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3760");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        int[] intArray92 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods80.incrementNumberAtIndex(intArray92, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray92, 4);
        simpleMethods0.incrementNumberAtIndex(intArray92, 0);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[36, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3761");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray75 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods63.incrementNumberAtIndex(intArray75, (int) (byte) 1);
        simpleMethods44.incrementNumberAtIndex(intArray75, 0);
        simpleMethods37.incrementNumberAtIndex(intArray75, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test3762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3762");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods53.incrementNumberAtIndex(intArray81, 0);
        simpleMethods37.incrementNumberAtIndex(intArray81, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray81, 3);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[33, -9, 0, 1, 100, 11]");
    }

    @Test
    public void test3763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3763");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray62, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3764");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods1.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        simpleMethods34.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray79, 0);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
        int[] intArray94 = new int[] { (-100), 'a', (byte) 0, '#', 0, 10 };
        simpleMethods0.incrementNumberAtIndex(intArray94, (int) (byte) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[-99, 97, 0, 35, 0, 10]");
    }

    @Test
    public void test3765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3765");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray74, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test3766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3766");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        simpleMethods44.incrementNumberAtIndex(intArray55, 0);
        simpleMethods43.incrementNumberAtIndex(intArray55, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 0);
        simpleMethods43.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray87 = new int[] { '4', (-4) };
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[53, -4]");
    }

    @Test
    public void test3767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3767");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray70, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3768");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods53.incrementNumberAtIndex(intArray81, 0);
        simpleMethods37.incrementNumberAtIndex(intArray81, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray81, 3);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[33, -9, 0, 1, 100, 11]");
    }

    @Test
    public void test3769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3769");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, (int) (short) 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        simpleMethods30.incrementNumberAtIndex(intArray41, 0);
        simpleMethods29.incrementNumberAtIndex(intArray41, 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray60 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods48.incrementNumberAtIndex(intArray60, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods48.incrementNumberAtIndex(intArray76, 0);
        simpleMethods29.incrementNumberAtIndex(intArray76, 5);
        simpleMethods7.incrementNumberAtIndex(intArray76, 4);
        simpleMethods0.incrementNumberAtIndex(intArray76, 4);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[33, -10, 0, 0, 102, 12]");
    }

    @Test
    public void test3770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3770");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods77.incrementNumberAtIndex(intArray88, 0);
        simpleMethods76.incrementNumberAtIndex(intArray88, 1);
        simpleMethods40.incrementNumberAtIndex(intArray88, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[38, 3, 97]");
    }

    @Test
    public void test3771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3771");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods15.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[41, 2, 97]");
    }

    @Test
    public void test3772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3772");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        simpleMethods33.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 2);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[39, 2, 98]");
    }

    @Test
    public void test3773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3773");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods20.incrementNumberAtIndex(intArray51, 0);
        simpleMethods19.incrementNumberAtIndex(intArray51, (int) (byte) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods19.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (short) 1);
        java.lang.Class<?> wildcardClass78 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test3774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3774");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods33.incrementNumberAtIndex(intArray73, 2);
        simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 3, 98]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test3775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3775");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods55.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray84, 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, 0);
        java.lang.Class<?> wildcardClass93 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test3776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3776");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3777");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[37, 2, 97]");
    }

    @Test
    public void test3778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3778");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 5);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3779");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        simpleMethods38.incrementNumberAtIndex(intArray51, 0);
        simpleMethods16.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods63.incrementNumberAtIndex(intArray74, 0);
        simpleMethods62.incrementNumberAtIndex(intArray74, 1);
        simpleMethods16.incrementNumberAtIndex(intArray74, 0);
        simpleMethods0.incrementNumberAtIndex(intArray74, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[39, 3, 97]");
    }

    @Test
    public void test3780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3780");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, 0);
        simpleMethods19.incrementNumberAtIndex(intArray68, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test3781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3781");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test3782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3782");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods17.incrementNumberAtIndex(intArray46, (int) (short) 1);
        simpleMethods1.incrementNumberAtIndex(intArray46, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray46, 1);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[33, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3783");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        simpleMethods50.incrementNumberAtIndex(intArray63, (int) (short) 0);
        simpleMethods34.incrementNumberAtIndex(intArray63, (int) (short) 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods34.incrementNumberAtIndex(intArray87, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[32, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test3784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3784");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods50.incrementNumberAtIndex(intArray64, (int) (byte) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods69.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods50.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray83, 1);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[35, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3785");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods36.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods0.incrementNumberAtIndex(intArray87, 3);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[32, -10, 0, 1, 100, 11]");
    }

    @Test
    public void test3786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3786");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        simpleMethods15.incrementNumberAtIndex(intArray26, 0);
        simpleMethods8.incrementNumberAtIndex(intArray26, 0);
        simpleMethods1.incrementNumberAtIndex(intArray26, (int) (short) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods35.incrementNumberAtIndex(intArray85, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray85, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3787");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray41, 4);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray58 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods46.incrementNumberAtIndex(intArray58, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray58, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test3788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3788");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        int[] intArray62 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods49.incrementNumberAtIndex(intArray62, 5);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods49.incrementNumberAtIndex(intArray78, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3789");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        simpleMethods24.incrementNumberAtIndex(intArray36, 0);
        simpleMethods23.incrementNumberAtIndex(intArray36, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray36, (int) (short) 0);
        int[] intArray51 = new int[] { (byte) -1, (-2), 8, (-10) };
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, -1, 8, -10]");
    }

    @Test
    public void test3790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3790");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        simpleMethods28.incrementNumberAtIndex(intArray39, 0);
        simpleMethods27.incrementNumberAtIndex(intArray39, 0);
        simpleMethods26.incrementNumberAtIndex(intArray39, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray39, (int) (short) 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray81, 0);
        int[] intArray94 = new int[] { '4', (-4) };
        simpleMethods7.incrementNumberAtIndex(intArray94, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[53, -4]");
    }

    @Test
    public void test3791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3791");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods34.incrementNumberAtIndex(intArray48, (int) (byte) 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods53.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods53.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods34.incrementNumberAtIndex(intArray86, 1);
        simpleMethods19.incrementNumberAtIndex(intArray86, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[34, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3792");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        int[] intArray38 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods25.incrementNumberAtIndex(intArray38, 5);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray72, 2);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[37, 7, 0, 1, -7]");
    }

    @Test
    public void test3793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3793");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray59 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods46.incrementNumberAtIndex(intArray59, 5);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 0);
        simpleMethods62.incrementNumberAtIndex(intArray75, 0);
        simpleMethods46.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, (int) (short) 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[41, 2, 97]");
    }

    @Test
    public void test3794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3794");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray64, 0);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test3795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3795");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
    }

    @Test
    public void test3796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3796");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test3797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3797");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray78 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods66.incrementNumberAtIndex(intArray78, (int) (byte) 1);
        simpleMethods47.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods47.incrementNumberAtIndex(intArray87, 2);
        simpleMethods46.incrementNumberAtIndex(intArray87, 2);
        simpleMethods0.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 2, 99]");
    }

    @Test
    public void test3798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3798");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods48.incrementNumberAtIndex(intArray79, 0);
        simpleMethods33.incrementNumberAtIndex(intArray79, 3);
        simpleMethods0.incrementNumberAtIndex(intArray79, 3);
        java.lang.Class<?> wildcardClass88 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 7, -1, 3, -7]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test3799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3799");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, 1);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray54, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 4, 97]");
    }

    @Test
    public void test3800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3800");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods39.incrementNumberAtIndex(intArray52, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 2);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods63.incrementNumberAtIndex(intArray76, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[10, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test3801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3801");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods65.incrementNumberAtIndex(intArray78, 5);
        simpleMethods43.incrementNumberAtIndex(intArray78, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray78, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3802");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray64 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods51.incrementNumberAtIndex(intArray64, 5);
        simpleMethods36.incrementNumberAtIndex(intArray64, 1);
        simpleMethods0.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods71.incrementNumberAtIndex(intArray84, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[39, 2, 97]");
    }

    @Test
    public void test3803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3803");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        simpleMethods33.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods33.incrementNumberAtIndex(intArray73, 2);
        simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray80, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 3, 98]");
    }

    @Test
    public void test3804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3804");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods34.incrementNumberAtIndex(intArray47, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray47, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 3, 97]");
    }

    @Test
    public void test3805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3805");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 4, 97]");
    }

    @Test
    public void test3806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3806");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods0.incrementNumberAtIndex(intArray91, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3807");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test3808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3808");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods36.incrementNumberAtIndex(intArray71, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray71, 5);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[32, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test3809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3809");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
    }

    @Test
    public void test3810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3810");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray43, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
    }

    @Test
    public void test3811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3811");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods22.incrementNumberAtIndex(intArray69, 5);
        simpleMethods0.incrementNumberAtIndex(intArray69, 5);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 100, 13]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test3812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3812");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods43.incrementNumberAtIndex(intArray57, (int) (byte) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        int[] intArray76 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods63.incrementNumberAtIndex(intArray76, 5);
        simpleMethods62.incrementNumberAtIndex(intArray76, (int) (byte) 0);
        simpleMethods43.incrementNumberAtIndex(intArray76, (int) (byte) 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods43.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[37, 2, 97]");
    }

    @Test
    public void test3813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3813");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3814");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods31.incrementNumberAtIndex(intArray43, 1);
        simpleMethods16.incrementNumberAtIndex(intArray43, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray43, (int) (short) 1);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 0);
        simpleMethods54.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[40, 2, 97]");
    }

    @Test
    public void test3815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3815");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods57.incrementNumberAtIndex(intArray69, 0);
        simpleMethods56.incrementNumberAtIndex(intArray69, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray69, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, (int) (short) 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[41, 2, 97]");
    }

    @Test
    public void test3816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3816");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 3, 97]");
    }

    @Test
    public void test3817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3817");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods38.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[34, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3818");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        int[] intArray76 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods64.incrementNumberAtIndex(intArray76, (int) (byte) 1);
        simpleMethods45.incrementNumberAtIndex(intArray76, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test3819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3819");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        simpleMethods57.incrementNumberAtIndex(intArray68, 0);
        simpleMethods56.incrementNumberAtIndex(intArray68, 0);
        simpleMethods55.incrementNumberAtIndex(intArray68, 0);
        simpleMethods19.incrementNumberAtIndex(intArray68, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 1);
        java.lang.Class<?> wildcardClass81 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test3820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3820");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray21 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods9.incrementNumberAtIndex(intArray21, (int) (byte) 1);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        simpleMethods24.incrementNumberAtIndex(intArray36, 1);
        simpleMethods9.incrementNumberAtIndex(intArray36, (int) (short) 0);
        simpleMethods2.incrementNumberAtIndex(intArray36, 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods2.incrementNumberAtIndex(intArray59, 0);
        simpleMethods1.incrementNumberAtIndex(intArray59, 0);
        simpleMethods0.incrementNumberAtIndex(intArray59, 0);
        int[] intArray74 = new int[] { 9, (-1) };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray74, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[9, -1]");
    }

    @Test
    public void test3821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3821");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, 0);
        simpleMethods33.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods74.incrementNumberAtIndex(intArray86, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[38, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[37, 3, 97]");
    }

    @Test
    public void test3822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3822");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods22.incrementNumberAtIndex(intArray69, 5);
        simpleMethods0.incrementNumberAtIndex(intArray69, 5);
        java.lang.Class<?> wildcardClass78 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 100, 13]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test3823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3823");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 2);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test3824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3824");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods29.incrementNumberAtIndex(intArray40, 0);
        simpleMethods22.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods47.incrementNumberAtIndex(intArray82, 2);
        simpleMethods22.incrementNumberAtIndex(intArray82, 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[35, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3825");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray39 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods42.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods42.incrementNumberAtIndex(intArray88, 4);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[32, -10, 0, 0, 101, 11]");
    }

    @Test
    public void test3826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3826");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 1);
        int[] intArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray56, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test3827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3827");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 1);
        simpleMethods51.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, 2);
        java.lang.Class<?> wildcardClass89 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[38, 3, 98]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test3828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3828");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods7.incrementNumberAtIndex(intArray38, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods49.incrementNumberAtIndex(intArray67, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods74.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        simpleMethods49.incrementNumberAtIndex(intArray88, 1);
        simpleMethods0.incrementNumberAtIndex(intArray88, (int) (byte) 0);
        java.lang.Class<?> wildcardClass97 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test3829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3829");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray29 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods16.incrementNumberAtIndex(intArray29, 5);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods32.incrementNumberAtIndex(intArray61, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray61, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray61, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3830");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3831");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[37, 2, 97]");
    }

    @Test
    public void test3832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3832");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods55.incrementNumberAtIndex(intArray84, (int) (short) 1);
        simpleMethods19.incrementNumberAtIndex(intArray84, 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test3833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3833");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray36, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test3834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3834");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods15.incrementNumberAtIndex(intArray28, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods39.incrementNumberAtIndex(intArray53, (int) (byte) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods58.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods39.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[39, 3, 97]");
    }

    @Test
    public void test3835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3835");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test3836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3836");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 0);
        simpleMethods42.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        simpleMethods26.incrementNumberAtIndex(intArray73, 0);
        simpleMethods19.incrementNumberAtIndex(intArray73, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[40, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test3837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3837");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray41, 4);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        int[] intArray58 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods46.incrementNumberAtIndex(intArray58, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray58, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test3838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3838");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        int[] intArray59 = new int[] { (-10), (short) 100, (short) 1, 5, (short) 0 };
        simpleMethods0.incrementNumberAtIndex(intArray59, 0);
        int[] intArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray62, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-9, 100, 1, 5, 0]");
    }

    @Test
    public void test3839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3839");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods45.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods71.incrementNumberAtIndex(intArray84, 5);
        simpleMethods70.incrementNumberAtIndex(intArray84, (int) (byte) 0);
        simpleMethods45.incrementNumberAtIndex(intArray84, 0);
        simpleMethods0.incrementNumberAtIndex(intArray84, 2);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3840");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3841");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods32.incrementNumberAtIndex(intArray60, 0);
        simpleMethods25.incrementNumberAtIndex(intArray60, 2);
        simpleMethods0.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3842");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods37.incrementNumberAtIndex(intArray65, 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 1);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[39, 3, 97]");
    }

    @Test
    public void test3843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3843");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        simpleMethods0.incrementNumberAtIndex(intArray48, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods57.incrementNumberAtIndex(intArray75, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[38, 2, 97]");
    }

    @Test
    public void test3844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3844");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray53 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods40.incrementNumberAtIndex(intArray53, 5);
        simpleMethods0.incrementNumberAtIndex(intArray53, 5);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test3845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3845");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        simpleMethods18.incrementNumberAtIndex(intArray30, 0);
        simpleMethods17.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods43.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[38, 3, 97]");
    }

    @Test
    public void test3846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3846");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        simpleMethods18.incrementNumberAtIndex(intArray30, 0);
        simpleMethods17.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray30, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods43.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, 1);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test3847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3847");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray13 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods1.incrementNumberAtIndex(intArray13, (int) (byte) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        simpleMethods1.incrementNumberAtIndex(intArray28, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray28, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 3, 97]");
    }

    @Test
    public void test3848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3848");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 1);
        int[] intArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray56, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test3849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3849");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, (int) (short) 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods33.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        simpleMethods52.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods33.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray65, 0);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[40, 3, 97]");
    }

    @Test
    public void test3850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3850");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 2);
        java.lang.Class<?> wildcardClass64 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test3851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3851");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        simpleMethods24.incrementNumberAtIndex(intArray36, 0);
        simpleMethods23.incrementNumberAtIndex(intArray36, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray36, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        int[] intArray61 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods48.incrementNumberAtIndex(intArray61, 5);
        simpleMethods47.incrementNumberAtIndex(intArray61, (int) (byte) 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods66.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods47.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray80, 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3852");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods22.incrementNumberAtIndex(intArray69, 5);
        simpleMethods0.incrementNumberAtIndex(intArray69, 5);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 100, 13]");
    }

    @Test
    public void test3853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3853");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        int[] intArray39 = new int[] { ' ', (-1), 6, (byte) 10, (-9), (-2) };
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray55 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods42.incrementNumberAtIndex(intArray55, 5);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods42.incrementNumberAtIndex(intArray89, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -1, 6, 10, -9, -2]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 7, 0, 1, -7]");
    }

    @Test
    public void test3854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3854");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods42.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3855");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        int[] intArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray37, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[38, 3, 97]");
    }

    @Test
    public void test3856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3856");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods67.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 3, 97]");
    }

    @Test
    public void test3857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3857");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        simpleMethods24.incrementNumberAtIndex(intArray36, 0);
        simpleMethods23.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        simpleMethods23.incrementNumberAtIndex(intArray58, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray58, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 3, 98]");
    }

    @Test
    public void test3858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3858");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods9.incrementNumberAtIndex(intArray22, 5);
        simpleMethods8.incrementNumberAtIndex(intArray22, (int) (byte) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        int[] intArray41 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods28.incrementNumberAtIndex(intArray41, 5);
        simpleMethods27.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods8.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 7, -1, 1, -7]");
    }

    @Test
    public void test3859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3859");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods54.incrementNumberAtIndex(intArray67, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[10, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test3860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3860");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods48.incrementNumberAtIndex(intArray79, 0);
        simpleMethods33.incrementNumberAtIndex(intArray79, 3);
        simpleMethods0.incrementNumberAtIndex(intArray79, 3);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 7, -1, 3, -7]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test3861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3861");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        int[] intArray49 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray49, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
    }

    @Test
    public void test3862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3862");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
    }

    @Test
    public void test3863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3863");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        simpleMethods0.incrementNumberAtIndex(intArray40, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 5);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 98]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 12]");
    }

    @Test
    public void test3864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3864");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        int[] intArray86 = new int[] { '#', 2, 'a' };
        simpleMethods82.incrementNumberAtIndex(intArray86, 0);
        simpleMethods75.incrementNumberAtIndex(intArray86, 0);
        simpleMethods68.incrementNumberAtIndex(intArray86, 0);
        simpleMethods61.incrementNumberAtIndex(intArray86, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[40, 2, 97]");
    }

    @Test
    public void test3865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3865");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        simpleMethods0.incrementNumberAtIndex(intArray48, (int) (short) 0);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 3, 97]");
    }

    @Test
    public void test3866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3866");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods67.incrementNumberAtIndex(intArray85, 0);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[39, 2, 97]");
    }

    @Test
    public void test3867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3867");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        int[] intArray22 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods9.incrementNumberAtIndex(intArray22, 5);
        simpleMethods8.incrementNumberAtIndex(intArray22, (int) (byte) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        int[] intArray41 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods28.incrementNumberAtIndex(intArray41, 5);
        simpleMethods27.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods8.incrementNumberAtIndex(intArray41, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray41, 2);
        simpleMethods0.incrementNumberAtIndex(intArray41, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray67 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods54.incrementNumberAtIndex(intArray67, 5);
        simpleMethods53.incrementNumberAtIndex(intArray67, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods53.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods52.incrementNumberAtIndex(intArray86, 1);
        simpleMethods0.incrementNumberAtIndex(intArray86, 2);
        java.lang.Class<?> wildcardClass97 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[34, -9, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test3868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3868");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray50 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods38.incrementNumberAtIndex(intArray50, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods38.incrementNumberAtIndex(intArray66, 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods38.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray83, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test3869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3869");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 0);
        simpleMethods69.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods53.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods52.incrementNumberAtIndex(intArray82, 0);
        simpleMethods16.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray82, 2);
        java.lang.Class<?> wildcardClass99 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[42, 2, 98]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3870");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods51.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods35.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 5);
        java.lang.Class<?> wildcardClass91 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test3871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3871");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 4, 97]");
    }

    @Test
    public void test3872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3872");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods59.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        simpleMethods33.incrementNumberAtIndex(intArray73, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3873");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods53.incrementNumberAtIndex(intArray66, 5);
        simpleMethods52.incrementNumberAtIndex(intArray66, (int) (byte) 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        simpleMethods71.incrementNumberAtIndex(intArray84, (int) (short) 0);
        simpleMethods52.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        simpleMethods19.incrementNumberAtIndex(intArray84, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[40, 3, 97]");
    }

    @Test
    public void test3874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3874");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray70 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods57.incrementNumberAtIndex(intArray70, 5);
        simpleMethods42.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3875");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods54.incrementNumberAtIndex(intArray82, 0);
        simpleMethods47.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods25.incrementNumberAtIndex(intArray82, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3876");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 1);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[38, 3, 97]");
    }

    @Test
    public void test3877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3877");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray64 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods52.incrementNumberAtIndex(intArray64, (int) (byte) 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods52.incrementNumberAtIndex(intArray80, 0);
        simpleMethods33.incrementNumberAtIndex(intArray80, 5);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test3878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3878");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 1);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods21.incrementNumberAtIndex(intArray33, 0);
        simpleMethods20.incrementNumberAtIndex(intArray33, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray33, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 0);
        simpleMethods44.incrementNumberAtIndex(intArray75, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, (int) (byte) 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[41, 2, 97]");
    }

    @Test
    public void test3879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3879");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods16.incrementNumberAtIndex(intArray51, (int) (short) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray68 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods56.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods71.incrementNumberAtIndex(intArray83, 1);
        simpleMethods56.incrementNumberAtIndex(intArray83, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray96 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[]");
    }

    @Test
    public void test3880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3880");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 0);
        simpleMethods42.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        simpleMethods26.incrementNumberAtIndex(intArray73, 0);
        simpleMethods19.incrementNumberAtIndex(intArray73, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[40, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test3881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3881");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        int[] intArray34 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods21.incrementNumberAtIndex(intArray34, 5);
        simpleMethods20.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods1.incrementNumberAtIndex(intArray34, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        simpleMethods45.incrementNumberAtIndex(intArray56, 0);
        simpleMethods44.incrementNumberAtIndex(intArray56, 0);
        simpleMethods43.incrementNumberAtIndex(intArray56, (int) (short) 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        simpleMethods65.incrementNumberAtIndex(intArray76, 0);
        simpleMethods43.incrementNumberAtIndex(intArray76, 0);
        simpleMethods0.incrementNumberAtIndex(intArray76, (int) (short) 1);
        java.lang.Class<?> wildcardClass85 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test3882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3882");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods3 = new examples.SimpleMethods();
        int[] intArray7 = new int[] { '#', 2, 'a' };
        simpleMethods3.incrementNumberAtIndex(intArray7, 0);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        int[] intArray14 = new int[] { '#', 2, 'a' };
        simpleMethods10.incrementNumberAtIndex(intArray14, 0);
        int[] intArray22 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods10.incrementNumberAtIndex(intArray22, (int) (byte) 1);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        simpleMethods25.incrementNumberAtIndex(intArray37, 1);
        simpleMethods10.incrementNumberAtIndex(intArray37, (int) (short) 0);
        simpleMethods3.incrementNumberAtIndex(intArray37, 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 1);
        simpleMethods3.incrementNumberAtIndex(intArray60, 0);
        simpleMethods2.incrementNumberAtIndex(intArray60, 0);
        simpleMethods1.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods73.incrementNumberAtIndex(intArray86, (int) (short) 1);
        simpleMethods1.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[10, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test3883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3883");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods57.incrementNumberAtIndex(intArray85, 0);
        simpleMethods50.incrementNumberAtIndex(intArray85, 2);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3884");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        int[] intArray57 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods45.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        simpleMethods26.incrementNumberAtIndex(intArray57, 0);
        simpleMethods19.incrementNumberAtIndex(intArray57, 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray66, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[37, 8, -1, 1, -7]");
    }

    @Test
    public void test3885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3885");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        simpleMethods50.incrementNumberAtIndex(intArray61, 0);
        simpleMethods49.incrementNumberAtIndex(intArray61, 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods49.incrementNumberAtIndex(intArray80, (int) (byte) 0);
        simpleMethods42.incrementNumberAtIndex(intArray80, 2);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 2, 98]");
    }

    @Test
    public void test3886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3886");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods33.incrementNumberAtIndex(intArray51, 0);
        simpleMethods26.incrementNumberAtIndex(intArray51, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, 0);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[40, 3, 97]");
    }

    @Test
    public void test3887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3887");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray34, 4);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods58.incrementNumberAtIndex(intArray86, 1);
        simpleMethods39.incrementNumberAtIndex(intArray86, 5);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -6]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[32, -8, 0, 0, 100, 12]");
    }

    @Test
    public void test3888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3888");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3889");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 0);
        simpleMethods36.incrementNumberAtIndex(intArray49, 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        simpleMethods60.incrementNumberAtIndex(intArray88, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3890");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods46.incrementNumberAtIndex(intArray60, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray60, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3891");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray38 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods26.incrementNumberAtIndex(intArray38, (int) (byte) 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 1);
        simpleMethods26.incrementNumberAtIndex(intArray53, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods26.incrementNumberAtIndex(intArray75, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3892");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray59 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods47.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray75 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods62.incrementNumberAtIndex(intArray75, 5);
        simpleMethods47.incrementNumberAtIndex(intArray75, 0);
        simpleMethods40.incrementNumberAtIndex(intArray75, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3893");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 0);
        simpleMethods45.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        simpleMethods69.incrementNumberAtIndex(intArray80, 0);
        simpleMethods68.incrementNumberAtIndex(intArray80, 0);
        simpleMethods67.incrementNumberAtIndex(intArray80, 0);
        simpleMethods45.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[40, 3, 97]");
    }

    @Test
    public void test3894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3894");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
    }

    @Test
    public void test3895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3895");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods73.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass94 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[10, 2, 2, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test3896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3896");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 0);
        simpleMethods22.incrementNumberAtIndex(intArray57, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        int[] intArray70 = new int[] { 100, 6, (short) 0, (byte) 100 };
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        int[] intArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray73, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[101, 6, 0, 100]");
    }

    @Test
    public void test3897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3897");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods8.incrementNumberAtIndex(intArray57, (int) (short) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods8.incrementNumberAtIndex(intArray74, 1);
        simpleMethods1.incrementNumberAtIndex(intArray74, 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test3898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3898");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray61, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3899");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods40.incrementNumberAtIndex(intArray89, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3900");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        simpleMethods32.incrementNumberAtIndex(intArray45, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray45, 0);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 0);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[41, 2, 97]");
    }

    @Test
    public void test3901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3901");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
    }

    @Test
    public void test3902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3902");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 1);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods1.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray72 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods60.incrementNumberAtIndex(intArray72, (int) (byte) 1);
        simpleMethods41.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods41.incrementNumberAtIndex(intArray81, 2);
        simpleMethods1.incrementNumberAtIndex(intArray81, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[37, 2, 98]");
    }

    @Test
    public void test3903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3903");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods36.incrementNumberAtIndex(intArray68, (int) (byte) 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods73.incrementNumberAtIndex(intArray86, (int) (short) 1);
        simpleMethods36.incrementNumberAtIndex(intArray86, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray86, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[10, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test3904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3904");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods39.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        simpleMethods39.incrementNumberAtIndex(intArray70, 0);
        simpleMethods38.incrementNumberAtIndex(intArray70, (int) (byte) 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray90 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods77.incrementNumberAtIndex(intArray90, 5);
        simpleMethods38.incrementNumberAtIndex(intArray90, 0);
        simpleMethods19.incrementNumberAtIndex(intArray90, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3905");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods14.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods39.incrementNumberAtIndex(intArray52, (int) (short) 0);
        simpleMethods14.incrementNumberAtIndex(intArray52, 0);
        simpleMethods7.incrementNumberAtIndex(intArray52, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[41, 2, 97]");
    }

    @Test
    public void test3906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3906");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        simpleMethods14.incrementNumberAtIndex(intArray25, 0);
        simpleMethods7.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        simpleMethods34.incrementNumberAtIndex(intArray45, 0);
        simpleMethods33.incrementNumberAtIndex(intArray45, 0);
        simpleMethods32.incrementNumberAtIndex(intArray45, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray45, 0);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 0);
        java.lang.Class<?> wildcardClass58 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[41, 2, 97]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test3907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3907");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, 0);
        simpleMethods0.incrementNumberAtIndex(intArray44, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods51.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray80, 0);
        int[] intArray92 = new int[] { 7, (short) 0, 2, (-100), 10 };
        simpleMethods0.incrementNumberAtIndex(intArray92, 4);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[7, 0, 2, -100, 11]");
    }

    @Test
    public void test3908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3908");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray29 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods17.incrementNumberAtIndex(intArray29, (int) (byte) 1);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray45 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods32.incrementNumberAtIndex(intArray45, 5);
        simpleMethods17.incrementNumberAtIndex(intArray45, 0);
        simpleMethods1.incrementNumberAtIndex(intArray45, (int) (short) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        simpleMethods52.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        int[] intArray83 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods71.incrementNumberAtIndex(intArray83, (int) (byte) 1);
        simpleMethods52.incrementNumberAtIndex(intArray83, 0);
        simpleMethods1.incrementNumberAtIndex(intArray83, 3);
        simpleMethods0.incrementNumberAtIndex(intArray83, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[37, 7, -1, 2, -7]");
    }

    @Test
    public void test3909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3909");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray46, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3910");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods1.incrementNumberAtIndex(intArray30, (int) (short) 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        simpleMethods35.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        simpleMethods35.incrementNumberAtIndex(intArray69, 4);
        simpleMethods1.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 0);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 7, -1, 1, -6]");
    }

    @Test
    public void test3911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3911");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray80 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods67.incrementNumberAtIndex(intArray80, 5);
        simpleMethods51.incrementNumberAtIndex(intArray80, (int) (short) 1);
        simpleMethods35.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods19.incrementNumberAtIndex(intArray80, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray80, 5);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[34, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test3912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3912");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray44, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray70 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods58.incrementNumberAtIndex(intArray70, (int) (byte) 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods58.incrementNumberAtIndex(intArray85, (int) (short) 0);
        simpleMethods51.incrementNumberAtIndex(intArray85, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray85, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 4, 97]");
    }

    @Test
    public void test3913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3913");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods30.incrementNumberAtIndex(intArray44, (int) (byte) 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods49.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods30.incrementNumberAtIndex(intArray63, (int) (byte) 0);
        simpleMethods23.incrementNumberAtIndex(intArray63, 2);
        simpleMethods22.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[34, -8, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test3914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3914");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, (int) (short) 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3915");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
    }

    @Test
    public void test3916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3916");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        int[] intArray84 = new int[] { '#', 2, 'a' };
        simpleMethods80.incrementNumberAtIndex(intArray84, 0);
        simpleMethods73.incrementNumberAtIndex(intArray84, 0);
        simpleMethods72.incrementNumberAtIndex(intArray84, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[38, 5, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[38, 2, 97]");
    }

    @Test
    public void test3917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3917");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test3918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3918");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        int[] intArray74 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods62.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods29.incrementNumberAtIndex(intArray74, (int) (byte) 1);
        simpleMethods7.incrementNumberAtIndex(intArray74, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray74, (int) (byte) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 9, -1, 1, -7]");
    }

    @Test
    public void test3919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3919");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray25, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
    }

    @Test
    public void test3920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3920");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 0);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray49 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods37.incrementNumberAtIndex(intArray49, (int) (byte) 1);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods37.incrementNumberAtIndex(intArray65, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray65, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3921");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        simpleMethods19.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods35.incrementNumberAtIndex(intArray53, 0);
        simpleMethods19.incrementNumberAtIndex(intArray53, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray53, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
    }

    @Test
    public void test3922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3922");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods78.incrementNumberAtIndex(intArray91, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[9, 2, 1, -2, -1, 2]");
    }

    @Test
    public void test3923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3923");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        int[] intArray35 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods23.incrementNumberAtIndex(intArray35, (int) (byte) 1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 1);
        simpleMethods23.incrementNumberAtIndex(intArray50, (int) (short) 0);
        simpleMethods16.incrementNumberAtIndex(intArray50, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray50, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[38, 4, 97]");
    }

    @Test
    public void test3924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3924");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        int[] intArray51 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods38.incrementNumberAtIndex(intArray51, 5);
        simpleMethods22.incrementNumberAtIndex(intArray51, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, 1);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray58, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3925");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray33 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods20.incrementNumberAtIndex(intArray33, 5);
        simpleMethods19.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods40.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray64, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
    }

    @Test
    public void test3926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3926");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray27 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods15.incrementNumberAtIndex(intArray27, (int) (byte) 1);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        int[] intArray43 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods30.incrementNumberAtIndex(intArray43, 5);
        simpleMethods15.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 1);
        simpleMethods15.incrementNumberAtIndex(intArray60, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods69.incrementNumberAtIndex(intArray83, (int) (byte) 0);
        simpleMethods15.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (short) 1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray92, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[37, 4, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3927");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        int[] intArray44 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods31.incrementNumberAtIndex(intArray44, 5);
        simpleMethods16.incrementNumberAtIndex(intArray44, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray44, 1);
        int[] intArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray51, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[32, -8, 0, 0, 100, 11]");
    }

    @Test
    public void test3928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3928");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray7, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
    }

    @Test
    public void test3929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3929");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        int[] intArray49 = new int[] { '#', 2, 'a' };
        simpleMethods45.incrementNumberAtIndex(intArray49, 0);
        simpleMethods38.incrementNumberAtIndex(intArray49, 0);
        simpleMethods37.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods37.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3930");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods22.incrementNumberAtIndex(intArray53, (int) (byte) 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 0);
        simpleMethods62.incrementNumberAtIndex(intArray75, 0);
        simpleMethods22.incrementNumberAtIndex(intArray75, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray75, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[39, 3, 97]");
    }

    @Test
    public void test3931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3931");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        int[] intArray54 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods42.incrementNumberAtIndex(intArray54, (int) (byte) 1);
        simpleMethods23.incrementNumberAtIndex(intArray54, 0);
        simpleMethods22.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods22.incrementNumberAtIndex(intArray65, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, 1);
        java.lang.Class<?> wildcardClass72 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test3932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3932");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        simpleMethods39.incrementNumberAtIndex(intArray50, 0);
        simpleMethods38.incrementNumberAtIndex(intArray50, 0);
        simpleMethods22.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray72 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods59.incrementNumberAtIndex(intArray72, 5);
        simpleMethods22.incrementNumberAtIndex(intArray72, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray72, 0);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3933");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3934");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        int[] intArray83 = new int[] { '#', 2, 'a' };
        simpleMethods79.incrementNumberAtIndex(intArray83, 0);
        simpleMethods72.incrementNumberAtIndex(intArray83, 0);
        simpleMethods0.incrementNumberAtIndex(intArray83, (int) (short) 0);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray90, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[39, 4, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[38, 2, 97]");
    }

    @Test
    public void test3935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3935");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        simpleMethods50.incrementNumberAtIndex(intArray63, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[39, 2, 97]");
    }

    @Test
    public void test3936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3936");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        simpleMethods25.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        simpleMethods42.incrementNumberAtIndex(intArray53, 0);
        simpleMethods41.incrementNumberAtIndex(intArray53, 0);
        simpleMethods25.incrementNumberAtIndex(intArray53, 0);
        simpleMethods0.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        simpleMethods66.incrementNumberAtIndex(intArray77, 0);
        simpleMethods65.incrementNumberAtIndex(intArray77, 0);
        simpleMethods64.incrementNumberAtIndex(intArray77, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray77, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[39, 2, 97]");
    }

    @Test
    public void test3937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3937");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods34.incrementNumberAtIndex(intArray74, 2);
        simpleMethods33.incrementNumberAtIndex(intArray74, 2);
        simpleMethods0.incrementNumberAtIndex(intArray74, 2);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 100]");
    }

    @Test
    public void test3938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3938");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        int[] intArray20 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods8.incrementNumberAtIndex(intArray20, (int) (byte) 1);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        simpleMethods8.incrementNumberAtIndex(intArray35, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray35, 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods46.incrementNumberAtIndex(intArray58, 1);
        simpleMethods1.incrementNumberAtIndex(intArray58, 0);
        simpleMethods0.incrementNumberAtIndex(intArray58, 0);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray69, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[38, 4, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[39, 3, 97]");
    }

    @Test
    public void test3939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3939");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray47, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[38, 3, 97]");
    }

    @Test
    public void test3940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3940");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        simpleMethods26.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        simpleMethods62.incrementNumberAtIndex(intArray73, 0);
        simpleMethods61.incrementNumberAtIndex(intArray73, 0);
        simpleMethods42.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        simpleMethods26.incrementNumberAtIndex(intArray73, 0);
        simpleMethods19.incrementNumberAtIndex(intArray73, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[40, 4, 97]");
    }

    @Test
    public void test3941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3941");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods0.incrementNumberAtIndex(intArray13, 5);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
    }

    @Test
    public void test3942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3942");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        simpleMethods19.incrementNumberAtIndex(intArray32, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 0);
        simpleMethods43.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[40, 2, 97]");
    }

    @Test
    public void test3943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3943");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray48 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods36.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        simpleMethods52.incrementNumberAtIndex(intArray63, 0);
        simpleMethods51.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods51.incrementNumberAtIndex(intArray82, 0);
        simpleMethods36.incrementNumberAtIndex(intArray82, 3);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray91, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[37, 7, -1, 2, -7]");
    }

    @Test
    public void test3944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3944");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        simpleMethods48.incrementNumberAtIndex(intArray59, 0);
        simpleMethods47.incrementNumberAtIndex(intArray59, 1);
        simpleMethods32.incrementNumberAtIndex(intArray59, (int) (short) 0);
        simpleMethods25.incrementNumberAtIndex(intArray59, 1);
        simpleMethods0.incrementNumberAtIndex(intArray59, (int) (byte) 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[38, 5, 97]");
    }

    @Test
    public void test3945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3945");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 1);
        simpleMethods33.incrementNumberAtIndex(intArray60, (int) (short) 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        int[] intArray73 = new int[] { '#', 2, 'a' };
        simpleMethods69.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods69.incrementNumberAtIndex(intArray82, 5);
        simpleMethods33.incrementNumberAtIndex(intArray82, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3946");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        int[] intArray28 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods16.incrementNumberAtIndex(intArray28, (int) (byte) 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        simpleMethods32.incrementNumberAtIndex(intArray43, 0);
        simpleMethods31.incrementNumberAtIndex(intArray43, 1);
        simpleMethods16.incrementNumberAtIndex(intArray43, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        int[] intArray56 = new int[] { '#', 2, 'a' };
        simpleMethods52.incrementNumberAtIndex(intArray56, 0);
        int[] intArray65 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods52.incrementNumberAtIndex(intArray65, 5);
        simpleMethods16.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray82 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods70.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray82, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[35, 8, -1, 1, -7]");
    }

    @Test
    public void test3947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3947");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 0);
        int[] intArray61 = new int[] { (short) 100, (short) 0, (-1), (-3), ' ', 1 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray61, (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 0, -1, -3, 32, 1]");
    }

    @Test
    public void test3948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3948");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 1);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods21.incrementNumberAtIndex(intArray33, 0);
        simpleMethods20.incrementNumberAtIndex(intArray33, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray33, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        simpleMethods46.incrementNumberAtIndex(intArray57, 0);
        simpleMethods45.incrementNumberAtIndex(intArray57, 0);
        simpleMethods44.incrementNumberAtIndex(intArray57, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        simpleMethods1.incrementNumberAtIndex(intArray72, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods1.incrementNumberAtIndex(intArray81, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 3, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 3, 97]");
    }

    @Test
    public void test3949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3949");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods39.incrementNumberAtIndex(intArray52, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 2);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, (int) (byte) 1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[37, 4, 97]");
    }

    @Test
    public void test3950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3950");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods0.incrementNumberAtIndex(intArray46, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        int[] intArray63 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods51.incrementNumberAtIndex(intArray63, (int) (byte) 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        simpleMethods67.incrementNumberAtIndex(intArray78, 0);
        simpleMethods66.incrementNumberAtIndex(intArray78, 1);
        simpleMethods51.incrementNumberAtIndex(intArray78, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray78, 2);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[32, -10, 0, 0, 101, 11]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[38, 3, 98]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test3951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3951");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 1);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        int[] intArray66 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods54.incrementNumberAtIndex(intArray66, (int) (byte) 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 0);
        simpleMethods69.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods54.incrementNumberAtIndex(intArray82, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray82, (int) (byte) 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[32, -9, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[39, 4, 97]");
    }

    @Test
    public void test3952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3952");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        int[] intArray41 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods29.incrementNumberAtIndex(intArray41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray57 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods44.incrementNumberAtIndex(intArray57, 5);
        simpleMethods29.incrementNumberAtIndex(intArray57, 0);
        simpleMethods22.incrementNumberAtIndex(intArray57, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods0.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods75.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, (int) (byte) 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3953");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods22.incrementNumberAtIndex(intArray69, 5);
        simpleMethods0.incrementNumberAtIndex(intArray69, 5);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 100, 13]");
    }

    @Test
    public void test3954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3954");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods37.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods36.incrementNumberAtIndex(intArray66, 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, (int) (short) 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[42, 2, 97]");
    }

    @Test
    public void test3955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3955");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods55.incrementNumberAtIndex(intArray67, 1);
        simpleMethods40.incrementNumberAtIndex(intArray67, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[39, 3, 97]");
    }

    @Test
    public void test3956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3956");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        simpleMethods47.incrementNumberAtIndex(intArray58, 0);
        simpleMethods40.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        int[] intArray79 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods66.incrementNumberAtIndex(intArray79, 5);
        simpleMethods65.incrementNumberAtIndex(intArray79, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray79, 1);
        simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[34, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3957");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        simpleMethods0.incrementNumberAtIndex(intArray14, (int) (byte) 0);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        int[] intArray25 = new int[] { '#', 2, 'a' };
        simpleMethods21.incrementNumberAtIndex(intArray25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        simpleMethods21.incrementNumberAtIndex(intArray32, 0);
        simpleMethods20.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray51 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods39.incrementNumberAtIndex(intArray51, (int) (byte) 1);
        simpleMethods20.incrementNumberAtIndex(intArray51, 0);
        simpleMethods19.incrementNumberAtIndex(intArray51, (int) (byte) 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        int[] intArray71 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods58.incrementNumberAtIndex(intArray71, 5);
        simpleMethods19.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, (int) (short) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3958");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray47 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods34.incrementNumberAtIndex(intArray47, 5);
        simpleMethods19.incrementNumberAtIndex(intArray47, 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods54.incrementNumberAtIndex(intArray68, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        int[] intArray88 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods75.incrementNumberAtIndex(intArray88, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[33, -10, 0, 0, 100, 12]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3959");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray53 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods41.incrementNumberAtIndex(intArray53, (int) (byte) 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        int[] intArray69 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods56.incrementNumberAtIndex(intArray69, 5);
        simpleMethods41.incrementNumberAtIndex(intArray69, 0);
        simpleMethods22.incrementNumberAtIndex(intArray69, 5);
        simpleMethods0.incrementNumberAtIndex(intArray69, 4);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray78, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[33, -10, 0, 0, 101, 12]");
    }

    @Test
    public void test3960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3960");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 1);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        int[] intArray32 = new int[] { '#', 2, 'a' };
        simpleMethods28.incrementNumberAtIndex(intArray32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        simpleMethods28.incrementNumberAtIndex(intArray39, 0);
        simpleMethods27.incrementNumberAtIndex(intArray39, 0);
        simpleMethods26.incrementNumberAtIndex(intArray39, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray39, (int) (short) 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        simpleMethods50.incrementNumberAtIndex(intArray62, 1);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        simpleMethods50.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[41, 2, 97]");
    }

    @Test
    public void test3961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3961");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        int[] intArray36 = new int[] { '#', 2, 'a' };
        simpleMethods32.incrementNumberAtIndex(intArray36, 0);
        int[] intArray44 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods32.incrementNumberAtIndex(intArray44, (int) (byte) 1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods32.incrementNumberAtIndex(intArray60, 0);
        simpleMethods25.incrementNumberAtIndex(intArray60, 2);
        simpleMethods0.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        simpleMethods70.incrementNumberAtIndex(intArray81, 0);
        simpleMethods69.incrementNumberAtIndex(intArray81, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray81, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34, -10, 1, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[38, 2, 97]");
    }

    @Test
    public void test3962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3962");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        int[] intArray73 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods60.incrementNumberAtIndex(intArray73, 5);
        simpleMethods59.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        simpleMethods40.incrementNumberAtIndex(intArray73, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray73, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3963");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        int[] intArray46 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods34.incrementNumberAtIndex(intArray46, (int) (byte) 1);
        simpleMethods15.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        int[] intArray55 = new int[] { '#', 2, 'a' };
        simpleMethods51.incrementNumberAtIndex(intArray55, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        simpleMethods51.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods67.incrementNumberAtIndex(intArray79, 0);
        simpleMethods51.incrementNumberAtIndex(intArray79, 0);
        simpleMethods15.incrementNumberAtIndex(intArray79, 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[40, 2, 97]");
    }

    @Test
    public void test3964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3964");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray63, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3965");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        simpleMethods23.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        simpleMethods7.incrementNumberAtIndex(intArray54, 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, (int) (short) 1);
        int[] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[40, 3, 97]");
    }

    @Test
    public void test3966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3966");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        simpleMethods34.incrementNumberAtIndex(intArray74, 2);
        simpleMethods33.incrementNumberAtIndex(intArray74, 2);
        simpleMethods0.incrementNumberAtIndex(intArray74, 2);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 100]");
    }

    @Test
    public void test3967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3967");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        simpleMethods8.incrementNumberAtIndex(intArray19, 0);
        simpleMethods7.incrementNumberAtIndex(intArray19, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        simpleMethods40.incrementNumberAtIndex(intArray51, 0);
        simpleMethods33.incrementNumberAtIndex(intArray51, 0);
        simpleMethods26.incrementNumberAtIndex(intArray51, (int) (short) 0);
        simpleMethods7.incrementNumberAtIndex(intArray51, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods0.incrementNumberAtIndex(intArray75, (int) (short) 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[38, 2, 97]");
    }

    @Test
    public void test3968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3968");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods7.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        simpleMethods42.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        simpleMethods42.incrementNumberAtIndex(intArray73, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods42.incrementNumberAtIndex(intArray82, 2);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 98]");
    }

    @Test
    public void test3969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3969");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        int[] intArray30 = new int[] { '#', 2, 'a' };
        simpleMethods26.incrementNumberAtIndex(intArray30, 0);
        int[] intArray39 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods26.incrementNumberAtIndex(intArray39, 5);
        simpleMethods25.incrementNumberAtIndex(intArray39, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        int[] intArray60 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods47.incrementNumberAtIndex(intArray60, 5);
        simpleMethods46.incrementNumberAtIndex(intArray60, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray60, 0);
        int[] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray67, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3970");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        int[] intArray15 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods2.incrementNumberAtIndex(intArray15, 5);
        simpleMethods1.incrementNumberAtIndex(intArray15, (int) (byte) 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        simpleMethods37.incrementNumberAtIndex(intArray48, 0);
        simpleMethods36.incrementNumberAtIndex(intArray48, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, 1);
        simpleMethods36.incrementNumberAtIndex(intArray83, 5);
        simpleMethods20.incrementNumberAtIndex(intArray83, 1);
        simpleMethods1.incrementNumberAtIndex(intArray83, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[32, -7, 0, 0, 100, 12]");
    }

    @Test
    public void test3971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3971");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 2);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray55, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[39, 3, 98]");
    }

    @Test
    public void test3972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3972");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        simpleMethods24.incrementNumberAtIndex(intArray35, 0);
        simpleMethods23.incrementNumberAtIndex(intArray35, 0);
        simpleMethods22.incrementNumberAtIndex(intArray35, 0);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        int[] intArray50 = new int[] { '#', 2, 'a' };
        simpleMethods46.incrementNumberAtIndex(intArray50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        simpleMethods54.incrementNumberAtIndex(intArray65, 0);
        simpleMethods53.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray84 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods72.incrementNumberAtIndex(intArray84, (int) (byte) 1);
        simpleMethods53.incrementNumberAtIndex(intArray84, 0);
        simpleMethods46.incrementNumberAtIndex(intArray84, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[39, 3, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[36, 8, -1, 1, -7]");
    }

    @Test
    public void test3973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3973");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        simpleMethods20.incrementNumberAtIndex(intArray31, 0);
        simpleMethods19.incrementNumberAtIndex(intArray31, 0);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (byte) 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray71, 0);
        simpleMethods0.incrementNumberAtIndex(intArray71, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        int[] intArray91 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods78.incrementNumberAtIndex(intArray91, 5);
        simpleMethods0.incrementNumberAtIndex(intArray91, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3974");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        int[] intArray52 = new int[] { '#', 2, 'a' };
        simpleMethods48.incrementNumberAtIndex(intArray52, 0);
        simpleMethods41.incrementNumberAtIndex(intArray52, 0);
        simpleMethods40.incrementNumberAtIndex(intArray52, 0);
        simpleMethods39.incrementNumberAtIndex(intArray52, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray52, 2);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        int[] intArray68 = new int[] { '#', 2, 'a' };
        simpleMethods64.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        simpleMethods64.incrementNumberAtIndex(intArray75, 0);
        simpleMethods63.incrementNumberAtIndex(intArray75, 1);
        simpleMethods0.incrementNumberAtIndex(intArray75, (int) (byte) 1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray84, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[39, 2, 98]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[37, 4, 97]");
    }

    @Test
    public void test3975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3975");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        int[] intArray14 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods1.incrementNumberAtIndex(intArray14, 5);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray46 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods33.incrementNumberAtIndex(intArray46, 5);
        simpleMethods17.incrementNumberAtIndex(intArray46, (int) (short) 1);
        simpleMethods1.incrementNumberAtIndex(intArray46, (int) (short) 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        int[] intArray81 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods68.incrementNumberAtIndex(intArray81, 5);
        simpleMethods53.incrementNumberAtIndex(intArray81, 0);
        simpleMethods1.incrementNumberAtIndex(intArray81, 0);
        simpleMethods0.incrementNumberAtIndex(intArray81, (int) (byte) 0);
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[35, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test3976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3976");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (short) 1);
        int[] intArray95 = new int[] { 10, (-4), 10 };
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray95, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[10, -4, 10]");
    }

    @Test
    public void test3977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3977");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, (int) (short) 1);
        simpleMethods43.incrementNumberAtIndex(intArray87, 1);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3978");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        simpleMethods36.incrementNumberAtIndex(intArray47, 0);
        simpleMethods35.incrementNumberAtIndex(intArray47, 0);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[37, 7, -1, 1, -7]");
    }

    @Test
    public void test3979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3979");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        int[] intArray46 = new int[] { '#', 2, 'a' };
        simpleMethods42.incrementNumberAtIndex(intArray46, 0);
        simpleMethods35.incrementNumberAtIndex(intArray46, 0);
        simpleMethods34.incrementNumberAtIndex(intArray46, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray65 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods53.incrementNumberAtIndex(intArray65, (int) (byte) 1);
        simpleMethods34.incrementNumberAtIndex(intArray65, 0);
        simpleMethods33.incrementNumberAtIndex(intArray65, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray65, (int) (short) 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        int[] intArray87 = new int[] { '#', 2, 'a' };
        simpleMethods83.incrementNumberAtIndex(intArray87, 0);
        simpleMethods76.incrementNumberAtIndex(intArray87, 0);
        simpleMethods75.incrementNumberAtIndex(intArray87, 0);
        simpleMethods74.incrementNumberAtIndex(intArray87, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray87, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[38, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[39, 2, 97]");
    }

    @Test
    public void test3980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3980");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 1);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods21.incrementNumberAtIndex(intArray33, 0);
        simpleMethods20.incrementNumberAtIndex(intArray33, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray33, (int) (short) 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        int[] intArray48 = new int[] { '#', 2, 'a' };
        simpleMethods44.incrementNumberAtIndex(intArray48, 0);
        int[] intArray56 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods44.incrementNumberAtIndex(intArray56, (int) (byte) 1);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        simpleMethods60.incrementNumberAtIndex(intArray71, 0);
        simpleMethods59.incrementNumberAtIndex(intArray71, 1);
        simpleMethods44.incrementNumberAtIndex(intArray71, (int) (short) 0);
        simpleMethods1.incrementNumberAtIndex(intArray71, 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray71, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[38, 4, 97]");
    }

    @Test
    public void test3981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3981");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray52, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[32, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3982");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods57.incrementNumberAtIndex(intArray85, 0);
        simpleMethods50.incrementNumberAtIndex(intArray85, 2);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray94, (-6));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 8, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[34, -10, 1, 0, 100, 11]");
    }

    @Test
    public void test3983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3983");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        int[] intArray22 = new int[] { '#', 2, 'a' };
        simpleMethods18.incrementNumberAtIndex(intArray22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        int[] intArray29 = new int[] { '#', 2, 'a' };
        simpleMethods25.incrementNumberAtIndex(intArray29, 0);
        simpleMethods18.incrementNumberAtIndex(intArray29, 0);
        simpleMethods17.incrementNumberAtIndex(intArray29, 0);
        simpleMethods16.incrementNumberAtIndex(intArray29, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray29, (int) (short) 0);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray40, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[40, 2, 97]");
    }

    @Test
    public void test3984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3984");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray38, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods56.incrementNumberAtIndex(intArray67, 0);
        simpleMethods49.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, 1);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray76, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[40, 2, 97]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[38, 3, 97]");
    }

    @Test
    public void test3985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3985");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        int[] intArray30 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods17.incrementNumberAtIndex(intArray30, 5);
        simpleMethods16.incrementNumberAtIndex(intArray30, (int) (byte) 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods35.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods16.incrementNumberAtIndex(intArray49, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray49, 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        int[] intArray62 = new int[] { '#', 2, 'a' };
        simpleMethods58.incrementNumberAtIndex(intArray62, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        int[] intArray69 = new int[] { '#', 2, 'a' };
        simpleMethods65.incrementNumberAtIndex(intArray69, 0);
        simpleMethods58.incrementNumberAtIndex(intArray69, 0);
        simpleMethods0.incrementNumberAtIndex(intArray69, 2);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        int[] intArray88 = new int[] { '#', 2, 'a' };
        simpleMethods84.incrementNumberAtIndex(intArray88, 0);
        simpleMethods77.incrementNumberAtIndex(intArray88, 0);
        simpleMethods76.incrementNumberAtIndex(intArray88, 1);
        simpleMethods0.incrementNumberAtIndex(intArray88, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray97, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[34, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[37, 2, 98]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[38, 3, 97]");
    }

    @Test
    public void test3986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3986");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        simpleMethods16.incrementNumberAtIndex(intArray27, 0);
        simpleMethods15.incrementNumberAtIndex(intArray27, 1);
        simpleMethods0.incrementNumberAtIndex(intArray27, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        int[] intArray40 = new int[] { '#', 2, 'a' };
        simpleMethods36.incrementNumberAtIndex(intArray40, 0);
        int[] intArray49 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods36.incrementNumberAtIndex(intArray49, 5);
        simpleMethods0.incrementNumberAtIndex(intArray49, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        int[] intArray58 = new int[] { '#', 2, 'a' };
        simpleMethods54.incrementNumberAtIndex(intArray58, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        int[] intArray72 = new int[] { '#', 2, 'a' };
        simpleMethods68.incrementNumberAtIndex(intArray72, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        int[] intArray79 = new int[] { '#', 2, 'a' };
        simpleMethods75.incrementNumberAtIndex(intArray79, 0);
        simpleMethods68.incrementNumberAtIndex(intArray79, 0);
        simpleMethods61.incrementNumberAtIndex(intArray79, 0);
        simpleMethods54.incrementNumberAtIndex(intArray79, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[39, 2, 97]");
    }

    @Test
    public void test3987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3987");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        simpleMethods43.incrementNumberAtIndex(intArray54, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        int[] intArray71 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods59.incrementNumberAtIndex(intArray71, (int) (byte) 1);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods59.incrementNumberAtIndex(intArray87, (int) (short) 1);
        simpleMethods43.incrementNumberAtIndex(intArray87, 1);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3988");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        int[] intArray33 = new int[] { '#', 2, 'a' };
        simpleMethods29.incrementNumberAtIndex(intArray33, 0);
        simpleMethods22.incrementNumberAtIndex(intArray33, 0);
        simpleMethods0.incrementNumberAtIndex(intArray33, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        int[] intArray44 = new int[] { '#', 2, 'a' };
        simpleMethods40.incrementNumberAtIndex(intArray44, 0);
        int[] intArray52 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods40.incrementNumberAtIndex(intArray52, (int) (byte) 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray68 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods55.incrementNumberAtIndex(intArray68, 5);
        simpleMethods40.incrementNumberAtIndex(intArray68, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        int[] intArray85 = new int[] { '#', 2, 'a' };
        simpleMethods81.incrementNumberAtIndex(intArray85, 0);
        simpleMethods74.incrementNumberAtIndex(intArray85, 0);
        simpleMethods73.incrementNumberAtIndex(intArray85, 1);
        simpleMethods40.incrementNumberAtIndex(intArray85, 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, (int) (byte) 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[33, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[38, 4, 97]");
    }

    @Test
    public void test3989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3989");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray35 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods22.incrementNumberAtIndex(intArray35, 5);
        simpleMethods0.incrementNumberAtIndex(intArray35, (int) (short) 1);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        int[] intArray45 = new int[] { '#', 2, 'a' };
        simpleMethods41.incrementNumberAtIndex(intArray45, 0);
        int[] intArray54 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods41.incrementNumberAtIndex(intArray54, 5);
        simpleMethods40.incrementNumberAtIndex(intArray54, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray54, 1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        int[] intArray65 = new int[] { '#', 2, 'a' };
        simpleMethods61.incrementNumberAtIndex(intArray65, 0);
        int[] intArray73 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods61.incrementNumberAtIndex(intArray73, (int) (byte) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        int[] intArray80 = new int[] { '#', 2, 'a' };
        simpleMethods76.incrementNumberAtIndex(intArray80, 0);
        int[] intArray89 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods76.incrementNumberAtIndex(intArray89, 5);
        simpleMethods61.incrementNumberAtIndex(intArray89, 0);
        simpleMethods0.incrementNumberAtIndex(intArray89, 5);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[33, -10, 0, 0, 100, 12]");
    }

    @Test
    public void test3990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3990");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray12 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods0.incrementNumberAtIndex(intArray12, (int) (byte) 1);
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        int[] intArray19 = new int[] { '#', 2, 'a' };
        simpleMethods15.incrementNumberAtIndex(intArray19, 0);
        int[] intArray28 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods15.incrementNumberAtIndex(intArray28, 5);
        simpleMethods0.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        int[] intArray37 = new int[] { '#', 2, 'a' };
        simpleMethods33.incrementNumberAtIndex(intArray37, 0);
        int[] intArray45 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods33.incrementNumberAtIndex(intArray45, (int) (byte) 1);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        int[] intArray53 = new int[] { '#', 2, 'a' };
        simpleMethods49.incrementNumberAtIndex(intArray53, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        int[] intArray60 = new int[] { '#', 2, 'a' };
        simpleMethods56.incrementNumberAtIndex(intArray60, 0);
        simpleMethods49.incrementNumberAtIndex(intArray60, 0);
        simpleMethods48.incrementNumberAtIndex(intArray60, 0);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        int[] intArray71 = new int[] { '#', 2, 'a' };
        simpleMethods67.incrementNumberAtIndex(intArray71, 0);
        int[] intArray79 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods67.incrementNumberAtIndex(intArray79, (int) (byte) 1);
        simpleMethods48.incrementNumberAtIndex(intArray79, 0);
        simpleMethods33.incrementNumberAtIndex(intArray79, 3);
        simpleMethods0.incrementNumberAtIndex(intArray79, 3);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray88, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[36, 7, -1, 3, -7]");
    }

    @Test
    public void test3991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3991");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        int[] intArray19 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods7.incrementNumberAtIndex(intArray19, (int) (byte) 1);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods22.incrementNumberAtIndex(intArray34, 1);
        simpleMethods7.incrementNumberAtIndex(intArray34, (int) (short) 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray56 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods43.incrementNumberAtIndex(intArray56, 5);
        simpleMethods7.incrementNumberAtIndex(intArray56, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray56, 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        int[] intArray67 = new int[] { '#', 2, 'a' };
        simpleMethods63.incrementNumberAtIndex(intArray67, 0);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray72, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[38, 3, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[37, 2, 97]");
    }

    @Test
    public void test3992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3992");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        simpleMethods9.incrementNumberAtIndex(intArray20, 0);
        simpleMethods8.incrementNumberAtIndex(intArray20, 0);
        simpleMethods7.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        int[] intArray35 = new int[] { '#', 2, 'a' };
        simpleMethods31.incrementNumberAtIndex(intArray35, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        int[] intArray42 = new int[] { '#', 2, 'a' };
        simpleMethods38.incrementNumberAtIndex(intArray42, 0);
        simpleMethods31.incrementNumberAtIndex(intArray42, 0);
        simpleMethods30.incrementNumberAtIndex(intArray42, 0);
        simpleMethods29.incrementNumberAtIndex(intArray42, 0);
        simpleMethods7.incrementNumberAtIndex(intArray42, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray42, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        int[] intArray74 = new int[] { '#', 2, 'a' };
        simpleMethods70.incrementNumberAtIndex(intArray74, 0);
        int[] intArray83 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods70.incrementNumberAtIndex(intArray83, 5);
        simpleMethods55.incrementNumberAtIndex(intArray83, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray83, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[40, 3, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[32, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3993");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray31 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods19.incrementNumberAtIndex(intArray31, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray31, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods36.incrementNumberAtIndex(intArray50, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray50, (int) (short) 0);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        int[] intArray61 = new int[] { '#', 2, 'a' };
        simpleMethods57.incrementNumberAtIndex(intArray61, 0);
        int[] intArray69 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods57.incrementNumberAtIndex(intArray69, (int) (byte) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        int[] intArray76 = new int[] { '#', 2, 'a' };
        simpleMethods72.incrementNumberAtIndex(intArray76, 0);
        int[] intArray85 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods72.incrementNumberAtIndex(intArray85, 5);
        simpleMethods57.incrementNumberAtIndex(intArray85, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray85, 0);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[33, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test3994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3994");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        int[] intArray24 = new int[] { '#', 2, 'a' };
        simpleMethods20.incrementNumberAtIndex(intArray24, 0);
        int[] intArray32 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods20.incrementNumberAtIndex(intArray32, (int) (byte) 1);
        simpleMethods1.incrementNumberAtIndex(intArray32, 0);
        simpleMethods0.incrementNumberAtIndex(intArray32, (int) (byte) 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        int[] intArray43 = new int[] { '#', 2, 'a' };
        simpleMethods39.incrementNumberAtIndex(intArray43, 0);
        int[] intArray52 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods39.incrementNumberAtIndex(intArray52, 5);
        simpleMethods0.incrementNumberAtIndex(intArray52, 0);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray57, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[37, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[33, -10, 0, 0, 100, 11]");
    }

    @Test
    public void test3995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3995");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        int[] intArray13 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods0.incrementNumberAtIndex(intArray13, (int) (short) 1);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        simpleMethods16.incrementNumberAtIndex(intArray47, (int) (short) 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        int[] intArray64 = new int[] { '#', 2, 'a' };
        simpleMethods60.incrementNumberAtIndex(intArray64, 0);
        simpleMethods53.incrementNumberAtIndex(intArray64, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        int[] intArray75 = new int[] { '#', 2, 'a' };
        simpleMethods71.incrementNumberAtIndex(intArray75, 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        int[] intArray82 = new int[] { '#', 2, 'a' };
        simpleMethods78.incrementNumberAtIndex(intArray82, 0);
        simpleMethods71.incrementNumberAtIndex(intArray82, 0);
        simpleMethods70.incrementNumberAtIndex(intArray82, 0);
        simpleMethods69.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods53.incrementNumberAtIndex(intArray82, (int) (short) 0);
        simpleMethods52.incrementNumberAtIndex(intArray82, 0);
        simpleMethods16.incrementNumberAtIndex(intArray82, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray82, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[9, 2, 1, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[42, 2, 97]");
    }

    @Test
    public void test3996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3996");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        int[] intArray5 = new int[] { '#', 2, 'a' };
        simpleMethods1.incrementNumberAtIndex(intArray5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        int[] intArray12 = new int[] { '#', 2, 'a' };
        simpleMethods8.incrementNumberAtIndex(intArray12, 0);
        simpleMethods1.incrementNumberAtIndex(intArray12, 0);
        simpleMethods0.incrementNumberAtIndex(intArray12, 1);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        int[] intArray23 = new int[] { '#', 2, 'a' };
        simpleMethods19.incrementNumberAtIndex(intArray23, 0);
        int[] intArray32 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods19.incrementNumberAtIndex(intArray32, 5);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray47 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods35.incrementNumberAtIndex(intArray47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        int[] intArray54 = new int[] { '#', 2, 'a' };
        simpleMethods50.incrementNumberAtIndex(intArray54, 0);
        int[] intArray63 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods50.incrementNumberAtIndex(intArray63, 5);
        simpleMethods35.incrementNumberAtIndex(intArray63, 0);
        simpleMethods19.incrementNumberAtIndex(intArray63, (int) (short) 1);
        simpleMethods0.incrementNumberAtIndex(intArray63, (int) (short) 1);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray86 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods73.incrementNumberAtIndex(intArray86, 5);
        simpleMethods72.incrementNumberAtIndex(intArray86, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray86, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray93, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[33, -8, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[33, -9, 0, 0, 100, 11]");
    }

    @Test
    public void test3997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3997");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        int[] intArray6 = new int[] { '#', 2, 'a' };
        simpleMethods2.incrementNumberAtIndex(intArray6, 0);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        int[] intArray13 = new int[] { '#', 2, 'a' };
        simpleMethods9.incrementNumberAtIndex(intArray13, 0);
        simpleMethods2.incrementNumberAtIndex(intArray13, 0);
        simpleMethods1.incrementNumberAtIndex(intArray13, 0);
        simpleMethods0.incrementNumberAtIndex(intArray13, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        int[] intArray26 = new int[] { '#', 2, 'a' };
        simpleMethods22.incrementNumberAtIndex(intArray26, 0);
        int[] intArray34 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods22.incrementNumberAtIndex(intArray34, (int) (byte) 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        int[] intArray41 = new int[] { '#', 2, 'a' };
        simpleMethods37.incrementNumberAtIndex(intArray41, 0);
        int[] intArray50 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods37.incrementNumberAtIndex(intArray50, 5);
        simpleMethods22.incrementNumberAtIndex(intArray50, 1);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        int[] intArray67 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods55.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods22.incrementNumberAtIndex(intArray67, (int) (byte) 1);
        simpleMethods0.incrementNumberAtIndex(intArray67, (int) (short) 1);
        int[] intArray76 = new int[] { 10, (-8) };
        simpleMethods0.incrementNumberAtIndex(intArray76, 0);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray79, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[35, 9, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[11, -8]");
    }

    @Test
    public void test3998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3998");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        int[] intArray20 = new int[] { '#', 2, 'a' };
        simpleMethods16.incrementNumberAtIndex(intArray20, 0);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        int[] intArray27 = new int[] { '#', 2, 'a' };
        simpleMethods23.incrementNumberAtIndex(intArray27, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        int[] intArray34 = new int[] { '#', 2, 'a' };
        simpleMethods30.incrementNumberAtIndex(intArray34, 0);
        simpleMethods23.incrementNumberAtIndex(intArray34, 0);
        simpleMethods16.incrementNumberAtIndex(intArray34, 0);
        simpleMethods0.incrementNumberAtIndex(intArray34, 0);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        int[] intArray47 = new int[] { '#', 2, 'a' };
        simpleMethods43.incrementNumberAtIndex(intArray47, 0);
        int[] intArray55 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods43.incrementNumberAtIndex(intArray55, (int) (byte) 1);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        int[] intArray63 = new int[] { '#', 2, 'a' };
        simpleMethods59.incrementNumberAtIndex(intArray63, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        int[] intArray70 = new int[] { '#', 2, 'a' };
        simpleMethods66.incrementNumberAtIndex(intArray70, 0);
        simpleMethods59.incrementNumberAtIndex(intArray70, 0);
        simpleMethods58.incrementNumberAtIndex(intArray70, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        int[] intArray81 = new int[] { '#', 2, 'a' };
        simpleMethods77.incrementNumberAtIndex(intArray81, 0);
        int[] intArray89 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods77.incrementNumberAtIndex(intArray89, (int) (byte) 1);
        simpleMethods58.incrementNumberAtIndex(intArray89, 0);
        simpleMethods43.incrementNumberAtIndex(intArray89, 3);
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray89, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[35, 7, -1, 1, -7]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[36, 7, -1, 2, -7]");
    }

    @Test
    public void test3999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3999");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        simpleMethods0.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        int[] intArray21 = new int[] { '#', 2, 'a' };
        simpleMethods17.incrementNumberAtIndex(intArray21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        int[] intArray28 = new int[] { '#', 2, 'a' };
        simpleMethods24.incrementNumberAtIndex(intArray28, 0);
        simpleMethods17.incrementNumberAtIndex(intArray28, 0);
        simpleMethods16.incrementNumberAtIndex(intArray28, 1);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        int[] intArray39 = new int[] { '#', 2, 'a' };
        simpleMethods35.incrementNumberAtIndex(intArray39, 0);
        int[] intArray48 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods35.incrementNumberAtIndex(intArray48, 5);
        simpleMethods16.incrementNumberAtIndex(intArray48, (int) (byte) 1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        int[] intArray57 = new int[] { '#', 2, 'a' };
        simpleMethods53.incrementNumberAtIndex(intArray57, 0);
        int[] intArray66 = new int[] { 9, 1, 1, (-2), (-1), 2 };
        simpleMethods53.incrementNumberAtIndex(intArray66, (int) (short) 1);
        simpleMethods16.incrementNumberAtIndex(intArray66, (int) (short) 0);
        simpleMethods0.incrementNumberAtIndex(intArray66, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        int[] intArray78 = new int[] { '#', 2, 'a' };
        simpleMethods74.incrementNumberAtIndex(intArray78, 0);
        int[] intArray87 = new int[] { ' ', (-10), 0, (short) 0, 100, (byte) 10 };
        simpleMethods74.incrementNumberAtIndex(intArray87, 5);
        simpleMethods73.incrementNumberAtIndex(intArray87, (int) (byte) 0);
        simpleMethods0.incrementNumberAtIndex(intArray87, 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[37, 2, 97]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[37, 3, 97]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, -9, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[10, 2, 2, -2, -1, 2]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[34, -10, 0, 0, 100, 11]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test4000");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        int[] intArray4 = new int[] { '#', 2, 'a' };
        simpleMethods0.incrementNumberAtIndex(intArray4, 0);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        int[] intArray11 = new int[] { '#', 2, 'a' };
        simpleMethods7.incrementNumberAtIndex(intArray11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        int[] intArray18 = new int[] { '#', 2, 'a' };
        simpleMethods14.incrementNumberAtIndex(intArray18, 0);
        simpleMethods7.incrementNumberAtIndex(intArray18, 0);
        simpleMethods0.incrementNumberAtIndex(intArray18, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        int[] intArray31 = new int[] { '#', 2, 'a' };
        simpleMethods27.incrementNumberAtIndex(intArray31, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        int[] intArray38 = new int[] { '#', 2, 'a' };
        simpleMethods34.incrementNumberAtIndex(intArray38, 0);
        simpleMethods27.incrementNumberAtIndex(intArray38, 0);
        simpleMethods26.incrementNumberAtIndex(intArray38, 0);
        simpleMethods25.incrementNumberAtIndex(intArray38, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        int[] intArray51 = new int[] { '#', 2, 'a' };
        simpleMethods47.incrementNumberAtIndex(intArray51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        int[] intArray59 = new int[] { '#', 2, 'a' };
        simpleMethods55.incrementNumberAtIndex(intArray59, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        int[] intArray66 = new int[] { '#', 2, 'a' };
        simpleMethods62.incrementNumberAtIndex(intArray66, 0);
        simpleMethods55.incrementNumberAtIndex(intArray66, 0);
        simpleMethods54.incrementNumberAtIndex(intArray66, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        int[] intArray77 = new int[] { '#', 2, 'a' };
        simpleMethods73.incrementNumberAtIndex(intArray77, 0);
        int[] intArray85 = new int[] { '#', 6, (-1), 1, (-7) };
        simpleMethods73.incrementNumberAtIndex(intArray85, (int) (byte) 1);
        simpleMethods54.incrementNumberAtIndex(intArray85, 0);
        simpleMethods47.incrementNumberAtIndex(intArray85, 1);
        simpleMethods25.incrementNumberAtIndex(intArray85, 2);
        simpleMethods0.incrementNumberAtIndex(intArray85, 4);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            simpleMethods0.incrementNumberAtIndex(intArray96, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[39, 2, 97]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[38, 2, 97]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[36, 2, 97]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[36, 8, 0, 1, -6]");
    }
}

