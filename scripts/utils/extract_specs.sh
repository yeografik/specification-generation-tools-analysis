#!/bin/bash

#checks if the current specification is the class invariant and has the trivial
#specification "this != null"
#$1 specification type, $2 specification content at the current line
function check_trivial_invariant() {
    trivial_invariant=false
    if [[ "$1" == "class_cond" && "$2" == "this != null" ]]; then
        trivial_invariant=true
    fi
}

#adds conditions of the same type with &&
#$1 the variable where the specification will be added
#$2 the content of the current line being read
function add_condition() {
    check_trivial_invariant $1 "$2"
    if $trivial_invariant ; then
        return
    else
        local -n ref=$1
        if [ "$ref" == "" ]; then
            ref="($2)"
        else
            ref="$ref && ($2)"
        fi
    fi
}

#adds additional conditions to a condition with &&
function join_condition() {
    local -n final_cond=$2
    if [ "$final_cond" == "" ]; then
        final_cond="$1"
    elif [ "$1" != "" ]; then
        final_cond="$final_cond && $1"
    fi
}

#adds additional conditions to a condition in an array with &&
function join_post_conditions() {
    local -n final_conds=$2
    
    for i in "${!final_conds[@]}";
    do
        if [ "${final_conds[$i]}" == "" ]; then
            final_conds[$i]="$1"
        elif [ "$1" != "" ]; then
            final_conds[$i]="${final_conds[$i]} && ($1)"
        fi
    done
}

#Reads the specifications generated by Daikon and separates them into:
#postcondition, precondition and class invariant. Then groups them into
#precondition and postcondition only
#the results remain in the variables and are read from the calling script

class_cond=""
post_cond=""
cond=""
#loop through lines of the specifications file and add them togheter
while read -r line; do
    if [[ $line == *"OBJECT"* ]]; then
        cond='class_cond'
    elif [[ $line == *"ENTER"* ]]; then
        cond='pre_cond'
    elif [[ $line == *"EXIT"* ]]; then
        cond='post_cond'
    elif [[ $line != *"===="* ]]; then
        add_condition $cond "$line"
    fi #on case of ==== line, do nothing
done <$specs

#add class condition to pre and post conditions
join_condition "$class_cond" pre_cond
join_condition "$class_cond" post_cond
join_post_conditions "$post_cond" post_conds
